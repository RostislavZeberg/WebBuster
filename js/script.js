/*!
 * dist/inputmask.min
 * https://github.com/RobinHerbots/Inputmask
 * Copyright (c) 2010 - 2023 Robin Herbots
 * Licensed under the MIT license
 * Version: 5.0.8-beta.72
 */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var a in i)("object"==typeof exports?exports:e)[a]=i[a]}}("undefined"!=typeof self?self:this,(function(){return function(){"use strict";var e={8741:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=i},3976:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(2839),n={_maxTestPos:500,placeholder:"_",optionalmarker:["[","]"],quantifiermarker:["{","}"],groupmarker:["(",")"],alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:function(){},onincomplete:function(){},oncleared:function(){},repeat:0,greedy:!1,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,insertModeVisual:!0,clearIncomplete:!1,alias:null,onKeyDown:function(){},onBeforeMask:null,onBeforePaste:function(e,t){return"function"==typeof t.onBeforeMask?t.onBeforeMask.call(this,e,t):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:function(){},skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",_radixDance:!1,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","url","password","search"],ignorables:[a.keys.Backspace,a.keys.Tab,a.keys.Pause,a.keys.Escape,a.keys.PageUp,a.keys.PageDown,a.keys.End,a.keys.Home,a.keys.ArrowLeft,a.keys.ArrowUp,a.keys.ArrowRight,a.keys.ArrowDown,a.keys.Insert,a.keys.Delete,a.keys.ContextMenu,a.keys.F1,a.keys.F2,a.keys.F3,a.keys.F4,a.keys.F5,a.keys.F6,a.keys.F7,a.keys.F8,a.keys.F9,a.keys.F10,a.keys.F11,a.keys.F12,a.keys.Process,a.keys.Unidentified,a.keys.Shift,a.keys.Control,a.keys.Alt,a.keys.Tab,a.keys.AltGraph,a.keys.CapsLock],isComplete:null,preValidation:null,postValidation:null,staticDefinitionSymbol:void 0,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"text",importDataAttributes:!0,shiftPositions:!0,usePrototypeDefinitions:!0,validationEventTimeOut:3e3,substitutes:{}};t.default=n},7392:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default={9:{validator:"[0-9\uff10-\uff19]",definitionSymbol:"*"},a:{validator:"[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",definitionSymbol:"*"},"*":{validator:"[0-9\uff10-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]"}}},253:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i){if(void 0===i)return e.__data?e.__data[t]:null;e.__data=e.__data||{},e.__data[t]=i}},3776:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.Event=void 0,t.off=function(e,t){var i,a;function n(e,t,n){if(e in i==!0)if(a.removeEventListener?a.removeEventListener(e,n,!1):a.detachEvent&&a.detachEvent("on"+e,n),"global"===t)for(var r in i[e])i[e][r].splice(i[e][r].indexOf(n),1);else i[e][t].splice(i[e][t].indexOf(n),1)}function r(e,a){var n,r,o=[];if(e.length>0)if(void 0===t)for(n=0,r=i[e][a].length;n<r;n++)o.push({ev:e,namespace:a&&a.length>0?a:"global",handler:i[e][a][n]});else o.push({ev:e,namespace:a&&a.length>0?a:"global",handler:t});else if(a.length>0)for(var s in i)for(var l in i[s])if(l===a)if(void 0===t)for(n=0,r=i[s][l].length;n<r;n++)o.push({ev:s,namespace:l,handler:i[s][l][n]});else o.push({ev:s,namespace:l,handler:t});return o}if(c(this[0])&&e){i=this[0].eventRegistry,a=this[0];for(var o=e.split(" "),s=0;s<o.length;s++)for(var l=o[s].split("."),u=r(l[0],l[1]),f=0,d=u.length;f<d;f++)n(u[f].ev,u[f].namespace,u[f].handler)}return this},t.on=function(e,t){function i(e,i){n.addEventListener?n.addEventListener(e,t,!1):n.attachEvent&&n.attachEvent("on"+e,t),a[e]=a[e]||{},a[e][i]=a[e][i]||[],a[e][i].push(t)}if(c(this[0]))for(var a=this[0].eventRegistry,n=this[0],r=e.split(" "),o=0;o<r.length;o++){var s=r[o].split("."),l=s[0],u=s[1]||"global";i(l,u)}return this},t.trigger=function(e){if(c(this[0]))for(var t=this[0].eventRegistry,i=this[0],a="string"==typeof e?e.split(" "):[e.type],r=0;r<a.length;r++){var s=a[r].split("."),l=s[0],u=s[1]||"global";if(void 0!==document&&"global"===u){var f,d,p={bubbles:!0,cancelable:!0,composed:!0,detail:arguments[1]};if(document.createEvent){try{if("input"===l)p.inputType="insertText",f=new InputEvent(l,p);else f=new CustomEvent(l,p)}catch(e){(f=document.createEvent("CustomEvent")).initCustomEvent(l,p.bubbles,p.cancelable,p.detail)}e.type&&(0,n.default)(f,e),i.dispatchEvent(f)}else(f=document.createEventObject()).eventType=l,f.detail=arguments[1],e.type&&(0,n.default)(f,e),i.fireEvent("on"+f.eventType,f)}else if(void 0!==t[l])if(arguments[0]=arguments[0].type?arguments[0]:o.default.Event(arguments[0]),arguments[0].detail=arguments.slice(1),"global"===u)for(var h in t[l])for(d=0;d<t[l][h].length;d++)t[l][h][d].apply(i,arguments);else for(d=0;d<t[l][u].length;d++)t[l][u][d].apply(i,arguments)}return this};var a,n=l(i(600)),r=l(i(9380)),o=l(i(4963)),s=l(i(8741));function l(e){return e&&e.__esModule?e:{default:e}}function c(e){return e instanceof Element}t.Event=a,"function"==typeof r.default.CustomEvent?t.Event=a=r.default.CustomEvent:s.default&&(t.Event=a=function(e,t){t=t||{bubbles:!1,cancelable:!1,composed:!0,detail:void 0};var i=document.createEvent("CustomEvent");return i.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),i},a.prototype=r.default.Event.prototype)},600:function(e,t){function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(){var t,a,n,r,o,s,l=arguments[0]||{},c=1,u=arguments.length,f=!1;"boolean"==typeof l&&(f=l,l=arguments[c]||{},c++);"object"!==i(l)&&"function"!=typeof l&&(l={});for(;c<u;c++)if(null!=(t=arguments[c]))for(a in t)n=l[a],r=t[a],l!==r&&(f&&r&&("[object Object]"===Object.prototype.toString.call(r)||(o=Array.isArray(r)))?(o?(o=!1,s=n&&Array.isArray(n)?n:[]):s=n&&"[object Object]"===Object.prototype.toString.call(n)?n:{},l[a]=e(f,s,r)):void 0!==r&&(l[a]=r));return l}},4963:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=s(i(600)),n=s(i(9380)),r=s(i(253)),o=i(3776);function s(e){return e&&e.__esModule?e:{default:e}}var l=n.default.document;function c(e){return e instanceof c?e:this instanceof c?void(null!=e&&e!==n.default&&(this[0]=e.nodeName?e:void 0!==e[0]&&e[0].nodeName?e[0]:l.querySelector(e),void 0!==this[0]&&null!==this[0]&&(this[0].eventRegistry=this[0].eventRegistry||{}))):new c(e)}c.prototype={on:o.on,off:o.off,trigger:o.trigger},c.extend=a.default,c.data=r.default,c.Event=o.Event;var u=c;t.default=u},9845:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.mobile=t.iphone=t.ie=void 0;var a,n=(a=i(9380))&&a.__esModule?a:{default:a};var r=n.default.navigator&&n.default.navigator.userAgent||"",o=r.indexOf("MSIE ")>0||r.indexOf("Trident/")>0,s=navigator.userAgentData&&navigator.userAgentData.mobile||n.default.navigator&&n.default.navigator.maxTouchPoints||"ontouchstart"in n.default,l=/iphone/i.test(r);t.iphone=l,t.mobile=s,t.ie=o},7184:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.replace(i,"\\$1")};var i=new RegExp("(\\"+["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"].join("|\\")+")","gim")},6030:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.EventHandlers=void 0;var a=i(8711),n=i(2839),r=i(9845),o=i(7215),s=i(7760),l=i(4713);function c(e,t){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!i){if(Array.isArray(e)||(i=function(e,t){if(!e)return;if("string"==typeof e)return u(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);"Object"===i&&e.constructor&&(i=e.constructor.name);if("Map"===i||"Set"===i)return Array.from(e);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return u(e,t)}(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var a=0,n=function(){};return{s:n,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,s=!1;return{s:function(){i=i.call(e)},n:function(){var e=i.next();return o=e.done,e},e:function(e){s=!0,r=e},f:function(){try{o||null==i.return||i.return()}finally{if(s)throw r}}}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}var f={keyEvent:function(e,t,i,c,u){var d=this.inputmask,p=d.opts,h=d.dependencyLib,v=d.maskset,m=this,g=h(m),k=e.key,y=a.caret.call(d,m),b=p.onKeyDown.call(this,e,a.getBuffer.call(d),y,p);if(void 0!==b)return b;if(k===n.keys.Backspace||k===n.keys.Delete||r.iphone&&k===n.keys.BACKSPACE_SAFARI||e.ctrlKey&&k===n.keys.x&&!("oncut"in m))e.preventDefault(),o.handleRemove.call(d,m,k,y),(0,s.writeBuffer)(m,a.getBuffer.call(d,!0),v.p,e,m.inputmask._valueGet()!==a.getBuffer.call(d).join(""));else if(k===n.keys.End||k===n.keys.PageDown){e.preventDefault();var x=a.seekNext.call(d,a.getLastValidPosition.call(d));a.caret.call(d,m,e.shiftKey?y.begin:x,x,!0)}else k===n.keys.Home&&!e.shiftKey||k===n.keys.PageUp?(e.preventDefault(),a.caret.call(d,m,0,e.shiftKey?y.begin:0,!0)):p.undoOnEscape&&k===n.keys.Escape&&!0!==e.altKey?((0,s.checkVal)(m,!0,!1,d.undoValue.split("")),g.trigger("click")):k!==n.keys.Insert||e.shiftKey||e.ctrlKey||void 0!==d.userOptions.insertMode?!0===p.tabThrough&&k===n.keys.Tab?!0===e.shiftKey?(y.end=a.seekPrevious.call(d,y.end,!0),!0===l.getTest.call(d,y.end-1).match.static&&y.end--,y.begin=a.seekPrevious.call(d,y.end,!0),y.begin>=0&&y.end>0&&(e.preventDefault(),a.caret.call(d,m,y.begin,y.end))):(y.begin=a.seekNext.call(d,y.begin,!0),y.end=a.seekNext.call(d,y.begin,!0),y.end<v.maskLength&&y.end--,y.begin<=v.maskLength&&(e.preventDefault(),a.caret.call(d,m,y.begin,y.end))):e.shiftKey||p.insertModeVisual&&!1===p.insertMode&&(k===n.keys.ArrowRight?setTimeout((function(){var e=a.caret.call(d,m);a.caret.call(d,m,e.begin)}),0):k===n.keys.ArrowLeft&&setTimeout((function(){var e=a.translatePosition.call(d,m.inputmask.caretPos.begin);a.translatePosition.call(d,m.inputmask.caretPos.end);d.isRTL?a.caret.call(d,m,e+(e===v.maskLength?0:1)):a.caret.call(d,m,e-(0===e?0:1))}),0)):o.isSelection.call(d,y)?p.insertMode=!p.insertMode:(p.insertMode=!p.insertMode,a.caret.call(d,m,y.begin,y.begin));return d.isComposing=k==n.keys.Process||k==n.keys.Unidentified,d.ignorable=p.ignorables.includes(k),f.keypressEvent.call(this,e,t,i,c,u)},keypressEvent:function(e,t,i,r,l){var c=this.inputmask||this,u=c.opts,f=c.dependencyLib,d=c.maskset,p=c.el,h=f(p),v=e.key;if(!0===t||e.ctrlKey&&e.altKey||!(e.ctrlKey||e.metaKey||c.ignorable)){if(v){var m,g=t?{begin:l,end:l}:a.caret.call(c,p);v=u.substitutes[v]||v,d.writeOutBuffer=!0;var k=o.isValid.call(c,g,v,r,void 0,void 0,void 0,t);if(!1!==k&&(a.resetMaskSet.call(c,!0),m=void 0!==k.caret?k.caret:a.seekNext.call(c,k.pos.begin?k.pos.begin:k.pos),d.p=m),m=u.numericInput&&void 0===k.caret?a.seekPrevious.call(c,m):m,!1!==i&&(setTimeout((function(){u.onKeyValidation.call(p,v,k)}),0),d.writeOutBuffer&&!1!==k)){var y=a.getBuffer.call(c);(0,s.writeBuffer)(p,y,m,e,!0!==t)}if(e.preventDefault(),t)return!1!==k&&(k.forwardPosition=m),k}}else v===n.keys.Enter&&c.undoValue!==c._valueGet(!0)&&(c.undoValue=c._valueGet(!0),setTimeout((function(){h.trigger("change")}),0))},pasteEvent:function(e){var t,i=this.inputmask,n=i.opts,r=i._valueGet(!0),o=a.caret.call(i,this);i.isRTL&&(t=o.end,o.end=a.translatePosition.call(i,o.begin),o.begin=a.translatePosition.call(i,t));var l=r.substr(0,o.begin),u=r.substr(o.end,r.length);if(l==(i.isRTL?a.getBufferTemplate.call(i).slice().reverse():a.getBufferTemplate.call(i)).slice(0,o.begin).join("")&&(l=""),u==(i.isRTL?a.getBufferTemplate.call(i).slice().reverse():a.getBufferTemplate.call(i)).slice(o.end).join("")&&(u=""),window.clipboardData&&window.clipboardData.getData)r=l+window.clipboardData.getData("Text")+u;else{if(!e.clipboardData||!e.clipboardData.getData)return!0;r=l+e.clipboardData.getData("text/plain")+u}var f=r;if(i.isRTL){f=f.split("");var d,p=c(a.getBufferTemplate.call(i));try{for(p.s();!(d=p.n()).done;){var h=d.value;f[0]===h&&f.shift()}}catch(e){p.e(e)}finally{p.f()}f=f.join("")}if("function"==typeof n.onBeforePaste){if(!1===(f=n.onBeforePaste.call(i,f,n)))return!1;f||(f=r)}(0,s.checkVal)(this,!0,!1,f.toString().split(""),e),e.preventDefault()},inputFallBackEvent:function(e){var t=this.inputmask,i=t.opts,o=t.dependencyLib;var c,u=this,d=u.inputmask._valueGet(!0),p=(t.isRTL?a.getBuffer.call(t).slice().reverse():a.getBuffer.call(t)).join(""),h=a.caret.call(t,u,void 0,void 0,!0);if(p!==d){if(c=function(e,n,r){for(var o,s,c,u=e.substr(0,r.begin).split(""),f=e.substr(r.begin).split(""),d=n.substr(0,r.begin).split(""),p=n.substr(r.begin).split(""),h=u.length>=d.length?u.length:d.length,v=f.length>=p.length?f.length:p.length,m="",g=[],k="~";u.length<h;)u.push(k);for(;d.length<h;)d.push(k);for(;f.length<v;)f.unshift(k);for(;p.length<v;)p.unshift(k);var y=u.concat(f),b=d.concat(p);for(s=0,o=y.length;s<o;s++)switch(c=l.getPlaceholder.call(t,a.translatePosition.call(t,s)),m){case"insertText":b[s-1]===y[s]&&r.begin==y.length-1&&g.push(y[s]),s=o;break;case"insertReplacementText":case"deleteContentBackward":y[s]===k?r.end++:s=o;break;default:y[s]!==b[s]&&(y[s+1]!==k&&y[s+1]!==c&&void 0!==y[s+1]||(b[s]!==c||b[s+1]!==k)&&b[s]!==k?b[s+1]===k&&b[s]===y[s+1]?(m="insertText",g.push(y[s]),r.begin--,r.end--):y[s]!==c&&y[s]!==k&&(y[s+1]===k||b[s]!==y[s]&&b[s+1]===y[s+1])?(m="insertReplacementText",g.push(y[s]),r.begin--):y[s]===k?(m="deleteContentBackward",(a.isMask.call(t,a.translatePosition.call(t,s),!0)||b[s]===i.radixPoint)&&r.end++):s=o:(m="insertText",g.push(y[s]),r.begin--,r.end--))}return{action:m,data:g,caret:r}}(d,p,h),(u.inputmask.shadowRoot||u.ownerDocument).activeElement!==u&&u.focus(),(0,s.writeBuffer)(u,a.getBuffer.call(t)),a.caret.call(t,u,h.begin,h.end,!0),!r.mobile&&t.skipNextInsert&&"insertText"===e.inputType&&"insertText"===c.action&&t.isComposing)return!1;switch("insertCompositionText"===e.inputType&&"insertText"===c.action&&t.isComposing?t.skipNextInsert=!0:t.skipNextInsert=!1,c.action){case"insertText":case"insertReplacementText":c.data.forEach((function(e,i){var a=new o.Event("keypress");a.key=e,t.ignorable=!1,f.keypressEvent.call(u,a)})),setTimeout((function(){t.$el.trigger("keyup")}),0);break;case"deleteContentBackward":var v=new o.Event("keydown");v.key=n.keys.Backspace,f.keyEvent.call(u,v);break;default:(0,s.applyInputValue)(u,d),a.caret.call(t,u,h.begin,h.end,!0)}e.preventDefault()}},setValueEvent:function(e){var t=this.inputmask,i=this,n=e&&e.detail?e.detail[0]:arguments[1];void 0===n&&(n=i.inputmask._valueGet(!0)),(0,s.applyInputValue)(i,n),(e.detail&&void 0!==e.detail[1]||void 0!==arguments[2])&&a.caret.call(t,i,e.detail?e.detail[1]:arguments[2])},focusEvent:function(e){var t=this.inputmask,i=t.opts,n=this,r=n.inputmask._valueGet();i.showMaskOnFocus&&r!==a.getBuffer.call(t).join("")&&(0,s.writeBuffer)(n,a.getBuffer.call(t),a.seekNext.call(t,a.getLastValidPosition.call(t))),!0!==i.positionCaretOnTab||!1!==t.mouseEnter||o.isComplete.call(t,a.getBuffer.call(t))&&-1!==a.getLastValidPosition.call(t)||f.clickEvent.apply(n,[e,!0]),t.undoValue=t._valueGet(!0)},invalidEvent:function(e){this.inputmask.validationEvent=!0},mouseleaveEvent:function(){var e=this.inputmask,t=e.opts,i=this;e.mouseEnter=!1,t.clearMaskOnLostFocus&&(i.inputmask.shadowRoot||i.ownerDocument).activeElement!==i&&(0,s.HandleNativePlaceholder)(i,e.originalPlaceholder)},clickEvent:function(e,t){var i=this.inputmask;i.clicked++;var n=this;if((n.inputmask.shadowRoot||n.ownerDocument).activeElement===n){var r=a.determineNewCaretPosition.call(i,a.caret.call(i,n),t);void 0!==r&&a.caret.call(i,n,r)}},cutEvent:function(e){var t=this.inputmask,i=t.maskset,r=this,l=a.caret.call(t,r),c=t.isRTL?a.getBuffer.call(t).slice(l.end,l.begin):a.getBuffer.call(t).slice(l.begin,l.end),u=t.isRTL?c.reverse().join(""):c.join("");window.navigator.clipboard?window.navigator.clipboard.writeText(u):window.clipboardData&&window.clipboardData.getData&&window.clipboardData.setData("Text",u),o.handleRemove.call(t,r,n.keys.Delete,l),(0,s.writeBuffer)(r,a.getBuffer.call(t),i.p,e,t.undoValue!==t._valueGet(!0))},blurEvent:function(e){var t=this.inputmask,i=t.opts,n=t.dependencyLib;t.clicked=0;var r=n(this),l=this;if(l.inputmask){(0,s.HandleNativePlaceholder)(l,t.originalPlaceholder);var c=l.inputmask._valueGet(),u=a.getBuffer.call(t).slice();""!==c&&(i.clearMaskOnLostFocus&&(-1===a.getLastValidPosition.call(t)&&c===a.getBufferTemplate.call(t).join("")?u=[]:s.clearOptionalTail.call(t,u)),!1===o.isComplete.call(t,u)&&(setTimeout((function(){r.trigger("incomplete")}),0),i.clearIncomplete&&(a.resetMaskSet.call(t),u=i.clearMaskOnLostFocus?[]:a.getBufferTemplate.call(t).slice())),(0,s.writeBuffer)(l,u,void 0,e)),t.undoValue!==t._valueGet(!0)&&(t.undoValue=t._valueGet(!0),r.trigger("change"))}},mouseenterEvent:function(){var e=this.inputmask,t=e.opts.showMaskOnHover,i=this;if(e.mouseEnter=!0,(i.inputmask.shadowRoot||i.ownerDocument).activeElement!==i){var n=(e.isRTL?a.getBufferTemplate.call(e).slice().reverse():a.getBufferTemplate.call(e)).join("");t&&(0,s.HandleNativePlaceholder)(i,n)}},submitEvent:function(){var e=this.inputmask,t=e.opts;e.undoValue!==e._valueGet(!0)&&e.$el.trigger("change"),-1===a.getLastValidPosition.call(e)&&e._valueGet&&e._valueGet()===a.getBufferTemplate.call(e).join("")&&e._valueSet(""),t.clearIncomplete&&!1===o.isComplete.call(e,a.getBuffer.call(e))&&e._valueSet(""),t.removeMaskOnSubmit&&(e._valueSet(e.unmaskedvalue(),!0),setTimeout((function(){(0,s.writeBuffer)(e.el,a.getBuffer.call(e))}),0))},resetEvent:function(){var e=this.inputmask;e.refreshValue=!0,setTimeout((function(){(0,s.applyInputValue)(e.el,e._valueGet(!0))}),0)}};t.EventHandlers=f},9716:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.EventRuler=void 0;var a,n=(a=i(2394))&&a.__esModule?a:{default:a},r=i(2839),o=i(8711),s=i(7760);var l={on:function(e,t,i){var a=e.inputmask.dependencyLib,l=function(t){t.originalEvent&&(t=t.originalEvent||t,arguments[0]=t);var l,c=this,u=c.inputmask,f=u?u.opts:void 0;if(void 0===u&&"FORM"!==this.nodeName){var d=a.data(c,"_inputmask_opts");a(c).off(),d&&new n.default(d).mask(c)}else{if(["submit","reset","setvalue"].includes(t.type)||"FORM"===this.nodeName||!(c.disabled||c.readOnly&&!("keydown"===t.type&&t.ctrlKey&&t.key===r.keys.c||!1===f.tabThrough&&t.key===r.keys.Tab))){switch(t.type){case"input":if(!0===u.skipInputEvent)return u.skipInputEvent=!1,t.preventDefault();break;case"click":case"focus":return u.validationEvent?(u.validationEvent=!1,e.blur(),(0,s.HandleNativePlaceholder)(e,(u.isRTL?o.getBufferTemplate.call(u).slice().reverse():o.getBufferTemplate.call(u)).join("")),setTimeout((function(){e.focus()}),f.validationEventTimeOut),!1):(l=arguments,void setTimeout((function(){e.inputmask&&i.apply(c,l)}),0))}var p=i.apply(c,arguments);return!1===p&&(t.preventDefault(),t.stopPropagation()),p}t.preventDefault()}};["submit","reset"].includes(t)?(l=l.bind(e),null!==e.form&&a(e.form).on(t,l)):a(e).on(t,l),e.inputmask.events[t]=e.inputmask.events[t]||[],e.inputmask.events[t].push(l)},off:function(e,t){if(e.inputmask&&e.inputmask.events){var i=e.inputmask.dependencyLib,a=e.inputmask.events;for(var n in t&&((a=[])[t]=e.inputmask.events[t]),a){for(var r=a[n];r.length>0;){var o=r.pop();["submit","reset"].includes(n)?null!==e.form&&i(e.form).off(n,o):i(e).off(n,o)}delete e.inputmask.events[n]}}}};t.EventRuler=l},219:function(e,t,i){var a=d(i(2394)),n=i(2839),r=d(i(7184)),o=i(8711),s=i(4713);function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var a,n,r,o,s=[],l=!0,c=!1;try{if(r=(i=i.call(e)).next,0===t){if(Object(i)!==i)return;l=!1}else for(;!(l=(a=r.call(i)).done)&&(s.push(a.value),s.length!==t);l=!0);}catch(e){c=!0,n=e}finally{try{if(!l&&null!=i.return&&(o=i.return(),Object(o)!==o))return}finally{if(c)throw n}}return s}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return c(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);"Object"===i&&e.constructor&&(i=e.constructor.name);if("Map"===i||"Set"===i)return Array.from(e);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return c(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function f(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(n=a.key,r=void 0,r=function(e,t){if("object"!==u(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var a=i.call(e,t||"default");if("object"!==u(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(n,"string"),"symbol"===u(r)?r:String(r)),a)}var n,r}function d(e){return e&&e.__esModule?e:{default:e}}var p=a.default.dependencyLib,h=function(){function e(t,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.mask=t,this.format=i,this.opts=a,this._date=new Date(1,0,1),this.initDateObject(t,this.opts)}var t,i,a;return t=e,(i=[{key:"date",get:function(){return void 0===this._date&&(this._date=new Date(1,0,1),this.initDateObject(void 0,this.opts)),this._date}},{key:"initDateObject",value:function(e,t){var i;for(P(t).lastIndex=0;i=P(t).exec(this.format);){var a=new RegExp("\\d+$").exec(i[0]),n=a?i[0][0]+"x":i[0],r=void 0;if(void 0!==e){if(a){var o=P(t).lastIndex,s=E(i.index,t);P(t).lastIndex=o,r=e.slice(0,e.indexOf(s.nextMatch[0]))}else r=e.slice(0,g[n]&&g[n][4]||n.length);e=e.slice(r.length)}Object.prototype.hasOwnProperty.call(g,n)&&this.setValue(this,r,n,g[n][2],g[n][1])}}},{key:"setValue",value:function(e,t,i,a,n){if(void 0!==t&&(e[a]="ampm"===a?t:t.replace(/[^0-9]/g,"0"),e["raw"+a]=t.replace(/\s/g,"_")),void 0!==n){var r=e[a];("day"===a&&29===parseInt(r)||"month"===a&&2===parseInt(r))&&(29!==parseInt(e.day)||2!==parseInt(e.month)||""!==e.year&&void 0!==e.year||e._date.setFullYear(2012,1,29)),"day"===a&&(m=!0,0===parseInt(r)&&(r=1)),"month"===a&&(m=!0),"year"===a&&(m=!0,r.length<4&&(r=_(r,4,!0))),""===r||isNaN(r)||n.call(e._date,r),"ampm"===a&&n.call(e._date,r)}}},{key:"reset",value:function(){this._date=new Date(1,0,1)}},{key:"reInit",value:function(){this._date=void 0,this.date}}])&&f(t.prototype,i),a&&f(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}(),v=(new Date).getFullYear(),m=!1,g={d:["[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",Date.prototype.getDate],dd:["0[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",function(){return _(Date.prototype.getDate.call(this),2)}],ddd:[""],dddd:[""],m:["[1-9]|1[012]",function(e){var t=e?parseInt(e):0;return t>0&&t--,Date.prototype.setMonth.call(this,t)},"month",function(){return Date.prototype.getMonth.call(this)+1}],mm:["0[1-9]|1[012]",function(e){var t=e?parseInt(e):0;return t>0&&t--,Date.prototype.setMonth.call(this,t)},"month",function(){return _(Date.prototype.getMonth.call(this)+1,2)}],mmm:[""],mmmm:[""],yy:["[0-9]{2}",Date.prototype.setFullYear,"year",function(){return _(Date.prototype.getFullYear.call(this),2)}],yyyy:["[0-9]{4}",Date.prototype.setFullYear,"year",function(){return _(Date.prototype.getFullYear.call(this),4)}],h:["[1-9]|1[0-2]",Date.prototype.setHours,"hours",Date.prototype.getHours],hh:["0[1-9]|1[0-2]",Date.prototype.setHours,"hours",function(){return _(Date.prototype.getHours.call(this),2)}],hx:[function(e){return"[0-9]{".concat(e,"}")},Date.prototype.setHours,"hours",function(e){return Date.prototype.getHours}],H:["1?[0-9]|2[0-3]",Date.prototype.setHours,"hours",Date.prototype.getHours],HH:["0[0-9]|1[0-9]|2[0-3]",Date.prototype.setHours,"hours",function(){return _(Date.prototype.getHours.call(this),2)}],Hx:[function(e){return"[0-9]{".concat(e,"}")},Date.prototype.setHours,"hours",function(e){return function(){return _(Date.prototype.getHours.call(this),e)}}],M:["[1-5]?[0-9]",Date.prototype.setMinutes,"minutes",Date.prototype.getMinutes],MM:["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]",Date.prototype.setMinutes,"minutes",function(){return _(Date.prototype.getMinutes.call(this),2)}],s:["[1-5]?[0-9]",Date.prototype.setSeconds,"seconds",Date.prototype.getSeconds],ss:["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]",Date.prototype.setSeconds,"seconds",function(){return _(Date.prototype.getSeconds.call(this),2)}],l:["[0-9]{3}",Date.prototype.setMilliseconds,"milliseconds",function(){return _(Date.prototype.getMilliseconds.call(this),3)},3],L:["[0-9]{2}",Date.prototype.setMilliseconds,"milliseconds",function(){return _(Date.prototype.getMilliseconds.call(this),2)},2],t:["[ap]",y,"ampm",b,1],tt:["[ap]m",y,"ampm",b,2],T:["[AP]",y,"ampm",b,1],TT:["[AP]M",y,"ampm",b,2],Z:[".*",void 0,"Z",function(){var e=this.toString().match(/\((.+)\)/)[1];e.includes(" ")&&(e=(e=e.replace("-"," ").toUpperCase()).split(" ").map((function(e){return l(e,1)[0]})).join(""));return e}],o:[""],S:[""]},k={isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};function y(e){var t=this.getHours();e.toLowerCase().includes("p")?this.setHours(t+12):e.toLowerCase().includes("a")&&t>=12&&this.setHours(t-12)}function b(){var e=this.getHours();return(e=e||12)>=12?"PM":"AM"}function x(e){var t=new RegExp("\\d+$").exec(e[0]);if(t&&void 0!==t[0]){var i=g[e[0][0]+"x"].slice("");return i[0]=i[0](t[0]),i[3]=i[3](t[0]),i}if(g[e[0]])return g[e[0]]}function P(e){if(!e.tokenizer){var t=[],i=[];for(var a in g)if(/\.*x$/.test(a)){var n=a[0]+"\\d+";-1===i.indexOf(n)&&i.push(n)}else-1===t.indexOf(a[0])&&t.push(a[0]);e.tokenizer="("+(i.length>0?i.join("|")+"|":"")+t.join("+|")+")+?|.",e.tokenizer=new RegExp(e.tokenizer,"g")}return e.tokenizer}function w(e,t,i){if(!m)return!0;if(void 0===e.rawday||!isFinite(e.rawday)&&new Date(e.date.getFullYear(),isFinite(e.rawmonth)?e.month:e.date.getMonth()+1,0).getDate()>=e.day||"29"==e.day&&(!isFinite(e.rawyear)||void 0===e.rawyear||""===e.rawyear)||new Date(e.date.getFullYear(),isFinite(e.rawmonth)?e.month:e.date.getMonth()+1,0).getDate()>=e.day)return t;if("29"==e.day){var a=E(t.pos,i);if("yyyy"===a.targetMatch[0]&&t.pos-a.targetMatchIndex==2)return t.remove=t.pos+1,t}else if("02"==e.month&&"30"==e.day&&void 0!==t.c)return e.day="03",e.date.setDate(3),e.date.setMonth(1),t.insert=[{pos:t.pos,c:"0"},{pos:t.pos+1,c:t.c}],t.caret=o.seekNext.call(this,t.pos+1),t;return!1}function S(e,t,i,a){var n,o,s="";for(P(i).lastIndex=0;n=P(i).exec(e);){if(void 0===t)if(o=x(n))s+="("+o[0]+")";else switch(n[0]){case"[":s+="(";break;case"]":s+=")?";break;default:s+=(0,r.default)(n[0])}else if(o=x(n))if(!0!==a&&o[3])s+=o[3].call(t.date);else o[2]?s+=t["raw"+o[2]]:s+=n[0];else s+=n[0]}return s}function _(e,t,i){for(e=String(e),t=t||2;e.length<t;)e=i?e+"0":"0"+e;return e}function M(e,t,i){return"string"==typeof e?new h(e,t,i):e&&"object"===u(e)&&Object.prototype.hasOwnProperty.call(e,"date")?e:void 0}function O(e,t){return S(t.inputFormat,{date:e},t)}function E(e,t){var i,a,n=0,r=0;for(P(t).lastIndex=0;a=P(t).exec(t.inputFormat);){var o=new RegExp("\\d+$").exec(a[0]);if((n+=r=o?parseInt(o[0]):a[0].length)>=e+1){i=a,a=P(t).exec(t.inputFormat);break}}return{targetMatchIndex:n-r,nextMatch:a,targetMatch:i}}a.default.extendAliases({datetime:{mask:function(e){return e.numericInput=!1,g.S=e.i18n.ordinalSuffix.join("|"),e.inputFormat=k[e.inputFormat]||e.inputFormat,e.displayFormat=k[e.displayFormat]||e.displayFormat||e.inputFormat,e.outputFormat=k[e.outputFormat]||e.outputFormat||e.inputFormat,e.placeholder=""!==e.placeholder?e.placeholder:e.inputFormat.replace(/[[\]]/,""),e.regex=S(e.inputFormat,void 0,e),e.min=M(e.min,e.inputFormat,e),e.max=M(e.max,e.inputFormat,e),null},placeholder:"",inputFormat:"isoDateTime",displayFormat:null,outputFormat:null,min:null,max:null,skipOptionalPartCharacter:"",i18n:{dayNames:["Mon","Tue","Wed","Thu","Fri","Sat","Sun","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"],ordinalSuffix:["st","nd","rd","th"]},preValidation:function(e,t,i,a,n,r,o,s){if(s)return!0;if(isNaN(i)&&e[t]!==i){var l=E(t,n);if(l.nextMatch&&l.nextMatch[0]===i&&l.targetMatch[0].length>1){var c=g[l.targetMatch[0]][0];if(new RegExp(c).test("0"+e[t-1]))return e[t]=e[t-1],e[t-1]="0",{fuzzy:!0,buffer:e,refreshFromBuffer:{start:t-1,end:t+1},pos:t+1}}}return!0},postValidation:function(e,t,i,a,n,r,o,l){var c,u;if(o)return!0;if(!1===a&&(((c=E(t+1,n)).targetMatch&&c.targetMatchIndex===t&&c.targetMatch[0].length>1&&void 0!==g[c.targetMatch[0]]||(c=E(t+2,n)).targetMatch&&c.targetMatchIndex===t+1&&c.targetMatch[0].length>1&&void 0!==g[c.targetMatch[0]])&&(u=g[c.targetMatch[0]][0]),void 0!==u&&(void 0!==r.validPositions[t+1]&&new RegExp(u).test(i+"0")?(e[t]=i,e[t+1]="0",a={pos:t+2,caret:t}):new RegExp(u).test("0"+i)&&(e[t]="0",e[t+1]=i,a={pos:t+2})),!1===a))return a;if(a.fuzzy&&(e=a.buffer,t=a.pos),(c=E(t,n)).targetMatch&&c.targetMatch[0]&&void 0!==g[c.targetMatch[0]]){var f=g[c.targetMatch[0]];u=f[0];var d=e.slice(c.targetMatchIndex,c.targetMatchIndex+c.targetMatch[0].length);if(!1===new RegExp(u).test(d.join(""))&&2===c.targetMatch[0].length&&r.validPositions[c.targetMatchIndex]&&r.validPositions[c.targetMatchIndex+1]&&(r.validPositions[c.targetMatchIndex+1].input="0"),"year"==f[2])for(var p=s.getMaskTemplate.call(this,!1,1,void 0,!0),h=t+1;h<e.length;h++)e[h]=p[h],delete r.validPositions[h]}var m=a,k=M(e.join(""),n.inputFormat,n);return m&&!isNaN(k.date.getTime())&&(n.prefillYear&&(m=function(e,t,i){if(e.year!==e.rawyear){var a=v.toString(),n=e.rawyear.replace(/[^0-9]/g,""),r=a.slice(0,n.length),o=a.slice(n.length);if(2===n.length&&n===r){var s=new Date(v,e.month-1,e.day);e.day==s.getDate()&&(!i.max||i.max.date.getTime()>=s.getTime())&&(e.date.setFullYear(v),e.year=a,t.insert=[{pos:t.pos+1,c:o[0]},{pos:t.pos+2,c:o[1]}])}}return t}(k,m,n)),m=function(e,t,i,a,n){if(!t)return t;if(t&&i.min&&!isNaN(i.min.date.getTime())){var r;for(e.reset(),P(i).lastIndex=0;r=P(i).exec(i.inputFormat);){var o;if((o=x(r))&&o[3]){for(var s=o[1],l=e[o[2]],c=i.min[o[2]],u=i.max?i.max[o[2]]:c,f=[],d=!1,p=0;p<c.length;p++)void 0!==a.validPositions[p+r.index]||d?(f[p]=l[p],d=d||l[p]>c[p]):(f[p]=c[p],"year"===o[2]&&l.length-1==p&&c!=u&&(f=(parseInt(f.join(""))+1).toString().split("")),"ampm"===o[2]&&c!=u&&i.min.date.getTime()>e.date.getTime()&&(f[p]=u[p]));s.call(e._date,f.join(""))}}t=i.min.date.getTime()<=e.date.getTime(),e.reInit()}return t&&i.max&&(isNaN(i.max.date.getTime())||(t=i.max.date.getTime()>=e.date.getTime())),t}(k,m=w.call(this,k,m,n),n,r)),void 0!==t&&m&&a.pos!==t?{buffer:S(n.inputFormat,k,n).split(""),refreshFromBuffer:{start:t,end:a.pos},pos:a.caret||a.pos}:m},onKeyDown:function(e,t,i,a){e.ctrlKey&&e.key===n.keys.ArrowRight&&(this.inputmask._valueSet(O(new Date,a)),p(this).trigger("setvalue"))},onUnMask:function(e,t,i){return t?S(i.outputFormat,M(e,i.inputFormat,i),i,!0):t},casing:function(e,t,i,a){return 0==t.nativeDef.indexOf("[ap]")?e.toLowerCase():0==t.nativeDef.indexOf("[AP]")?e.toUpperCase():e},onBeforeMask:function(e,t){return"[object Date]"===Object.prototype.toString.call(e)&&(e=O(e,t)),e},insertMode:!1,insertModeVisual:!1,shiftPositions:!1,keepStatic:!1,inputmode:"numeric",prefillYear:!0}})},3851:function(e,t,i){var a,n=(a=i(2394))&&a.__esModule?a:{default:a},r=i(8711),o=i(4713);n.default.extendDefinitions({A:{validator:"[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",casing:"upper"},"&":{validator:"[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",casing:"upper"},"#":{validator:"[0-9A-Fa-f]",casing:"upper"}});var s=new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]");function l(e,t,i,a,n){return i-1>-1&&"."!==t.buffer[i-1]?(e=t.buffer[i-1]+e,e=i-2>-1&&"."!==t.buffer[i-2]?t.buffer[i-2]+e:"0"+e):e="00"+e,s.test(e)}n.default.extendAliases({cssunit:{regex:"[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)"},url:{regex:"(https?|ftp)://.*",autoUnmask:!1,keepStatic:!1,tabThrough:!0},ip:{mask:"i{1,3}.j{1,3}.k{1,3}.l{1,3}",definitions:{i:{validator:l},j:{validator:l},k:{validator:l},l:{validator:l}},onUnMask:function(e,t,i){return e},inputmode:"decimal",substitutes:{",":"."}},email:{mask:function(e){var t=e.separator,i=e.quantifier,a="*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",n=a;if(t)for(var r=0;r<i;r++)n+="[".concat(t).concat(a,"]");return n},greedy:!1,casing:"lower",separator:null,quantifier:5,skipOptionalPartCharacter:"",onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9\uff11-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5!#$%&'*+/=?^_`{|}~-]"},"-":{validator:"[0-9A-Za-z-]"}},onUnMask:function(e,t,i){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",casing:"upper"}},clearIncomplete:!0,autoUnmask:!0},ssn:{mask:"999-99-9999",postValidation:function(e,t,i,a,n,s,l){var c=o.getMaskTemplate.call(this,!0,r.getLastValidPosition.call(this),!0,!0);return/^(?!219-09-9999|078-05-1120)(?!666|000|9.{2}).{3}-(?!00).{2}-(?!0{4}).{4}$/.test(c.join(""))}}})},207:function(e,t,i){var a=s(i(2394)),n=s(i(7184)),r=i(8711),o=i(2839);function s(e){return e&&e.__esModule?e:{default:e}}var l=a.default.dependencyLib;function c(e,t){for(var i="",n=0;n<e.length;n++)a.default.prototype.definitions[e.charAt(n)]||t.definitions[e.charAt(n)]||t.optionalmarker[0]===e.charAt(n)||t.optionalmarker[1]===e.charAt(n)||t.quantifiermarker[0]===e.charAt(n)||t.quantifiermarker[1]===e.charAt(n)||t.groupmarker[0]===e.charAt(n)||t.groupmarker[1]===e.charAt(n)||t.alternatormarker===e.charAt(n)?i+="\\"+e.charAt(n):i+=e.charAt(n);return i}function u(e,t,i,a){if(e.length>0&&t>0&&(!i.digitsOptional||a)){var n=e.indexOf(i.radixPoint),r=!1;i.negationSymbol.back===e[e.length-1]&&(r=!0,e.length--),-1===n&&(e.push(i.radixPoint),n=e.length-1);for(var o=1;o<=t;o++)isFinite(e[n+o])||(e[n+o]="0")}return r&&e.push(i.negationSymbol.back),e}function f(e,t){var i=0;for(var a in"+"===e&&(i=r.seekNext.call(this,t.validPositions.length-1)),t.tests)if((a=parseInt(a))>=i)for(var n=0,o=t.tests[a].length;n<o;n++)if((void 0===t.validPositions[a]||"-"===e)&&t.tests[a][n].match.def===e)return a+(void 0!==t.validPositions[a]&&"-"!==e?1:0);return i}function d(e,t){for(var i=-1,a=0,n=t.validPositions.length;a<n;a++){var r=t.validPositions[a];if(r&&r.match.def===e){i=a;break}}return i}function p(e,t,i,a,n){var r=t.buffer?t.buffer.indexOf(n.radixPoint):-1,o=(-1!==r||a&&n.jitMasking)&&new RegExp(n.definitions[9].validator).test(e);return n._radixDance&&-1!==r&&o&&null==t.validPositions[r]?{insert:{pos:r===i?r+1:r,c:n.radixPoint},pos:i}:o}a.default.extendAliases({numeric:{mask:function(e){e.repeat=0,e.groupSeparator===e.radixPoint&&e.digits&&"0"!==e.digits&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=void 0),e.placeholder.length>1&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&(e.positionCaretOnClick="lvp");var t="0",i=e.radixPoint;!0===e.numericInput&&void 0===e.__financeInput?(t="1",e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e._radixDance=!1,i=","===e.radixPoint?"?":"!",""!==e.radixPoint&&void 0===e.definitions[i]&&(e.definitions[i]={},e.definitions[i].validator="["+e.radixPoint+"]",e.definitions[i].placeholder=e.radixPoint,e.definitions[i].static=!0,e.definitions[i].generated=!0)):(e.__financeInput=!1,e.numericInput=!0);var a,r="[+]";if(r+=c(e.prefix,e),""!==e.groupSeparator?(void 0===e.definitions[e.groupSeparator]&&(e.definitions[e.groupSeparator]={},e.definitions[e.groupSeparator].validator="["+e.groupSeparator+"]",e.definitions[e.groupSeparator].placeholder=e.groupSeparator,e.definitions[e.groupSeparator].static=!0,e.definitions[e.groupSeparator].generated=!0),r+=e._mask(e)):r+="9{+}",void 0!==e.digits&&0!==e.digits){var o=e.digits.toString().split(",");isFinite(o[0])&&o[1]&&isFinite(o[1])?r+=i+t+"{"+e.digits+"}":(isNaN(e.digits)||parseInt(e.digits)>0)&&(e.digitsOptional||e.jitMasking?(a=r+i+t+"{0,"+e.digits+"}",e.keepStatic=!0):r+=i+t+"{"+e.digits+"}")}else e.inputmode="numeric";return r+=c(e.suffix,e),r+="[-]",a&&(r=[a+c(e.suffix,e)+"[-]",r]),e.greedy=!1,function(e){void 0===e.parseMinMaxOptions&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp((0,n.default)(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp((0,n.default)(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(e),""!==e.radixPoint&&e.substituteRadixPoint&&(e.substitutes["."==e.radixPoint?",":"."]=e.radixPoint),r},_mask:function(e){return"("+e.groupSeparator+"999){+|1}"},digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",_radixDance:!0,groupSeparator:"",allowMinus:!0,negationSymbol:{front:"-",back:""},prefix:"",suffix:"",min:null,max:null,SetMaxOnOverflow:!1,step:1,inputType:"text",unmaskAsNumber:!1,roundingFN:Math.round,inputmode:"decimal",shortcuts:{k:"1000",m:"1000000"},placeholder:"0",greedy:!1,rightAlign:!0,insertMode:!0,autoUnmask:!1,skipOptionalPartCharacter:"",usePrototypeDefinitions:!1,stripLeadingZeroes:!0,substituteRadixPoint:!0,definitions:{0:{validator:p},1:{validator:p,definitionSymbol:"9"},9:{validator:"[0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]",definitionSymbol:"*"},"+":{validator:function(e,t,i,a,n){return n.allowMinus&&("-"===e||e===n.negationSymbol.front)}},"-":{validator:function(e,t,i,a,n){return n.allowMinus&&e===n.negationSymbol.back}}},preValidation:function(e,t,i,a,n,r,o,s){if(!1!==n.__financeInput&&i===n.radixPoint)return!1;var l=e.indexOf(n.radixPoint),c=t;if(t=function(e,t,i,a,n){return n._radixDance&&n.numericInput&&t!==n.negationSymbol.back&&e<=i&&(i>0||t==n.radixPoint)&&(void 0===a.validPositions[e-1]||a.validPositions[e-1].input!==n.negationSymbol.back)&&(e-=1),e}(t,i,l,r,n),"-"===i||i===n.negationSymbol.front){if(!0!==n.allowMinus)return!1;var u=!1,p=d("+",r),h=d("-",r);return-1!==p&&(u=[p,h]),!1!==u?{remove:u,caret:c-n.negationSymbol.back.length}:{insert:[{pos:f.call(this,"+",r),c:n.negationSymbol.front,fromIsValid:!0},{pos:f.call(this,"-",r),c:n.negationSymbol.back,fromIsValid:void 0}],caret:c+n.negationSymbol.back.length}}if(i===n.groupSeparator)return{caret:c};if(s)return!0;if(-1!==l&&!0===n._radixDance&&!1===a&&i===n.radixPoint&&void 0!==n.digits&&(isNaN(n.digits)||parseInt(n.digits)>0)&&l!==t)return{caret:n._radixDance&&t===l-1?l+1:l};if(!1===n.__financeInput)if(a){if(n.digitsOptional)return{rewritePosition:o.end};if(!n.digitsOptional){if(o.begin>l&&o.end<=l)return i===n.radixPoint?{insert:{pos:l+1,c:"0",fromIsValid:!0},rewritePosition:l}:{rewritePosition:l+1};if(o.begin<l)return{rewritePosition:o.begin-1}}}else if(!n.showMaskOnHover&&!n.showMaskOnFocus&&!n.digitsOptional&&n.digits>0&&""===this.__valueGet.call(this.el))return{rewritePosition:l};return{rewritePosition:t}},postValidation:function(e,t,i,a,n,r,o){if(!1===a)return a;if(o)return!0;if(null!==n.min||null!==n.max){var s=n.onUnMask(e.slice().reverse().join(""),void 0,l.extend({},n,{unmaskAsNumber:!0}));if(null!==n.min&&s<n.min&&(s.toString().length>n.min.toString().length||s<0))return!1;if(null!==n.max&&s>n.max)return!!n.SetMaxOnOverflow&&{refreshFromBuffer:!0,buffer:u(n.max.toString().replace(".",n.radixPoint).split(""),n.digits,n).reverse()}}return a},onUnMask:function(e,t,i){if(""===t&&!0===i.nullable)return t;var a=e.replace(i.prefix,"");return a=(a=a.replace(i.suffix,"")).replace(new RegExp((0,n.default)(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(a=a.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==a.indexOf(i.radixPoint)&&(a=a.replace(n.default.call(this,i.radixPoint),".")),a=(a=a.replace(new RegExp("^"+(0,n.default)(i.negationSymbol.front)),"-")).replace(new RegExp((0,n.default)(i.negationSymbol.back)+"$"),""),Number(a)):a},isComplete:function(e,t){var i=(t.numericInput?e.slice().reverse():e).join("");return i=(i=(i=(i=(i=i.replace(new RegExp("^"+(0,n.default)(t.negationSymbol.front)),"-")).replace(new RegExp((0,n.default)(t.negationSymbol.back)+"$"),"")).replace(t.prefix,"")).replace(t.suffix,"")).replace(new RegExp((0,n.default)(t.groupSeparator)+"([0-9]{3})","g"),"$1"),","===t.radixPoint&&(i=i.replace((0,n.default)(t.radixPoint),".")),isFinite(i)},onBeforeMask:function(e,t){var i=t.radixPoint||",";isFinite(t.digits)&&(t.digits=parseInt(t.digits)),"number"!=typeof e&&"number"!==t.inputType||""===i||(e=e.toString().replace(".",i));var a="-"===e.charAt(0)||e.charAt(0)===t.negationSymbol.front,r=e.split(i),o=r[0].replace(/[^\-0-9]/g,""),s=r.length>1?r[1].replace(/[^0-9]/g,""):"",l=r.length>1;e=o+(""!==s?i+s:s);var c=0;if(""!==i&&(c=t.digitsOptional?t.digits<s.length?t.digits:s.length:t.digits,""!==s||!t.digitsOptional)){var f=Math.pow(10,c||1);e=e.replace((0,n.default)(i),"."),isNaN(parseFloat(e))||(e=(t.roundingFN(parseFloat(e)*f)/f).toFixed(c)),e=e.toString().replace(".",i)}if(0===t.digits&&-1!==e.indexOf(i)&&(e=e.substring(0,e.indexOf(i))),null!==t.min||null!==t.max){var d=e.toString().replace(i,".");null!==t.min&&d<t.min?e=t.min.toString().replace(".",i):null!==t.max&&d>t.max&&(e=t.max.toString().replace(".",i))}return a&&"-"!==e.charAt(0)&&(e="-"+e),u(e.toString().split(""),c,t,l).join("")},onBeforeWrite:function(e,t,i,a){function r(e,t){if(!1!==a.__financeInput||t){var i=e.indexOf(a.radixPoint);-1!==i&&e.splice(i,1)}if(""!==a.groupSeparator)for(;-1!==(i=e.indexOf(a.groupSeparator));)e.splice(i,1);return e}var o,s;if(a.stripLeadingZeroes&&(s=function(e,t){var i=new RegExp("(^"+(""!==t.negationSymbol.front?(0,n.default)(t.negationSymbol.front)+"?":"")+(0,n.default)(t.prefix)+")(.*)("+(0,n.default)(t.suffix)+(""!=t.negationSymbol.back?(0,n.default)(t.negationSymbol.back)+"?":"")+"$)").exec(e.slice().reverse().join("")),a=i?i[2]:"",r=!1;return a&&(a=a.split(t.radixPoint.charAt(0))[0],r=new RegExp("^[0"+t.groupSeparator+"]*").exec(a)),!(!r||!(r[0].length>1||r[0].length>0&&r[0].length<a.length))&&r}(t,a)))for(var c=t.join("").lastIndexOf(s[0].split("").reverse().join(""))-(s[0]==s.input?0:1),f=s[0]==s.input?1:0,d=s[0].length-f;d>0;d--)delete this.maskset.validPositions[c+d],delete t[c+d];if(e)switch(e.type){case"blur":case"checkval":if(null!==a.min){var p=a.onUnMask(t.slice().reverse().join(""),void 0,l.extend({},a,{unmaskAsNumber:!0}));if(null!==a.min&&p<a.min)return{refreshFromBuffer:!0,buffer:u(a.min.toString().replace(".",a.radixPoint).split(""),a.digits,a).reverse()}}if(t[t.length-1]===a.negationSymbol.front){var h=new RegExp("(^"+(""!=a.negationSymbol.front?(0,n.default)(a.negationSymbol.front)+"?":"")+(0,n.default)(a.prefix)+")(.*)("+(0,n.default)(a.suffix)+(""!=a.negationSymbol.back?(0,n.default)(a.negationSymbol.back)+"?":"")+"$)").exec(r(t.slice(),!0).reverse().join(""));0==(h?h[2]:"")&&(o={refreshFromBuffer:!0,buffer:[0]})}else if(""!==a.radixPoint){t.indexOf(a.radixPoint)===a.suffix.length&&(o&&o.buffer?o.buffer.splice(0,1+a.suffix.length):(t.splice(0,1+a.suffix.length),o={refreshFromBuffer:!0,buffer:r(t)}))}if(a.enforceDigitsOnBlur){var v=(o=o||{})&&o.buffer||t.slice().reverse();o.refreshFromBuffer=!0,o.buffer=u(v,a.digits,a,!0).reverse()}}return o},onKeyDown:function(e,t,i,a){var n,r=l(this);if(3!=e.location){var s,c=e.key;if((s=a.shortcuts&&a.shortcuts[c])&&s.length>1)return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())*parseInt(s)),r.trigger("setvalue"),!1}if(e.ctrlKey)switch(e.key){case o.keys.ArrowUp:return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())+parseInt(a.step)),r.trigger("setvalue"),!1;case o.keys.ArrowDown:return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())-parseInt(a.step)),r.trigger("setvalue"),!1}if(!e.shiftKey&&(e.key===o.keys.Delete||e.key===o.keys.Backspace||e.key===o.keys.BACKSPACE_SAFARI)&&i.begin!==t.length){if(t[e.key===o.keys.Delete?i.begin-1:i.end]===a.negationSymbol.front)return n=t.slice().reverse(),""!==a.negationSymbol.front&&n.shift(),""!==a.negationSymbol.back&&n.pop(),r.trigger("setvalue",[n.join(""),i.begin]),!1;if(!0===a._radixDance){var f=t.indexOf(a.radixPoint);if(a.digitsOptional){if(0===f)return(n=t.slice().reverse()).pop(),r.trigger("setvalue",[n.join(""),i.begin>=n.length?n.length:i.begin]),!1}else if(-1!==f&&(i.begin<f||i.end<f||e.key===o.keys.Delete&&(i.begin===f||i.begin-1===f))){var d=void 0;return i.begin===i.end&&(e.key===o.keys.Backspace||e.key===o.keys.BACKSPACE_SAFARI?i.begin++:e.key===o.keys.Delete&&i.begin-1===f&&(d=l.extend({},i),i.begin--,i.end--)),(n=t.slice().reverse()).splice(n.length-i.begin,i.begin-i.end+1),n=u(n,a.digits,a).join(""),d&&(i=d),r.trigger("setvalue",[n,i.begin>=n.length?f+1:i.begin]),!1}}}}},currency:{prefix:"",groupSeparator:",",alias:"numeric",digits:2,digitsOptional:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",inputmode:"numeric",digits:0},percentage:{alias:"numeric",min:0,max:100,suffix:" %",digits:0,allowMinus:!1},indianns:{alias:"numeric",_mask:function(e){return"("+e.groupSeparator+"99){*|1}("+e.groupSeparator+"999){1|1}"},groupSeparator:",",radixPoint:".",placeholder:"0",digits:2,digitsOptional:!1}})},9380:function(e,t,i){var a;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=((a=i(8741))&&a.__esModule?a:{default:a}).default?window:{};t.default=n},7760:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.HandleNativePlaceholder=function(e,t){var i=e?e.inputmask:this;if(s.ie){if(e.inputmask._valueGet()!==t&&(e.placeholder!==t||""===e.placeholder)){var a=r.getBuffer.call(i).slice(),n=e.inputmask._valueGet();if(n!==t){var o=r.getLastValidPosition.call(i);-1===o&&n===r.getBufferTemplate.call(i).join("")?a=[]:-1!==o&&u.call(i,a),d(e,a)}}}else e.placeholder!==t&&(e.placeholder=t,""===e.placeholder&&e.removeAttribute("placeholder"))},t.applyInputValue=c,t.checkVal=f,t.clearOptionalTail=u,t.unmaskedvalue=function(e){var t=e?e.inputmask:this,i=t.opts,a=t.maskset;if(e){if(void 0===e.inputmask)return e.value;e.inputmask&&e.inputmask.refreshValue&&c(e,e.inputmask._valueGet(!0))}for(var n=[],o=a.validPositions,s=0,l=o.length;s<l;s++)o[s]&&o[s].match&&(1!=o[s].match.static||Array.isArray(a.metadata)&&!0!==o[s].generatedInput)&&n.push(o[s].input);var u=0===n.length?"":(t.isRTL?n.reverse():n).join("");if("function"==typeof i.onUnMask){var f=(t.isRTL?r.getBuffer.call(t).slice().reverse():r.getBuffer.call(t)).join("");u=i.onUnMask.call(t,f,u,i)}return u},t.writeBuffer=d;var a=i(2839),n=i(4713),r=i(8711),o=i(7215),s=i(9845),l=i(6030);function c(e,t){var i=e?e.inputmask:this,a=i.opts;e.inputmask.refreshValue=!1,"function"==typeof a.onBeforeMask&&(t=a.onBeforeMask.call(i,t,a)||t),f(e,!0,!1,t=t.toString().split("")),i.undoValue=i._valueGet(!0),(a.clearMaskOnLostFocus||a.clearIncomplete)&&e.inputmask._valueGet()===r.getBufferTemplate.call(i).join("")&&-1===r.getLastValidPosition.call(i)&&e.inputmask._valueSet("")}function u(e){e.length=0;for(var t,i=n.getMaskTemplate.call(this,!0,0,!0,void 0,!0);void 0!==(t=i.shift());)e.push(t);return e}function f(e,t,i,a,s){var c=e?e.inputmask:this,u=c.maskset,f=c.opts,p=c.dependencyLib,h=a.slice(),v="",m=-1,g=void 0,k=f.skipOptionalPartCharacter;f.skipOptionalPartCharacter="",r.resetMaskSet.call(c),u.tests={},m=f.radixPoint?r.determineNewCaretPosition.call(c,{begin:0,end:0},!1,!1===f.__financeInput?"radixFocus":void 0).begin:0,u.p=m,c.caretPos={begin:m};var y=[],b=c.caretPos;if(h.forEach((function(e,t){if(void 0!==e){var a=new p.Event("_checkval");a.key=e,v+=e;var o=r.getLastValidPosition.call(c,void 0,!0);!function(e,t){for(var i=n.getMaskTemplate.call(c,!0,0).slice(e,r.seekNext.call(c,e,!1,!1)).join("").replace(/'/g,""),a=i.indexOf(t);a>0&&" "===i[a-1];)a--;var o=0===a&&!r.isMask.call(c,e)&&(n.getTest.call(c,e).match.nativeDef===t.charAt(0)||!0===n.getTest.call(c,e).match.static&&n.getTest.call(c,e).match.nativeDef==="'"+t.charAt(0)||" "===n.getTest.call(c,e).match.nativeDef&&(n.getTest.call(c,e+1).match.nativeDef===t.charAt(0)||!0===n.getTest.call(c,e+1).match.static&&n.getTest.call(c,e+1).match.nativeDef==="'"+t.charAt(0)));if(!o&&a>0&&!r.isMask.call(c,e,!1,!0)){var s=r.seekNext.call(c,e);c.caretPos.begin<s&&(c.caretPos={begin:s})}return o}(m,v)?(g=l.EventHandlers.keypressEvent.call(c,a,!0,!1,i,c.caretPos.begin))&&(m=c.caretPos.begin+1,v=""):g=l.EventHandlers.keypressEvent.call(c,a,!0,!1,i,o+1),g?(void 0!==g.pos&&u.validPositions[g.pos]&&!0===u.validPositions[g.pos].match.static&&void 0===u.validPositions[g.pos].alternation&&(y.push(g.pos),c.isRTL||(g.forwardPosition=g.pos+1)),d.call(c,void 0,r.getBuffer.call(c),g.forwardPosition,a,!1),c.caretPos={begin:g.forwardPosition,end:g.forwardPosition},b=c.caretPos):void 0===u.validPositions[t]&&h[t]===n.getPlaceholder.call(c,t)&&r.isMask.call(c,t,!0)?c.caretPos.begin++:c.caretPos=b}})),y.length>0){var x,P,w=r.seekNext.call(c,-1,void 0,!1);if(!o.isComplete.call(c,r.getBuffer.call(c))&&y.length<=w||o.isComplete.call(c,r.getBuffer.call(c))&&y.length>0&&y.length!==w&&0===y[0])for(var S=w;void 0!==(x=y.shift());){var _=new p.Event("_checkval");if((P=u.validPositions[x]).generatedInput=!0,_.key=P.input,(g=l.EventHandlers.keypressEvent.call(c,_,!0,!1,i,S))&&void 0!==g.pos&&g.pos!==x&&u.validPositions[g.pos]&&!0===u.validPositions[g.pos].match.static)y.push(g.pos);else if(!g)break;S++}}t&&d.call(c,e,r.getBuffer.call(c),g?g.forwardPosition:c.caretPos.begin,s||new p.Event("checkval"),s&&("input"===s.type&&c.undoValue!==r.getBuffer.call(c).join("")||"paste"===s.type)),f.skipOptionalPartCharacter=k}function d(e,t,i,n,s){var l=e?e.inputmask:this,c=l.opts,u=l.dependencyLib;if(n&&"function"==typeof c.onBeforeWrite){var f=c.onBeforeWrite.call(l,n,t,i,c);if(f){if(f.refreshFromBuffer){var d=f.refreshFromBuffer;o.refreshFromBuffer.call(l,!0===d?d:d.start,d.end,f.buffer||t),t=r.getBuffer.call(l,!0)}void 0!==i&&(i=void 0!==f.caret?f.caret:i)}}if(void 0!==e&&(e.inputmask._valueSet(t.join("")),void 0===i||void 0!==n&&"blur"===n.type||r.caret.call(l,e,i,void 0,void 0,void 0!==n&&"keydown"===n.type&&(n.key===a.keys.Delete||n.key===a.keys.Backspace)),!0===s)){var p=u(e),h=e.inputmask._valueGet();e.inputmask.skipInputEvent=!0,p.trigger("input"),setTimeout((function(){h===r.getBufferTemplate.call(l).join("")?p.trigger("cleared"):!0===o.isComplete.call(l,t)&&p.trigger("complete")}),0)}}},2394:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(157),n=m(i(4963)),r=m(i(9380)),o=i(2391),s=i(4713),l=i(8711),c=i(7215),u=i(7760),f=i(9716),d=m(i(7392)),p=m(i(3976)),h=m(i(8741));function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e){return e&&e.__esModule?e:{default:e}}var g=r.default.document,k="_inputmask_opts";function y(e,t,i){if(h.default){if(!(this instanceof y))return new y(e,t,i);this.dependencyLib=n.default,this.el=void 0,this.events={},this.maskset=void 0,!0!==i&&("[object Object]"===Object.prototype.toString.call(e)?t=e:(t=t||{},e&&(t.alias=e)),this.opts=n.default.extend(!0,{},this.defaults,t),this.noMasksCache=t&&void 0!==t.definitions,this.userOptions=t||{},b(this.opts.alias,t,this.opts)),this.refreshValue=!1,this.undoValue=void 0,this.$el=void 0,this.skipInputEvent=!1,this.validationEvent=!1,this.ignorable=!1,this.maxLength,this.mouseEnter=!1,this.clicked=0,this.originalPlaceholder=void 0,this.isComposing=!1}}function b(e,t,i){var a=y.prototype.aliases[e];return a?(a.alias&&b(a.alias,void 0,i),n.default.extend(!0,i,a),n.default.extend(!0,i,t),!0):(null===i.mask&&(i.mask=e),!1)}y.prototype={dataAttribute:"data-inputmask",defaults:p.default,definitions:d.default,aliases:{},masksCache:{},get isRTL(){return this.opts.isRTL||this.opts.numericInput},mask:function(e){var t=this;return"string"==typeof e&&(e=g.getElementById(e)||g.querySelectorAll(e)),(e=e.nodeName?[e]:Array.isArray(e)?e:[].slice.call(e)).forEach((function(e,i){var s=n.default.extend(!0,{},t.opts);if(function(e,t,i,a){function o(t,n){var o=""===a?t:a+"-"+t;null!==(n=void 0!==n?n:e.getAttribute(o))&&("string"==typeof n&&(0===t.indexOf("on")?n=r.default[n]:"false"===n?n=!1:"true"===n&&(n=!0)),i[t]=n)}if(!0===t.importDataAttributes){var s,l,c,u,f=e.getAttribute(a);if(f&&""!==f&&(f=f.replace(/'/g,'"'),l=JSON.parse("{"+f+"}")),l)for(u in c=void 0,l)if("alias"===u.toLowerCase()){c=l[u];break}for(s in o("alias",c),i.alias&&b(i.alias,i,t),t){if(l)for(u in c=void 0,l)if(u.toLowerCase()===s.toLowerCase()){c=l[u];break}o(s,c)}}n.default.extend(!0,t,i),("rtl"===e.dir||t.rightAlign)&&(e.style.textAlign="right");("rtl"===e.dir||t.numericInput)&&(e.dir="ltr",e.removeAttribute("dir"),t.isRTL=!0);return Object.keys(i).length}(e,s,n.default.extend(!0,{},t.userOptions),t.dataAttribute)){var l=(0,o.generateMaskSet)(s,t.noMasksCache);void 0!==l&&(void 0!==e.inputmask&&(e.inputmask.opts.autoUnmask=!0,e.inputmask.remove()),e.inputmask=new y(void 0,void 0,!0),e.inputmask.opts=s,e.inputmask.noMasksCache=t.noMasksCache,e.inputmask.userOptions=n.default.extend(!0,{},t.userOptions),e.inputmask.el=e,e.inputmask.$el=(0,n.default)(e),e.inputmask.maskset=l,n.default.data(e,k,t.userOptions),a.mask.call(e.inputmask))}})),e&&e[0]&&e[0].inputmask||this},option:function(e,t){return"string"==typeof e?this.opts[e]:"object"===v(e)?(n.default.extend(this.userOptions,e),this.el&&!0!==t&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),void 0===this.el||void 0!==e){var t=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");u.checkVal.call(this,void 0,!1,!1,t),"function"==typeof this.opts.onBeforeWrite&&this.opts.onBeforeWrite.call(this,void 0,l.getBuffer.call(this),0,this.opts)}return u.unmaskedvalue.call(this,this.el)},remove:function(){if(this.el){n.default.data(this.el,k,null);var e=this.opts.autoUnmask?(0,u.unmaskedvalue)(this.el):this._valueGet(this.opts.autoUnmask);e!==l.getBufferTemplate.call(this).join("")?this._valueSet(e,this.opts.autoUnmask):this._valueSet(""),f.EventRuler.off(this.el),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.el),"value")&&this.__valueGet&&Object.defineProperty(this.el,"value",{get:this.__valueGet,set:this.__valueSet,configurable:!0}):g.__lookupGetter__&&this.el.__lookupGetter__("value")&&this.__valueGet&&(this.el.__defineGetter__("value",this.__valueGet),this.el.__defineSetter__("value",this.__valueSet)),this.el.inputmask=void 0}return this.el},getemptymask:function(){return this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),(this.isRTL?l.getBufferTemplate.call(this).reverse():l.getBufferTemplate.call(this)).join("")},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),c.isComplete.call(this,l.getBuffer.call(this))},getmetadata:function(){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),Array.isArray(this.maskset.metadata)){var e=s.getMaskTemplate.call(this,!0,0,!1).join("");return this.maskset.metadata.forEach((function(t){return t.mask!==e||(e=t,!1)})),e}return this.maskset.metadata},isValid:function(e){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),e){var t=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");u.checkVal.call(this,void 0,!0,!1,t)}else e=this.isRTL?l.getBuffer.call(this).slice().reverse().join(""):l.getBuffer.call(this).join("");for(var i=l.getBuffer.call(this),a=l.determineLastRequiredPosition.call(this),n=i.length-1;n>a&&!l.isMask.call(this,n);n--);return i.splice(a,n+1-a),c.isComplete.call(this,i)&&e===(this.isRTL?l.getBuffer.call(this).slice().reverse().join(""):l.getBuffer.call(this).join(""))},format:function(e,t){this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache);var i=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");u.checkVal.call(this,void 0,!0,!1,i);var a=this.isRTL?l.getBuffer.call(this).slice().reverse().join(""):l.getBuffer.call(this).join("");return t?{value:a,metadata:this.getmetadata()}:a},setValue:function(e){this.el&&(0,n.default)(this.el).trigger("setvalue",[e])},analyseMask:o.analyseMask},y.extendDefaults=function(e){n.default.extend(!0,y.prototype.defaults,e)},y.extendDefinitions=function(e){n.default.extend(!0,y.prototype.definitions,e)},y.extendAliases=function(e){n.default.extend(!0,y.prototype.aliases,e)},y.format=function(e,t,i){return y(t).format(e,i)},y.unmask=function(e,t){return y(t).unmaskedvalue(e)},y.isValid=function(e,t){return y(t).isValid(e)},y.remove=function(e){"string"==typeof e&&(e=g.getElementById(e)||g.querySelectorAll(e)),(e=e.nodeName?[e]:e).forEach((function(e){e.inputmask&&e.inputmask.remove()}))},y.setValue=function(e,t){"string"==typeof e&&(e=g.getElementById(e)||g.querySelectorAll(e)),(e=e.nodeName?[e]:e).forEach((function(e){e.inputmask?e.inputmask.setValue(t):(0,n.default)(e).trigger("setvalue",[t])}))},y.dependencyLib=n.default,r.default.Inputmask=y;var x=y;t.default=x},5296:function(e,t,i){function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}var n=h(i(9380)),r=h(i(2394)),o=h(i(8741));function s(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(r=n.key,o=void 0,o=function(e,t){if("object"!==a(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,t||"default");if("object"!==a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(r,"string"),"symbol"===a(o)?o:String(o)),n)}var r,o}function l(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function c(e){var t="function"==typeof Map?new Map:void 0;return c=function(e){if(null===e||(i=e,-1===Function.toString.call(i).indexOf("[native code]")))return e;var i;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return u(e,arguments,p(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),d(a,e)},c(e)}function u(e,t,i){return u=f()?Reflect.construct.bind():function(e,t,i){var a=[null];a.push.apply(a,t);var n=new(Function.bind.apply(e,a));return i&&d(n,i.prototype),n},u.apply(null,arguments)}function f(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}function h(e){return e&&e.__esModule?e:{default:e}}var v=n.default.document;if(o.default&&v&&v.head&&v.head.attachShadow&&n.default.customElements&&void 0===n.default.customElements.get("input-mask")){var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(u,e);var t,i,a,n,o,c=(t=u,i=f(),function(){var e,a=p(t);if(i){var n=p(this).constructor;e=Reflect.construct(a,arguments,n)}else e=a.apply(this,arguments);return l(this,e)});function u(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u);var t=(e=c.call(this)).getAttributeNames(),i=e.attachShadow({mode:"closed"}),a=v.createElement("input");for(var n in a.type="text",i.appendChild(a),t)Object.prototype.hasOwnProperty.call(t,n)&&a.setAttribute(t[n],e.getAttribute(t[n]));var o=new r.default;return o.dataAttribute="",o.mask(a),a.inputmask.shadowRoot=i,e}return a=u,n&&s(a.prototype,n),o&&s(a,o),Object.defineProperty(a,"prototype",{writable:!1}),a}(c(HTMLElement));n.default.customElements.define("input-mask",m)}},2839:function(e,t){function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var a,n,r,o,s=[],l=!0,c=!1;try{if(r=(i=i.call(e)).next,0===t){if(Object(i)!==i)return;l=!1}else for(;!(l=(a=r.call(i)).done)&&(s.push(a.value),s.length!==t);l=!0);}catch(e){c=!0,n=e}finally{try{if(!l&&null!=i.return&&(o=i.return(),Object(o)!==o))return}finally{if(c)throw n}}return s}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return a(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);"Object"===i&&e.constructor&&(i=e.constructor.name);if("Map"===i||"Set"===i)return Array.from(e);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return a(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}Object.defineProperty(t,"__esModule",{value:!0}),t.keys=t.keyCode=void 0,t.toKey=function(e,t){return r[e]||(t?String.fromCharCode(e):String.fromCharCode(e).toLowerCase())},t.toKeyCode=function(e){return n[e]};var n={AltGraph:18,ArrowDown:40,ArrowLeft:37,ArrowRight:39,ArrowUp:38,Backspace:8,BACKSPACE_SAFARI:127,CapsLock:20,Delete:46,End:35,Enter:13,Escape:27,Home:36,Insert:45,PageDown:34,PageUp:33,Space:32,Tab:9,c:67,x:88,z:90,Shift:16,Control:17,Alt:18,Pause:19,Meta_LEFT:91,Meta_RIGHT:92,ContextMenu:93,Process:229,Unidentified:229,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123};t.keyCode=n;var r=Object.entries(n).reduce((function(e,t){var a=i(t,2),n=a[0],r=a[1];return e[r]=void 0===e[r]?n:e[r],e}),{}),o=Object.entries(n).reduce((function(e,t){var a=i(t,2),n=a[0];a[1];return e[n]="Space"===n?" ":n,e}),{});t.keys=o},2391:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.analyseMask=function(e,t,i){var a,o,s,l,c,u,f=/(?:[?*+]|\{[0-9+*]+(?:,[0-9+*]*)?(?:\|[0-9+*]*)?\})|[^.?*+^${[]()|\\]+|./g,d=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,p=!1,h=new n.default,v=[],m=[],g=!1;function k(e,a,n){n=void 0!==n?n:e.matches.length;var o=e.matches[n-1];if(t){if(0===a.indexOf("[")||p&&/\\d|\\s|\\w|\\p/i.test(a)||"."===a){var s=i.casing?"i":"";/^\\p\{.*}$/i.test(a)&&(s+="u"),e.matches.splice(n++,0,{fn:new RegExp(a,s),static:!1,optionality:!1,newBlockMarker:void 0===o?"master":o.def!==a,casing:null,def:a,placeholder:void 0,nativeDef:a})}else p&&(a=a[a.length-1]),a.split("").forEach((function(t,a){o=e.matches[n-1],e.matches.splice(n++,0,{fn:/[a-z]/i.test(i.staticDefinitionSymbol||t)?new RegExp("["+(i.staticDefinitionSymbol||t)+"]",i.casing?"i":""):null,static:!0,optionality:!1,newBlockMarker:void 0===o?"master":o.def!==t&&!0!==o.static,casing:null,def:i.staticDefinitionSymbol||t,placeholder:void 0!==i.staticDefinitionSymbol?t:void 0,nativeDef:(p?"'":"")+t})}));p=!1}else{var l=i.definitions&&i.definitions[a]||i.usePrototypeDefinitions&&r.default.prototype.definitions[a];l&&!p?e.matches.splice(n++,0,{fn:l.validator?"string"==typeof l.validator?new RegExp(l.validator,i.casing?"i":""):new function(){this.test=l.validator}:new RegExp("."),static:l.static||!1,optionality:l.optional||!1,defOptionality:l.optional||!1,newBlockMarker:void 0===o||l.optional?"master":o.def!==(l.definitionSymbol||a),casing:l.casing,def:l.definitionSymbol||a,placeholder:l.placeholder,nativeDef:a,generated:l.generated}):(e.matches.splice(n++,0,{fn:/[a-z]/i.test(i.staticDefinitionSymbol||a)?new RegExp("["+(i.staticDefinitionSymbol||a)+"]",i.casing?"i":""):null,static:!0,optionality:!1,newBlockMarker:void 0===o?"master":o.def!==a&&!0!==o.static,casing:null,def:i.staticDefinitionSymbol||a,placeholder:void 0!==i.staticDefinitionSymbol?a:void 0,nativeDef:(p?"'":"")+a}),p=!1)}}function y(){if(v.length>0){if(k(l=v[v.length-1],o),l.isAlternator){c=v.pop();for(var e=0;e<c.matches.length;e++)c.matches[e].isGroup&&(c.matches[e].isGroup=!1);v.length>0?(l=v[v.length-1]).matches.push(c):h.matches.push(c)}}else k(h,o)}function b(e){var t=new n.default(!0);return t.openGroup=!1,t.matches=e,t}function x(){if((s=v.pop()).openGroup=!1,void 0!==s)if(v.length>0){if((l=v[v.length-1]).matches.push(s),l.isAlternator){for(var e=(c=v.pop()).matches[0].matches?c.matches[0].matches.length:1,t=0;t<c.matches.length;t++)c.matches[t].isGroup=!1,c.matches[t].alternatorGroup=!1,null===i.keepStatic&&e<(c.matches[t].matches?c.matches[t].matches.length:1)&&(i.keepStatic=!0),e=c.matches[t].matches?c.matches[t].matches.length:1;v.length>0?(l=v[v.length-1]).matches.push(c):h.matches.push(c)}}else h.matches.push(s);else y()}function P(e){var t=e.pop();return t.isQuantifier&&(t=b([e.pop(),t])),t}t&&(i.optionalmarker[0]=void 0,i.optionalmarker[1]=void 0);for(;a=t?d.exec(e):f.exec(e);){if(o=a[0],t){switch(o.charAt(0)){case"?":o="{0,1}";break;case"+":case"*":o="{"+o+"}";break;case"|":if(0===v.length){var w=b(h.matches);w.openGroup=!0,v.push(w),h.matches=[],g=!0}}switch(o){case"\\d":o="[0-9]";break;case"\\p":o+=d.exec(e)[0],o+=d.exec(e)[0]}}if(p)y();else switch(o.charAt(0)){case"$":case"^":t||y();break;case i.escapeChar:p=!0,t&&y();break;case i.optionalmarker[1]:case i.groupmarker[1]:x();break;case i.optionalmarker[0]:v.push(new n.default(!1,!0));break;case i.groupmarker[0]:v.push(new n.default(!0));break;case i.quantifiermarker[0]:var S=new n.default(!1,!1,!0),_=(o=o.replace(/[{}?]/g,"")).split("|"),M=_[0].split(","),O=isNaN(M[0])?M[0]:parseInt(M[0]),E=1===M.length?O:isNaN(M[1])?M[1]:parseInt(M[1]),T=isNaN(_[1])?_[1]:parseInt(_[1]);"*"!==O&&"+"!==O||(O="*"===E?0:1),S.quantifier={min:O,max:E,jit:T};var j=v.length>0?v[v.length-1].matches:h.matches;(a=j.pop()).isGroup||(a=b([a])),j.push(a),j.push(S);break;case i.alternatormarker:if(v.length>0){var D=(l=v[v.length-1]).matches[l.matches.length-1];u=l.openGroup&&(void 0===D.matches||!1===D.isGroup&&!1===D.isAlternator)?v.pop():P(l.matches)}else u=P(h.matches);if(u.isAlternator)v.push(u);else if(u.alternatorGroup?(c=v.pop(),u.alternatorGroup=!1):c=new n.default(!1,!1,!1,!0),c.matches.push(u),v.push(c),u.openGroup){u.openGroup=!1;var A=new n.default(!0);A.alternatorGroup=!0,v.push(A)}break;default:y()}}g&&x();for(;v.length>0;)s=v.pop(),h.matches.push(s);h.matches.length>0&&(!function e(a){a&&a.matches&&a.matches.forEach((function(n,r){var o=a.matches[r+1];(void 0===o||void 0===o.matches||!1===o.isQuantifier)&&n&&n.isGroup&&(n.isGroup=!1,t||(k(n,i.groupmarker[0],0),!0!==n.openGroup&&k(n,i.groupmarker[1]))),e(n)}))}(h),m.push(h));(i.numericInput||i.isRTL)&&function e(t){for(var a in t.matches=t.matches.reverse(),t.matches)if(Object.prototype.hasOwnProperty.call(t.matches,a)){var n=parseInt(a);if(t.matches[a].isQuantifier&&t.matches[n+1]&&t.matches[n+1].isGroup){var r=t.matches[a];t.matches.splice(a,1),t.matches.splice(n+1,0,r)}void 0!==t.matches[a].matches?t.matches[a]=e(t.matches[a]):t.matches[a]=((o=t.matches[a])===i.optionalmarker[0]?o=i.optionalmarker[1]:o===i.optionalmarker[1]?o=i.optionalmarker[0]:o===i.groupmarker[0]?o=i.groupmarker[1]:o===i.groupmarker[1]&&(o=i.groupmarker[0]),o)}var o;return t}(m[0]);return m},t.generateMaskSet=function(e,t){var i;function n(e,i,n){var s,l,c=!1;return null!==e&&""!==e||((c=null!==n.regex)?e=(e=n.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(c=!0,e=".*")),1===e.length&&!1===n.greedy&&0!==n.repeat&&(n.placeholder=""),e=function(e,t){var i=t.repeat,a=t.groupmarker,n=t.quantifiermarker,r=t.keepStatic;if(i>0||"*"===i||"+"===i){var s="*"===i?0:"+"===i?1:i;e=a[0]+e+a[1]+n[0]+s+","+i+n[1]}if(!0===r){var l=e.match(new RegExp("(.)\\[([^\\]]*)\\]","g"));l&&l.forEach((function(t,i){var a=t.split("["),n=a[0],r=a[1].replace("]","");e=e.replace(new RegExp("".concat((0,o.default)(n),"\\[").concat((0,o.default)(r),"\\]")),n.charAt(0)===r.charAt(0)?"(".concat(n,"|").concat(n).concat(r,")"):"".concat(n,"[").concat(r,"]"))}))}return e}(e,n),l=c?"regex_"+n.regex:n.numericInput?e.split("").reverse().join(""):e,null!==n.keepStatic&&(l="ks_"+n.keepStatic+l),void 0===r.default.prototype.masksCache[l]||!0===t?(s={mask:e,maskToken:r.default.prototype.analyseMask(e,c,n),validPositions:[],_buffer:void 0,buffer:void 0,tests:{},excludes:{},metadata:i,maskLength:void 0,jitOffset:{}},!0!==t&&(r.default.prototype.masksCache[l]=s,s=a.default.extend(!0,{},r.default.prototype.masksCache[l]))):s=a.default.extend(!0,{},r.default.prototype.masksCache[l]),s}"function"==typeof e.mask&&(e.mask=e.mask(e));if(Array.isArray(e.mask)){if(e.mask.length>1){null===e.keepStatic&&(e.keepStatic=!0);var s=e.groupmarker[0];return(e.isRTL?e.mask.reverse():e.mask).forEach((function(t){s.length>1&&(s+=e.alternatormarker),void 0!==t.mask&&"function"!=typeof t.mask?s+=t.mask:s+=t})),n(s+=e.groupmarker[1],e.mask,e)}e.mask=e.mask.pop()}i=e.mask&&void 0!==e.mask.mask&&"function"!=typeof e.mask.mask?n(e.mask.mask,e.mask,e):n(e.mask,e.mask,e);null===e.keepStatic&&(e.keepStatic=!1);return i};var a=s(i(4963)),n=s(i(9695)),r=s(i(2394)),o=s(i(7184));function s(e){return e&&e.__esModule?e:{default:e}}},157:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.mask=function(){var e=this,t=this.opts,i=this.el,u=this.dependencyLib;o.EventRuler.off(i);var f=function(t,i){"textarea"!==t.tagName.toLowerCase()&&i.ignorables.push(a.keys.Enter);var s=t.getAttribute("type"),l="input"===t.tagName.toLowerCase()&&i.supportsInputType.includes(s)||t.isContentEditable||"textarea"===t.tagName.toLowerCase();if(!l)if("input"===t.tagName.toLowerCase()){var c=document.createElement("input");c.setAttribute("type",s),l="text"===c.type,c=null}else l="partial";return!1!==l?function(t){var a,s;function l(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==n.getLastValidPosition.call(e)||!0!==i.nullable?(this.inputmask.shadowRoot||this.ownerDocument).activeElement===this&&i.clearMaskOnLostFocus?(e.isRTL?r.clearOptionalTail.call(e,n.getBuffer.call(e).slice()).reverse():r.clearOptionalTail.call(e,n.getBuffer.call(e).slice())).join(""):a.call(this):"":a.call(this)}function c(e){s.call(this,e),this.inputmask&&(0,r.applyInputValue)(this,e)}if(!t.inputmask.__valueGet){if(!0!==i.noValuePatching){if(Object.getOwnPropertyDescriptor){var f=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t),"value"):void 0;f&&f.get&&f.set?(a=f.get,s=f.set,Object.defineProperty(t,"value",{get:l,set:c,configurable:!0})):"input"!==t.tagName.toLowerCase()&&(a=function(){return this.textContent},s=function(e){this.textContent=e},Object.defineProperty(t,"value",{get:l,set:c,configurable:!0}))}else document.__lookupGetter__&&t.__lookupGetter__("value")&&(a=t.__lookupGetter__("value"),s=t.__lookupSetter__("value"),t.__defineGetter__("value",l),t.__defineSetter__("value",c));t.inputmask.__valueGet=a,t.inputmask.__valueSet=s}t.inputmask._valueGet=function(t){return e.isRTL&&!0!==t?a.call(this.el).split("").reverse().join(""):a.call(this.el)},t.inputmask._valueSet=function(t,i){s.call(this.el,null==t?"":!0!==i&&e.isRTL?t.split("").reverse().join(""):t)},void 0===a&&(a=function(){return this.value},s=function(e){this.value=e},function(t){if(u.valHooks&&(void 0===u.valHooks[t]||!0!==u.valHooks[t].inputmaskpatch)){var a=u.valHooks[t]&&u.valHooks[t].get?u.valHooks[t].get:function(e){return e.value},o=u.valHooks[t]&&u.valHooks[t].set?u.valHooks[t].set:function(e,t){return e.value=t,e};u.valHooks[t]={get:function(t){if(t.inputmask){if(t.inputmask.opts.autoUnmask)return t.inputmask.unmaskedvalue();var r=a(t);return-1!==n.getLastValidPosition.call(e,void 0,void 0,t.inputmask.maskset.validPositions)||!0!==i.nullable?r:""}return a(t)},set:function(e,t){var i=o(e,t);return e.inputmask&&(0,r.applyInputValue)(e,t),i},inputmaskpatch:!0}}}(t.type),function(e){o.EventRuler.on(e,"mouseenter",(function(){var e=this,t=e.inputmask._valueGet(!0);t!=(e.inputmask.isRTL?n.getBuffer.call(e.inputmask).slice().reverse():n.getBuffer.call(e.inputmask)).join("")&&(0,r.applyInputValue)(e,t)}))}(t))}}(t):t.inputmask=void 0,l}(i,t);if(!1!==f){e.originalPlaceholder=i.placeholder,e.maxLength=void 0!==i?i.maxLength:void 0,-1===e.maxLength&&(e.maxLength=void 0),"inputMode"in i&&null===i.getAttribute("inputmode")&&(i.inputMode=t.inputmode,i.setAttribute("inputmode",t.inputmode)),!0===f&&(t.showMaskOnFocus=t.showMaskOnFocus&&-1===["cc-number","cc-exp"].indexOf(i.autocomplete),s.iphone&&(t.insertModeVisual=!1,i.setAttribute("autocorrect","off")),o.EventRuler.on(i,"submit",c.EventHandlers.submitEvent),o.EventRuler.on(i,"reset",c.EventHandlers.resetEvent),o.EventRuler.on(i,"blur",c.EventHandlers.blurEvent),o.EventRuler.on(i,"focus",c.EventHandlers.focusEvent),o.EventRuler.on(i,"invalid",c.EventHandlers.invalidEvent),o.EventRuler.on(i,"click",c.EventHandlers.clickEvent),o.EventRuler.on(i,"mouseleave",c.EventHandlers.mouseleaveEvent),o.EventRuler.on(i,"mouseenter",c.EventHandlers.mouseenterEvent),o.EventRuler.on(i,"paste",c.EventHandlers.pasteEvent),o.EventRuler.on(i,"cut",c.EventHandlers.cutEvent),o.EventRuler.on(i,"complete",t.oncomplete),o.EventRuler.on(i,"incomplete",t.onincomplete),o.EventRuler.on(i,"cleared",t.oncleared),!0!==t.inputEventOnly&&o.EventRuler.on(i,"keydown",c.EventHandlers.keyEvent),(s.mobile||t.inputEventOnly)&&i.removeAttribute("maxLength"),o.EventRuler.on(i,"input",c.EventHandlers.inputFallBackEvent)),o.EventRuler.on(i,"setvalue",c.EventHandlers.setValueEvent),n.getBufferTemplate.call(e).join(""),e.undoValue=e._valueGet(!0);var d=(i.inputmask.shadowRoot||i.ownerDocument).activeElement;if(""!==i.inputmask._valueGet(!0)||!1===t.clearMaskOnLostFocus||d===i){(0,r.applyInputValue)(i,i.inputmask._valueGet(!0),t);var p=n.getBuffer.call(e).slice();!1===l.isComplete.call(e,p)&&t.clearIncomplete&&n.resetMaskSet.call(e),t.clearMaskOnLostFocus&&d!==i&&(-1===n.getLastValidPosition.call(e)?p=[]:r.clearOptionalTail.call(e,p)),(!1===t.clearMaskOnLostFocus||t.showMaskOnFocus&&d===i||""!==i.inputmask._valueGet(!0))&&(0,r.writeBuffer)(i,p),d===i&&n.caret.call(e,i,n.seekNext.call(e,n.getLastValidPosition.call(e)))}}};var a=i(2839),n=i(8711),r=i(7760),o=i(9716),s=i(9845),l=i(7215),c=i(6030)},9695:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,a){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=i||!1,this.isAlternator=a||!1,this.quantifier={min:1,max:1}}},3194:function(){Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,t){if(null==this)throw new TypeError('"this" is null or not defined');var i=Object(this),a=i.length>>>0;if(0===a)return!1;for(var n=0|t,r=Math.max(n>=0?n:a-Math.abs(n),0);r<a;){if(i[r]===e)return!0;r++}return!1}})},9302:function(){var e=Function.bind.call(Function.call,Array.prototype.reduce),t=Function.bind.call(Function.call,Object.prototype.propertyIsEnumerable),i=Function.bind.call(Function.call,Array.prototype.concat),a=Object.keys;Object.entries||(Object.entries=function(n){return e(a(n),(function(e,a){return i(e,"string"==typeof a&&t(n,a)?[[a,n[a]]]:[])}),[])})},7149:function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===e("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype})},4013:function(){String.prototype.includes||(String.prototype.includes=function(e,t){return"number"!=typeof t&&(t=0),!(t+e.length>this.length)&&-1!==this.indexOf(e,t)})},8711:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.caret=function(e,t,i,a,n){var r,o=this,s=this.opts;if(void 0===t)return"selectionStart"in e&&"selectionEnd"in e?(t=e.selectionStart,i=e.selectionEnd):window.getSelection?(r=window.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==e&&r.commonAncestorContainer!==e||(t=r.startOffset,i=r.endOffset):document.selection&&document.selection.createRange&&(r=document.selection.createRange(),t=0-r.duplicate().moveStart("character",-e.inputmask._valueGet().length),i=t+r.text.length),{begin:a?t:c.call(o,t),end:a?i:c.call(o,i)};if(Array.isArray(t)&&(i=o.isRTL?t[0]:t[1],t=o.isRTL?t[1]:t[0]),void 0!==t.begin&&(i=o.isRTL?t.begin:t.end,t=o.isRTL?t.end:t.begin),"number"==typeof t){t=a?t:c.call(o,t),i="number"==typeof(i=a?i:c.call(o,i))?i:t;var l=parseInt(((e.ownerDocument.defaultView||window).getComputedStyle?(e.ownerDocument.defaultView||window).getComputedStyle(e,null):e.currentStyle).fontSize)*i;if(e.scrollLeft=l>e.scrollWidth?l:0,e.inputmask.caretPos={begin:t,end:i},s.insertModeVisual&&!1===s.insertMode&&t===i&&(n||i++),e===(e.inputmask.shadowRoot||e.ownerDocument).activeElement)if("setSelectionRange"in e)e.setSelectionRange(t,i);else if(window.getSelection){if(r=document.createRange(),void 0===e.firstChild||null===e.firstChild){var u=document.createTextNode("");e.appendChild(u)}r.setStart(e.firstChild,t<e.inputmask._valueGet().length?t:e.inputmask._valueGet().length),r.setEnd(e.firstChild,i<e.inputmask._valueGet().length?i:e.inputmask._valueGet().length),r.collapse(!0);var f=window.getSelection();f.removeAllRanges(),f.addRange(r)}else e.createTextRange&&((r=e.createTextRange()).collapse(!0),r.moveEnd("character",i),r.moveStart("character",t),r.select())}},t.determineLastRequiredPosition=function(e){var t,i,r=this,s=r.maskset,l=r.dependencyLib,c=a.getMaskTemplate.call(r,!0,o.call(r),!0,!0),u=c.length,f=o.call(r),d={},p=s.validPositions[f],h=void 0!==p?p.locator.slice():void 0;for(t=f+1;t<c.length;t++)i=a.getTestTemplate.call(r,t,h,t-1),h=i.locator.slice(),d[t]=l.extend(!0,{},i);var v=p&&void 0!==p.alternation?p.locator[p.alternation]:void 0;for(t=u-1;t>f&&(((i=d[t]).match.optionality||i.match.optionalQuantifier&&i.match.newBlockMarker||v&&(v!==d[t].locator[p.alternation]&&1!=i.match.static||!0===i.match.static&&i.locator[p.alternation]&&n.checkAlternationMatch.call(r,i.locator[p.alternation].toString().split(","),v.toString().split(","))&&""!==a.getTests.call(r,t)[0].def))&&c[t]===a.getPlaceholder.call(r,t,i.match));t--)u--;return e?{l:u,def:d[u]?d[u].match:void 0}:u},t.determineNewCaretPosition=function(e,t,i){var n=this,c=n.maskset,u=n.opts;t&&(n.isRTL?e.end=e.begin:e.begin=e.end);if(e.begin===e.end){switch(i=i||u.positionCaretOnClick){case"none":break;case"select":e={begin:0,end:r.call(n).length};break;case"ignore":e.end=e.begin=l.call(n,o.call(n));break;case"radixFocus":if(n.clicked>1&&0==c.validPositions.length)break;if(function(e){if(""!==u.radixPoint&&0!==u.digits){var t=c.validPositions;if(void 0===t[e]||t[e].input===a.getPlaceholder.call(n,e)){if(e<l.call(n,-1))return!0;var i=r.call(n).indexOf(u.radixPoint);if(-1!==i){for(var o=0,s=t.length;o<s;o++)if(t[o]&&i<o&&t[o].input!==a.getPlaceholder.call(n,o))return!1;return!0}}}return!1}(e.begin)){var f=r.call(n).join("").indexOf(u.radixPoint);e.end=e.begin=u.numericInput?l.call(n,f):f;break}default:var d=e.begin,p=o.call(n,d,!0),h=l.call(n,-1!==p||s.call(n,0)?p:-1);if(d<=h)e.end=e.begin=s.call(n,d,!1,!0)?d:l.call(n,d);else{var v=c.validPositions[p],m=a.getTestTemplate.call(n,h,v?v.match.locator:void 0,v),g=a.getPlaceholder.call(n,h,m.match);if(""!==g&&r.call(n)[h]!==g&&!0!==m.match.optionalQuantifier&&!0!==m.match.newBlockMarker||!s.call(n,h,u.keepStatic,!0)&&m.match.def===g){var k=l.call(n,h);(d>=k||d===h)&&(h=k)}e.end=e.begin=h}}return e}},t.getBuffer=r,t.getBufferTemplate=function(){var e=this.maskset;void 0===e._buffer&&(e._buffer=a.getMaskTemplate.call(this,!1,1),void 0===e.buffer&&(e.buffer=e._buffer.slice()));return e._buffer},t.getLastValidPosition=o,t.isMask=s,t.resetMaskSet=function(e){var t=this.maskset;t.buffer=void 0,!0!==e&&(t.validPositions=[],t.p=0)},t.seekNext=l,t.seekPrevious=function(e,t){var i=this,n=e-1;if(e<=0)return 0;for(;n>0&&(!0===t&&(!0!==a.getTest.call(i,n).match.newBlockMarker||!s.call(i,n,void 0,!0))||!0!==t&&!s.call(i,n,void 0,!0));)n--;return n},t.translatePosition=c;var a=i(4713),n=i(7215);function r(e){var t=this,i=t.maskset;return void 0!==i.buffer&&!0!==e||(i.buffer=a.getMaskTemplate.call(t,!0,o.call(t),!0),void 0===i._buffer&&(i._buffer=i.buffer.slice())),i.buffer}function o(e,t,i){var a=this.maskset,n=-1,r=-1,o=i||a.validPositions;void 0===e&&(e=-1);for(var s=0,l=o.length;s<l;s++)o[s]&&(t||!0!==o[s].generatedInput)&&(s<=e&&(n=s),s>=e&&(r=s));return-1===n||n==e?r:-1==r||e-n<r-e?n:r}function s(e,t,i){var n=this,r=this.maskset,o=a.getTestTemplate.call(n,e).match;if(""===o.def&&(o=a.getTest.call(n,e).match),!0!==o.static)return o.fn;if(!0===i&&void 0!==r.validPositions[e]&&!0!==r.validPositions[e].generatedInput)return!0;if(!0!==t&&e>-1){if(i){var s=a.getTests.call(n,e);return s.length>1+(""===s[s.length-1].match.def?1:0)}var l=a.determineTestTemplate.call(n,e,a.getTests.call(n,e)),c=a.getPlaceholder.call(n,e,l.match);return l.match.def!==c}return!1}function l(e,t,i){var n=this;void 0===i&&(i=!0);for(var r=e+1;""!==a.getTest.call(n,r).match.def&&(!0===t&&(!0!==a.getTest.call(n,r).match.newBlockMarker||!s.call(n,r,void 0,!0))||!0!==t&&!s.call(n,r,void 0,i));)r++;return r}function c(e){var t=this.opts,i=this.el;return!this.isRTL||"number"!=typeof e||t.greedy&&""===t.placeholder||!i||(e=this._valueGet().length-e)<0&&(e=0),e}},4713:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.determineTestTemplate=c,t.getDecisionTaker=o,t.getMaskTemplate=function(e,t,i,a,n){var r=this,o=this.opts,u=this.maskset,f=o.greedy;n&&o.greedy&&(o.greedy=!1,r.maskset.tests={});t=t||0;var p,h,v,m,g=[],k=0;do{if(!0===e&&u.validPositions[k])v=n&&u.validPositions[k].match.optionality&&void 0===u.validPositions[k+1]&&(!0===u.validPositions[k].generatedInput||u.validPositions[k].input==o.skipOptionalPartCharacter&&k>0)?c.call(r,k,d.call(r,k,p,k-1)):u.validPositions[k],h=v.match,p=v.locator.slice(),g.push(!0===i?v.input:!1===i?h.nativeDef:s.call(r,k,h));else{v=l.call(r,k,p,k-1),h=v.match,p=v.locator.slice();var y=!0!==a&&(!1!==o.jitMasking?o.jitMasking:h.jit);(m=(m&&h.static&&h.def!==o.groupSeparator&&null===h.fn||u.validPositions[k-1]&&h.static&&h.def!==o.groupSeparator&&null===h.fn)&&u.tests[k]&&1===u.tests[k].length)||!1===y||void 0===y||"number"==typeof y&&isFinite(y)&&y>k?g.push(!1===i?h.nativeDef:s.call(r,g.length,h)):m=!1}k++}while(!0!==h.static||""!==h.def||t>k);""===g[g.length-1]&&g.pop();!1===i&&void 0!==u.maskLength||(u.maskLength=k-1);return o.greedy=f,g},t.getPlaceholder=s,t.getTest=u,t.getTestTemplate=l,t.getTests=d,t.isSubsetOf=f;var a,n=(a=i(2394))&&a.__esModule?a:{default:a};function r(e,t){var i=(null!=e.alternation?e.mloc[o(e)]:e.locator).join("");if(""!==i)for(;i.length<t;)i+="0";return i}function o(e){var t=e.locator[e.alternation];return"string"==typeof t&&t.length>0&&(t=t.split(",")[0]),void 0!==t?t.toString():""}function s(e,t,i){var a=this.opts,n=this.maskset;if(void 0!==(t=t||u.call(this,e).match).placeholder||!0===i)return"function"==typeof t.placeholder?t.placeholder(a):t.placeholder;if(!0===t.static){if(e>-1&&void 0===n.validPositions[e]){var r,o=d.call(this,e),s=[];if(o.length>1+(""===o[o.length-1].match.def?1:0))for(var l=0;l<o.length;l++)if(""!==o[l].match.def&&!0!==o[l].match.optionality&&!0!==o[l].match.optionalQuantifier&&(!0===o[l].match.static||void 0===r||!1!==o[l].match.fn.test(r.match.def,n,e,!0,a))&&(s.push(o[l]),!0===o[l].match.static&&(r=o[l]),s.length>1&&/[0-9a-bA-Z]/.test(s[0].match.def)))return a.placeholder.charAt(e%a.placeholder.length)}return t.def}return a.placeholder.charAt(e%a.placeholder.length)}function l(e,t,i){return this.maskset.validPositions[e]||c.call(this,e,d.call(this,e,t?t.slice():t,i))}function c(e,t){var i=this.opts,a=0,n=function(e,t){var i=0,a=!1;t.forEach((function(e){e.match.optionality&&(0!==i&&i!==e.match.optionality&&(a=!0),(0===i||i>e.match.optionality)&&(i=e.match.optionality))})),i&&(0==e||1==t.length?i=0:a||(i=0));return i}(e,t);e=e>0?e-1:0;var o,s,l,c=r(u.call(this,e));i.greedy&&t.length>1&&""===t[t.length-1].match.def&&(a=1);for(var f=0;f<t.length-a;f++){var d=t[f];o=r(d,c.length);var p=Math.abs(o-c);(void 0===s||""!==o&&p<s||l&&!i.greedy&&l.match.optionality&&l.match.optionality-n>0&&"master"===l.match.newBlockMarker&&(!d.match.optionality||d.match.optionality-n<1||!d.match.newBlockMarker)||l&&!i.greedy&&l.match.optionalQuantifier&&!d.match.optionalQuantifier)&&(s=p,l=d)}return l}function u(e,t){var i=this.maskset;return i.validPositions[e]?i.validPositions[e]:(t||d.call(this,e))[0]}function f(e,t,i){function a(e){for(var t,i=[],a=-1,n=0,r=e.length;n<r;n++)if("-"===e.charAt(n))for(t=e.charCodeAt(n+1);++a<t;)i.push(String.fromCharCode(a));else a=e.charCodeAt(n),i.push(e.charAt(n));return i.join("")}return e.match.def===t.match.nativeDef||!(!(i.regex||e.match.fn instanceof RegExp&&t.match.fn instanceof RegExp)||!0===e.match.static||!0===t.match.static)&&-1!==a(t.match.fn.toString().replace(/[[\]/]/g,"")).indexOf(a(e.match.fn.toString().replace(/[[\]/]/g,"")))}function d(e,t,i){var a,r,o=this,s=this.dependencyLib,l=this.maskset,u=this.opts,d=this.el,p=l.maskToken,h=t?i:0,v=t?t.slice():[0],m=[],g=!1,k=t?t.join(""):"";function y(t,i,r,o){function s(r,o,c){function p(e,t){var i=0===t.matches.indexOf(e);return i||t.matches.every((function(a,n){return!0===a.isQuantifier?i=p(e,t.matches[n-1]):Object.prototype.hasOwnProperty.call(a,"matches")&&(i=p(e,a)),!i})),i}function v(e,t,i){var a,n;if((l.tests[e]||l.validPositions[e])&&(l.tests[e]||[l.validPositions[e]]).every((function(e,r){if(e.mloc[t])return a=e,!1;var o=void 0!==i?i:e.alternation,s=void 0!==e.locator[o]?e.locator[o].toString().indexOf(t):-1;return(void 0===n||s<n)&&-1!==s&&(a=e,n=s),!0})),a){var r=a.locator[a.alternation];return(a.mloc[t]||a.mloc[r]||a.locator).slice((void 0!==i?i:a.alternation)+1)}return void 0!==i?v(e,t):void 0}function x(e,t){var i=e.alternation,a=void 0===t||i===t.alternation&&-1===e.locator[i].toString().indexOf(t.locator[i]);if(!a&&i>t.alternation)for(var n=t.alternation;n<i;n++)if(e.locator[n]!==t.locator[n]){i=n,a=!0;break}if(a){e.mloc=e.mloc||{};var r=e.locator[i];if(void 0!==r){if("string"==typeof r&&(r=r.split(",")[0]),void 0===e.mloc[r]&&(e.mloc[r]=e.locator.slice()),void 0!==t){for(var o in t.mloc)"string"==typeof o&&(o=o.split(",")[0]),void 0===e.mloc[o]&&(e.mloc[o]=t.mloc[o]);e.locator[i]=Object.keys(e.mloc).join(",")}return!0}e.alternation=void 0}return!1}function P(e,t){if(e.locator.length!==t.locator.length)return!1;for(var i=e.alternation+1;i<e.locator.length;i++)if(e.locator[i]!==t.locator[i])return!1;return!0}if(h>e+u._maxTestPos)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+l.mask;if(h===e&&void 0===r.matches){if(m.push({match:r,locator:o.reverse(),cd:k,mloc:{}}),!r.optionality||void 0!==c||!(u.definitions&&u.definitions[r.nativeDef]&&u.definitions[r.nativeDef].optional||n.default.prototype.definitions[r.nativeDef]&&n.default.prototype.definitions[r.nativeDef].optional))return!0;g=!0,h=e}else if(void 0!==r.matches){if(r.isGroup&&c!==r)return function(){if(r=s(t.matches[t.matches.indexOf(r)+1],o,c))return!0}();if(r.isOptional)return function(){var t=r,n=m.length;if(r=y(r,i,o,c),m.length>0){if(m.forEach((function(e,t){t>=n&&(e.match.optionality=e.match.optionality?e.match.optionality+1:1)})),a=m[m.length-1].match,void 0!==c||!p(a,t))return r;g=!0,h=e}}();if(r.isAlternator)return function(){var a,n,p,k=r,y=[],b=m.slice(),w=o.length,S=!1,_=i.length>0?i.shift():-1;if(-1===_||"string"==typeof _){var M,O=h,E=i.slice(),T=[];if("string"==typeof _)T=_.split(",");else for(M=0;M<k.matches.length;M++)T.push(M.toString());if(void 0!==l.excludes[e]){for(var j=T.slice(),D=0,A=l.excludes[e].length;D<A;D++){var B=l.excludes[e][D].toString().split(":");o.length==B[1]&&T.splice(T.indexOf(B[0]),1)}0===T.length&&(delete l.excludes[e],T=j)}(!0===u.keepStatic||isFinite(parseInt(u.keepStatic))&&O>=u.keepStatic)&&(T=T.slice(0,1));for(var C=0;C<T.length;C++){M=parseInt(T[C]),m=[],i="string"==typeof _&&v(h,M,w)||E.slice();var R=k.matches[M];if(R&&s(R,[M].concat(o),c))r=!0;else if(0===C&&(S=!0),R&&R.matches&&R.matches.length>k.matches[0].matches.length)break;a=m.slice(),h=O,m=[];for(var L=0;L<a.length;L++){var F=a[L],I=!1;F.match.jit=F.match.jit||S,F.alternation=F.alternation||w,x(F);for(var N=0;N<y.length;N++){var V=y[N];if("string"!=typeof _||void 0!==F.alternation&&T.includes(F.locator[F.alternation].toString())){if(F.match.nativeDef===V.match.nativeDef){I=!0,x(V,F);break}if(f(F,V,u)){x(F,V)&&(I=!0,y.splice(y.indexOf(V),0,F));break}if(f(V,F,u)){x(V,F);break}if(p=V,!0===(n=F).match.static&&!0!==p.match.static&&p.match.fn.test(n.match.def,l,e,!1,u,!1)){P(F,V)||void 0!==d.inputmask.userOptions.keepStatic?x(F,V)&&(I=!0,y.splice(y.indexOf(V),0,F)):u.keepStatic=!0;break}}}I||y.push(F)}}m=b.concat(y),h=e,g=m.length>0,r=y.length>0,i=E.slice()}else r=s(k.matches[_]||t.matches[_],[_].concat(o),c);if(r)return!0}();if(r.isQuantifier&&c!==t.matches[t.matches.indexOf(r)-1])return function(){for(var n=r,c=!1,f=i.length>0?i.shift():0;f<(isNaN(n.quantifier.max)?f+1:n.quantifier.max)&&h<=e;f++){var d=t.matches[t.matches.indexOf(n)-1];if(r=s(d,[f].concat(o),d)){if(m.forEach((function(t,i){(a=b(d,t.match)?t.match:m[m.length-1].match).optionalQuantifier=f>=n.quantifier.min,a.jit=(f+1)*(d.matches.indexOf(a)+1)>n.quantifier.jit,a.optionalQuantifier&&p(a,d)&&(g=!0,h=e,u.greedy&&null==l.validPositions[e-1]&&f>n.quantifier.min&&-1!=["*","+"].indexOf(n.quantifier.max)&&(m.pop(),k=void 0),c=!0,r=!1),!c&&a.jit&&(l.jitOffset[e]=d.matches.length-d.matches.indexOf(a))})),c)break;return!0}}}();if(r=y(r,i,o,c))return!0}else h++}for(var c=i.length>0?i.shift():0;c<t.matches.length;c++)if(!0!==t.matches[c].isQuantifier){var p=s(t.matches[c],[c].concat(r),o);if(p&&h===e)return p;if(h>e)break}}function b(e,t){var i=-1!=e.matches.indexOf(t);return i||e.matches.forEach((function(e,a){void 0===e.matches||i||(i=b(e,t))})),i}if(e>-1){if(void 0===t){for(var x,P=e-1;void 0===(x=l.validPositions[P]||l.tests[P])&&P>-1;)P--;void 0!==x&&P>-1&&(v=function(e,t){var i,a=[];return Array.isArray(t)||(t=[t]),t.length>0&&(void 0===t[0].alternation||!0===u.keepStatic?0===(a=c.call(o,e,t.slice()).locator.slice()).length&&(a=t[0].locator.slice()):t.forEach((function(e){""!==e.def&&(0===a.length?(i=e.alternation,a=e.locator.slice()):e.locator[i]&&-1===a[i].toString().indexOf(e.locator[i])&&(a[i]+=","+e.locator[i]))}))),a}(P,x),k=v.join(""),h=P)}if(l.tests[e]&&l.tests[e][0].cd===k)return l.tests[e];for(var w=v.shift();w<p.length;w++){if(y(p[w],v,[w])&&h===e||h>e)break}}return(0===m.length||g)&&m.push({match:{fn:null,static:!0,optionality:!1,casing:null,def:"",placeholder:""},locator:[],mloc:{},cd:k}),void 0!==t&&l.tests[e]?r=s.extend(!0,[],m):(l.tests[e]=s.extend(!0,[],m),r=l.tests[e]),m.forEach((function(e){e.match.optionality=e.match.defOptionality||!1})),r}},7215:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.alternate=s,t.checkAlternationMatch=function(e,t,i){for(var a,n=this.opts.greedy?t:t.slice(0,1),r=!1,o=void 0!==i?i.split(","):[],s=0;s<o.length;s++)-1!==(a=e.indexOf(o[s]))&&e.splice(a,1);for(var l=0;l<e.length;l++)if(n.includes(e[l])){r=!0;break}return r},t.handleRemove=function(e,t,i,o,l){var c=this,u=this.maskset,f=this.opts;if((f.numericInput||c.isRTL)&&(t===n.keys.Backspace?t=n.keys.Delete:t===n.keys.Delete&&(t=n.keys.Backspace),c.isRTL)){var d=i.end;i.end=i.begin,i.begin=d}var p,h=r.getLastValidPosition.call(c,void 0,!0);i.end>=r.getBuffer.call(c).length&&h>=i.end&&(i.end=h+1);t===n.keys.Backspace?i.end-i.begin<1&&(i.begin=r.seekPrevious.call(c,i.begin)):t===n.keys.Delete&&i.begin===i.end&&(i.end=r.isMask.call(c,i.end,!0,!0)?i.end+1:r.seekNext.call(c,i.end)+1);if(!1!==(p=v.call(c,i))){if(!0!==o&&!1!==f.keepStatic||null!==f.regex&&-1!==a.getTest.call(c,i.begin).match.def.indexOf("|")){var m=s.call(c,!0);if(m){var g=void 0!==m.caret?m.caret:m.pos?r.seekNext.call(c,m.pos.begin?m.pos.begin:m.pos):r.getLastValidPosition.call(c,-1,!0);(t!==n.keys.Delete||i.begin>g)&&i.begin}}!0!==o&&(u.p=t===n.keys.Delete?i.begin+p:i.begin,u.p=r.determineNewCaretPosition.call(c,{begin:u.p,end:u.p},!1,!1===f.insertMode&&t===n.keys.Backspace?"none":void 0).begin)}},t.isComplete=c,t.isSelection=u,t.isValid=f,t.refreshFromBuffer=p,t.revalidateMask=v;var a=i(4713),n=i(2839),r=i(8711),o=i(6030);function s(e,t,i,n,o,l){var c,u,d,p,h,v,m,g,k,y,b,x=this,P=this.dependencyLib,w=this.opts,S=x.maskset,_=P.extend(!0,[],S.validPositions),M=P.extend(!0,{},S.tests),O=!1,E=!1,T=void 0!==o?o:r.getLastValidPosition.call(x);if(l&&(y=l.begin,b=l.end,l.begin>l.end&&(y=l.end,b=l.begin)),-1===T&&void 0===o)c=0,u=(p=a.getTest.call(x,c)).alternation;else for(;T>=0;T--)if((d=S.validPositions[T])&&void 0!==d.alternation){if(p&&p.locator[d.alternation]!==d.locator[d.alternation])break;c=T,u=S.validPositions[c].alternation,p=d}if(void 0!==u){m=parseInt(c),S.excludes[m]=S.excludes[m]||[],!0!==e&&S.excludes[m].push((0,a.getDecisionTaker)(p)+":"+p.alternation);var j=[],D=-1;for(h=m;h<r.getLastValidPosition.call(x,void 0,!0)+1;h++)-1===D&&e<=h&&void 0!==t&&(j.push(t),D=j.length-1),(v=S.validPositions[h])&&!0!==v.generatedInput&&(void 0===l||h<y||h>=b)&&j.push(v.input),delete S.validPositions[h];for(-1===D&&void 0!==t&&(j.push(t),D=j.length-1);void 0!==S.excludes[m]&&S.excludes[m].length<10;){for(S.tests={},r.resetMaskSet.call(x,!0),O=!0,h=0;h<j.length&&(g=O.caret||r.getLastValidPosition.call(x,void 0,!0)+1,k=j[h],O=f.call(x,g,k,!1,n,!0));h++)h===D&&(E=O),1==e&&O&&(E={caretPos:h});if(O)break;if(r.resetMaskSet.call(x),p=a.getTest.call(x,m),S.validPositions=P.extend(!0,[],_),S.tests=P.extend(!0,{},M),!S.excludes[m]){E=s.call(x,e,t,i,n,m-1,l);break}var A=(0,a.getDecisionTaker)(p);if(-1!==S.excludes[m].indexOf(A+":"+p.alternation)){E=s.call(x,e,t,i,n,m-1,l);break}for(S.excludes[m].push(A+":"+p.alternation),h=m;h<r.getLastValidPosition.call(x,void 0,!0)+1;h++)delete S.validPositions[h]}}return E&&!1===w.keepStatic||delete S.excludes[m],E}function l(e,t,i){var a=this.opts,r=this.maskset;switch(a.casing||t.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var o=r.validPositions[i-1];e=0===i||o&&o.input===String.fromCharCode(n.keyCode.Space)?e.toUpperCase():e.toLowerCase();break;default:if("function"==typeof a.casing){var s=Array.prototype.slice.call(arguments);s.push(r.validPositions),e=a.casing.apply(this,s)}}return e}function c(e){var t=this,i=this.opts,n=this.maskset;if("function"==typeof i.isComplete)return i.isComplete(e,i);if("*"!==i.repeat){var o=!1,s=r.determineLastRequiredPosition.call(t,!0),l=r.seekPrevious.call(t,s.l);if(void 0===s.def||s.def.newBlockMarker||s.def.optionality||s.def.optionalQuantifier){o=!0;for(var c=0;c<=l;c++){var u=a.getTestTemplate.call(t,c).match;if(!0!==u.static&&void 0===n.validPositions[c]&&!0!==u.optionality&&!0!==u.optionalQuantifier||!0===u.static&&e[c]!==a.getPlaceholder.call(t,c,u)){o=!1;break}}}return o}}function u(e){var t=this.opts.insertMode?0:1;return this.isRTL?e.begin-e.end>t:e.end-e.begin>t}function f(e,t,i,n,o,d,m){var g=this,k=this.dependencyLib,y=this.opts,b=g.maskset;i=!0===i;var x=e;function P(e){if(void 0!==e){if(void 0!==e.remove&&(Array.isArray(e.remove)||(e.remove=[e.remove]),e.remove.sort((function(e,t){return g.isRTL?e.pos-t.pos:t.pos-e.pos})).forEach((function(e){v.call(g,{begin:e,end:e+1})})),e.remove=void 0),void 0!==e.insert&&(Array.isArray(e.insert)||(e.insert=[e.insert]),e.insert.sort((function(e,t){return g.isRTL?t.pos-e.pos:e.pos-t.pos})).forEach((function(e){""!==e.c&&f.call(g,e.pos,e.c,void 0===e.strict||e.strict,void 0!==e.fromIsValid?e.fromIsValid:n)})),e.insert=void 0),e.refreshFromBuffer&&e.buffer){var t=e.refreshFromBuffer;p.call(g,!0===t?t:t.start,t.end,e.buffer),e.refreshFromBuffer=void 0}void 0!==e.rewritePosition&&(x=e.rewritePosition,e=!0)}return e}function w(t,i,o){var s=!1;return a.getTests.call(g,t).every((function(c,f){var d=c.match;if(r.getBuffer.call(g,!0),!1!==(s=(!d.jit||void 0!==b.validPositions[r.seekPrevious.call(g,t)])&&(null!=d.fn?d.fn.test(i,b,t,o,y,u.call(g,e)):(i===d.def||i===y.skipOptionalPartCharacter)&&""!==d.def&&{c:a.getPlaceholder.call(g,t,d,!0)||d.def,pos:t}))){var p=void 0!==s.c?s.c:i,h=t;return p=p===y.skipOptionalPartCharacter&&!0===d.static?a.getPlaceholder.call(g,t,d,!0)||d.def:p,!0!==(s=P(s))&&void 0!==s.pos&&s.pos!==t&&(h=s.pos),!0!==s&&void 0===s.pos&&void 0===s.c?!1:(!1===v.call(g,e,k.extend({},c,{input:l.call(g,p,d,h)}),n,h)&&(s=!1),!1)}return!0})),s}void 0!==e.begin&&(x=g.isRTL?e.end:e.begin);var S=!0,_=k.extend(!0,{},b.validPositions);if(!1===y.keepStatic&&void 0!==b.excludes[x]&&!0!==o&&!0!==n)for(var M=x;M<(g.isRTL?e.begin:e.end);M++)void 0!==b.excludes[M]&&(b.excludes[M]=void 0,delete b.tests[M]);if("function"==typeof y.preValidation&&!0!==n&&!0!==d&&(S=P(S=y.preValidation.call(g,r.getBuffer.call(g),x,t,u.call(g,e),y,b,e,i||o))),!0===S){if(S=w(x,t,i),(!i||!0===n)&&!1===S&&!0!==d){var O=b.validPositions[x];if(!O||!0!==O.match.static||O.match.def!==t&&t!==y.skipOptionalPartCharacter){if(y.insertMode||void 0===b.validPositions[r.seekNext.call(g,x)]||e.end>x){var E=!1;if(b.jitOffset[x]&&void 0===b.validPositions[r.seekNext.call(g,x)]&&!1!==(S=f.call(g,x+b.jitOffset[x],t,!0,!0))&&(!0!==o&&(S.caret=x),E=!0),e.end>x&&(b.validPositions[x]=void 0),!E&&!r.isMask.call(g,x,y.keepStatic&&0===x))for(var T=x+1,j=r.seekNext.call(g,x,!1,0!==x);T<=j;T++)if(!1!==(S=w(T,t,i))){S=h.call(g,x,void 0!==S.pos?S.pos:T)||S,x=T;break}}}else S={caret:r.seekNext.call(g,x)}}!1!==S||!y.keepStatic||!c.call(g,r.getBuffer.call(g))&&0!==x||i||!0===o?u.call(g,e)&&b.tests[x]&&b.tests[x].length>1&&y.keepStatic&&!i&&!0!==o&&(S=s.call(g,!0)):S=s.call(g,x,t,i,n,void 0,e),!0===S&&(S={pos:x})}if("function"==typeof y.postValidation&&!0!==n&&!0!==d){var D=y.postValidation.call(g,r.getBuffer.call(g,!0),void 0!==e.begin?g.isRTL?e.end:e.begin:e,t,S,y,b,i,m);void 0!==D&&(S=!0===D?S:D)}S&&void 0===S.pos&&(S.pos=x),!1===S||!0===d?(r.resetMaskSet.call(g,!0),b.validPositions=k.extend(!0,[],_)):h.call(g,void 0,x,!0);var A=P(S);void 0!==g.maxLength&&(r.getBuffer.call(g).length>g.maxLength&&!n&&(r.resetMaskSet.call(g,!0),b.validPositions=k.extend(!0,[],_),A=!1));return A}function d(e,t,i){for(var n=this.maskset,r=!1,o=a.getTests.call(this,e),s=0;s<o.length;s++){if(o[s].match&&(o[s].match.nativeDef===t.match[i.shiftPositions?"def":"nativeDef"]&&(!i.shiftPositions||!t.match.static)||o[s].match.nativeDef===t.match.nativeDef||i.regex&&!o[s].match.static&&o[s].match.fn.test(t.input,n,e,!1,i))){r=!0;break}if(o[s].match&&o[s].match.def===t.match.nativeDef){r=void 0;break}}return!1===r&&void 0!==n.jitOffset[e]&&(r=d.call(this,e+n.jitOffset[e],t,i)),r}function p(e,t,i){var a,n,s=this,l=this.maskset,c=this.opts,u=this.dependencyLib,f=c.skipOptionalPartCharacter,d=s.isRTL?i.slice().reverse():i;if(c.skipOptionalPartCharacter="",!0===e)r.resetMaskSet.call(s),l.tests={},e=0,t=i.length,n=r.determineNewCaretPosition.call(s,{begin:0,end:0},!1).begin;else{for(a=e;a<t;a++)delete l.validPositions[a];n=e}var p=new u.Event("keypress");for(a=e;a<t;a++){p.key=d[a].toString(),s.ignorable=!1;var h=o.EventHandlers.keypressEvent.call(s,p,!0,!1,!1,n);!1!==h&&void 0!==h&&(n=h.forwardPosition)}c.skipOptionalPartCharacter=f}function h(e,t,i){var n=this,o=this.maskset,s=this.dependencyLib;if(void 0===e)for(e=t-1;e>0&&!o.validPositions[e];e--);for(var l=e;l<t;l++){if(void 0===o.validPositions[l]&&!r.isMask.call(n,l,!1))if(0==l?a.getTest.call(n,l):o.validPositions[l-1]){var c=a.getTests.call(n,l).slice();""===c[c.length-1].match.def&&c.pop();var u,d=a.determineTestTemplate.call(n,l,c);if(d&&(!0!==d.match.jit||"master"===d.match.newBlockMarker&&(u=o.validPositions[l+1])&&!0===u.match.optionalQuantifier)&&((d=s.extend({},d,{input:a.getPlaceholder.call(n,l,d.match,!0)||d.match.def})).generatedInput=!0,v.call(n,l,d,!0),!0!==i)){var p=o.validPositions[t].input;return o.validPositions[t]=void 0,f.call(n,t,p,!0,!0)}}}}function v(e,t,i,n){var o=this,s=this.maskset,l=this.opts,c=this.dependencyLib;function u(e,t,i){var a=t[e];if(void 0!==a&&!0===a.match.static&&!0!==a.match.optionality&&(void 0===t[0]||void 0===t[0].alternation)){var n=i.begin<=e-1?t[e-1]&&!0===t[e-1].match.static&&t[e-1]:t[e-1],r=i.end>e+1?t[e+1]&&!0===t[e+1].match.static&&t[e+1]:t[e+1];return n&&r}return!1}var p=0,h=void 0!==e.begin?e.begin:e,v=void 0!==e.end?e.end:e,m=!0;if(e.begin>e.end&&(h=e.end,v=e.begin),n=void 0!==n?n:h,void 0===i&&(h!==v||l.insertMode&&void 0!==s.validPositions[n]||void 0===t||t.match.optionalQuantifier||t.match.optionality)){var g,k=c.extend(!0,{},s.validPositions),y=r.getLastValidPosition.call(o,void 0,!0);for(s.p=h,g=y;g>=h;g--)delete s.validPositions[g],void 0===t&&delete s.tests[g+1];var b,x,P=n,w=P;for(t&&(s.validPositions[n]=c.extend(!0,{},t),w++,P++),g=t?v:v-1;g<=y;g++){if(void 0!==(b=k[g])&&!0!==b.generatedInput&&(g>=v||g>=h&&u(g,k,{begin:h,end:v}))){for(;""!==a.getTest.call(o,w).match.def;){if(!1!==(x=d.call(o,w,b,l))||"+"===b.match.def){"+"===b.match.def&&r.getBuffer.call(o,!0);var S=f.call(o,w,b.input,"+"!==b.match.def,!0);if(m=!1!==S,P=(S.pos||w)+1,!m&&x)break}else m=!1;if(m){void 0===t&&b.match.static&&g===e.begin&&p++;break}if(!m&&r.getBuffer.call(o),w>s.maskLength)break;w++}""==a.getTest.call(o,w).match.def&&(m=!1),w=P}if(!m)break}if(!m)return s.validPositions=c.extend(!0,[],k),r.resetMaskSet.call(o,!0),!1}else t&&a.getTest.call(o,n).match.cd===t.match.cd&&(s.validPositions[n]=c.extend(!0,{},t));return r.resetMaskSet.call(o,!0),p}}},t={};function i(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,i),r.exports}var a={};return function(){var e,t=a;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,i(7149),i(3194),i(9302),i(4013),i(3851),i(219),i(207),i(5296);var n=((e=i(2394))&&e.__esModule?e:{default:e}).default;t.default=n}(),a}()}));
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

(function () {
    var typesToPatch = ['DocumentType', 'Element', 'CharacterData'],
        remove = function remove() {
        // The check here seems pointless, since we're not adding this
        // method to the prototypes of any any elements that CAN be the
        // root of the DOM. However, it's required by spec (see point 1 of
        // https://dom.spec.whatwg.org/#dom-childnode-remove) and would
        // theoretically make a difference if somebody .apply()ed this
        // method to the DOM's root node, so let's roll with it.
        if (this.parentNode != null) {
            this.parentNode.removeChild(this);
        }
    };

    for (var i = 0; i < typesToPatch.length; i++) {
        var type = typesToPatch[i];
        if (window[type] && !window[type].prototype.remove) {
            window[type].prototype.remove = remove;
        }
    }
})();
(function (root) {

    // Store setTimeout reference so promise-polyfill will be unaffected by
    // other code modifying setTimeout (like sinon.useFakeTimers())
    var setTimeoutFunc = setTimeout;

    function noop() {}

    // Polyfill for Function.prototype.bind
    function bind(fn, thisArg) {
        return function () {
            fn.apply(thisArg, arguments);
        };
    }

    function Promise(fn) {
        if (_typeof(this) !== 'object') throw new TypeError('Promises must be constructed via new');
        if (typeof fn !== 'function') throw new TypeError('not a function');
        this._state = 0;
        this._handled = false;
        this._value = undefined;
        this._deferreds = [];

        doResolve(fn, this);
    }

    function handle(self, deferred) {
        while (self._state === 3) {
            self = self._value;
        }
        if (self._state === 0) {
            self._deferreds.push(deferred);
            return;
        }
        self._handled = true;
        Promise._immediateFn(function () {
            var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
            if (cb === null) {
                (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
                return;
            }
            var ret;
            try {
                ret = cb(self._value);
            } catch (e) {
                reject(deferred.promise, e);
                return;
            }
            resolve(deferred.promise, ret);
        });
    }

    function resolve(self, newValue) {
        try {
            // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
            if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
            if (newValue && ((typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) === 'object' || typeof newValue === 'function')) {
                var then = newValue.then;
                if (newValue instanceof Promise) {
                    self._state = 3;
                    self._value = newValue;
                    finale(self);
                    return;
                } else if (typeof then === 'function') {
                    doResolve(bind(then, newValue), self);
                    return;
                }
            }
            self._state = 1;
            self._value = newValue;
            finale(self);
        } catch (e) {
            reject(self, e);
        }
    }

    function reject(self, newValue) {
        self._state = 2;
        self._value = newValue;
        finale(self);
    }

    function finale(self) {
        if (self._state === 2 && self._deferreds.length === 0) {
            Promise._immediateFn(function () {
                if (!self._handled) {
                    Promise._unhandledRejectionFn(self._value);
                }
            });
        }

        for (var i = 0, len = self._deferreds.length; i < len; i++) {
            handle(self, self._deferreds[i]);
        }
        self._deferreds = null;
    }

    function Handler(onFulfilled, onRejected, promise) {
        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
        this.onRejected = typeof onRejected === 'function' ? onRejected : null;
        this.promise = promise;
    }

    /**
     * Take a potentially misbehaving resolver function and make sure
     * onFulfilled and onRejected are only called once.
     *
     * Makes no guarantees about asynchrony.
     */
    function doResolve(fn, self) {
        var done = false;
        try {
            fn(function (value) {
                if (done) return;
                done = true;
                resolve(self, value);
            }, function (reason) {
                if (done) return;
                done = true;
                reject(self, reason);
            });
        } catch (ex) {
            if (done) return;
            done = true;
            reject(self, ex);
        }
    }

    Promise.prototype['catch'] = function (onRejected) {
        return this.then(null, onRejected);
    };

    Promise.prototype.then = function (onFulfilled, onRejected) {
        var prom = new this.constructor(noop);

        handle(this, new Handler(onFulfilled, onRejected, prom));
        return prom;
    };

    Promise.all = function (arr) {
        var args = Array.prototype.slice.call(arr);

        return new Promise(function (resolve, reject) {
            if (args.length === 0) return resolve([]);
            var remaining = args.length;

            function res(i, val) {
                try {
                    if (val && ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' || typeof val === 'function')) {
                        var then = val.then;
                        if (typeof then === 'function') {
                            then.call(val, function (val) {
                                res(i, val);
                            }, reject);
                            return;
                        }
                    }
                    args[i] = val;
                    if (--remaining === 0) {
                        resolve(args);
                    }
                } catch (ex) {
                    reject(ex);
                }
            }

            for (var i = 0; i < args.length; i++) {
                res(i, args[i]);
            }
        });
    };

    Promise.resolve = function (value) {
        if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.constructor === Promise) {
            return value;
        }

        return new Promise(function (resolve) {
            resolve(value);
        });
    };

    Promise.reject = function (value) {
        return new Promise(function (resolve, reject) {
            reject(value);
        });
    };

    Promise.race = function (values) {
        return new Promise(function (resolve, reject) {
            for (var i = 0, len = values.length; i < len; i++) {
                values[i].then(resolve, reject);
            }
        });
    };

    // Use polyfill for setImmediate for performance gains
    Promise._immediateFn = typeof setImmediate === 'function' && function (fn) {
        setImmediate(fn);
    } || function (fn) {
        setTimeoutFunc(fn, 0);
    };

    Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
        if (typeof console !== 'undefined' && console) {
            console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
        }
    };

    /**
     * Set the immediate function to execute callbacks
     * @param fn {function} Function to execute
     * @deprecated
     */
    Promise._setImmediateFn = function _setImmediateFn(fn) {
        Promise._immediateFn = fn;
    };

    /**
     * Change the function to execute on unhandled rejection
     * @param {function} fn Function to execute on unhandled rejection
     * @deprecated
     */
    Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
        Promise._unhandledRejectionFn = fn;
    };

    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Promise;
    } else if (!root.Promise) {
        root.Promise = Promise;
    }
})(window);

/* global Promise */
(function (window) {
    'use strict';

    if (!window.Promise) {
        window.Promise = Promise;
    }

    var RULE_REQUIRED = 'required',
        RULE_EMAIL = 'email',
        RULE_MINLENGTH = 'minLength',
        RULE_MAXLENGTH = 'maxLength',
        RULE_PASSWORD = 'password',
        RULE_ZIP = 'zip',
        RULE_PHONE = 'phone',
        RULE_REMOTE = 'remote',
        RULE_STRENGTH = 'strength',
        RULE_FUNCTION = 'function';

    var formatParams = function formatParams(params, method) {
        if (typeof params === 'string') {
            return params;
        }

        var letter = method.toLowerCase() === 'post' ? '' : '?';
        if (Array.isArray(params)) {
            return letter + params.map(function (obj) {
                return obj.name + '=' + obj.value;
            }).join('&');
        }
        return letter + Object.keys(params).map(function (key) {
            return key + '=' + params[key];
        }).join('&');
    };

    var ajax = function ajax(options) {
        var url = options.url,
            method = options.method,
            data = options.data,
            debug = options.debug,
            callback = options.callback,
            error = options.error;

        if (debug) {
            callback('test');
            return;
        }

        var async = options.async === false ? false : true;
        var xhr = new XMLHttpRequest();
        var params = formatParams(data, 'get');
        var body = null;

        if (method.toLowerCase() === 'post') {
            body = formatParams(data, 'post');
            params = '';
        }

        xhr.open(method, url + params, async);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.onreadystatechange = function () {
            if (this.readyState === 4) {
                if (this.status === 200) {
                    callback(this.responseText);
                } else {
                    error && error(this.responseText);
                }
            }
        };
        xhr.send(body);
    };

    var JustValidate = function JustValidate(selector, options) {
        this.options = options || {};
        this.rules = this.options.rules || {};
        this.messages = this.options.messages || undefined;
        this.colorWrong = this.options.colorWrong || '#B81111';
        this.result = {};
        this.elements = [];
        this.tooltip = this.options.tooltip || {};
        this.tooltipFadeOutTime = this.tooltip.fadeOutTime || 5000;
        this.tooltipFadeOutClass = this.tooltip.fadeOutClass || 'just-validate-tooltip-hide';
        this.tooltipSelectorWrap = document.querySelectorAll(this.tooltip.selectorWrap).length ? document.querySelectorAll(this.tooltip.selectorWrap) : document.querySelectorAll('.just-validate-tooltip-container');
        this.bindHandlerKeyup = this.handlerKeyup.bind(this);
        this.submitHandler = this.options.submitHandler || undefined;
        this.invalidFormCallback = this.options.invalidFormCallback || undefined;
        this.promisesRemote = [];
        this.isValidationSuccess = false;
        this.focusWrongField = this.options.focusWrongField || false;
        this.REGEXP = {
            // eslint-disable-next-line max-len
            email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
            zip: /^\d{5}(-\d{4})?$/,
            phone: /^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/,
            password: /[^\w\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/,
            strengthPass: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]/
        };
        this.DEFAULT_REMOTE_ERROR = 'Error';
        this.state = {
            tooltipsTimer: null
        };

        this.setForm(document.querySelector(selector));
    };

    JustValidate.prototype = {
        defaultRules: {
            email: {
                required: true,
                email: true
            },
            name: {
                required: true,
                minLength: 3,
                maxLength: 15
            },
            text: {
                required: true,
                maxLength: 300,
                minLength: 5
            },
            password: {
                required: true,
                password: true,
                minLength: 4,
                maxLength: 8
            },
            zip: {
                required: true,
                zip: true
            },
            phone: {
                phone: true
            }
        },

        defaultMessages: {
            required: 'The field is required',
            email: 'Please, type a valid email',
            maxLength: 'The field must contain a maximum of :value characters',
            minLength: 'The field must contain a minimum of :value characters',
            password: 'Password is not valid',
            remote: 'Email already exists',
            strength: 'Password must contents at least one uppercase letter, one lowercase letter and one number',
            function: 'Function returned false'
        },

        /**
         * Keyup handler
         * @param ev
         */
        handlerKeyup: function handlerKeyup(ev) {
            var elem = ev.target,
                item = {
                name: elem.getAttribute('data-validate-field'),
                value: elem.value
            };
            delete this.result[item.name];
            this.validateItem({
                name: item.name,
                value: item.value,
                group: [],
                isKeyupChange: true
            });
            this.renderErrors();
        },

        setterEventListener: function setterEventListener(item, event, handler, type) {
            if (event === 'keyup') {
                handler = this.bindHandlerKeyup;
            }
            switch (type) {
                case 'add':
                    {
                        item.addEventListener(event, handler);
                        break;
                    }
                case 'remove':
                    {
                        item.removeEventListener(event, handler);
                        break;
                    }
            }
        },

        getElementsRealValue: function getElementsRealValue() {
            var $elems = this.$form.querySelectorAll('*'),
                name = void 0,
                result = {};
            for (var i = 0, len = $elems.length; i < len; ++i) {
                name = $elems[i].getAttribute('name');
                if (name) {
                    if ($elems[i].type === 'checkbox') {
                        result[name] = $elems[i].checked;
                        continue;
                    }
                    result[name] = $elems[i].value;
                }
            }
            return result;
        },

        validationFailed: function validationFailed() {
            if (this.invalidFormCallback) {
                this.invalidFormCallback(this.result);
            }

            var $firstErrorField = document.querySelector('.js-validate-error-field');

            if (this.focusWrongField && $firstErrorField && $firstErrorField.focus) {
                $firstErrorField.focus();
            }
        },

        validationSuccess: function validationSuccess() {
            if (Object.keys(this.result).length === 0) {
                this.isValidationSuccess = false;
                if (this.submitHandler) {
                    var realValues = this.getElementsRealValue();
                    this.submitHandler(this.$form, realValues, ajax);
                    return;
                }

                this.$form.submit();
            }
        },

        setForm: function setForm(form) {
            var _this = this;

            this.$form = form;
            this.$form.setAttribute('novalidate', 'novalidate');
            this.$form.addEventListener('submit', function (ev) {
                ev.preventDefault();
                _this.result = [];
                _this.getElements();

                if (!_this.promisesRemote.length) {
                    if (_this.isValidationSuccess) {
                        _this.validationSuccess();
                    } else {
                        _this.validationFailed();
                    }
                    return;
                }

                Promise.all(_this.promisesRemote).then(function () {
                    _this.promisesRemote = [];

                    if (_this.isValidationSuccess) {
                        _this.validationSuccess();
                    } else {
                        _this.validationFailed();
                    }
                });
            });
        },

        isEmail: function isEmail(email) {
            return this.REGEXP.email.test(email);
        },

        isZip: function isZip(zip) {
            return this.REGEXP.zip.test(zip);
        },

        isPhone: function isPhone(phone) {
            return this.REGEXP.phone.test(phone);
        },

        isPassword: function isPassword(password) {
            return this.REGEXP.password.test(password);
        },

        isEmpty: function isEmpty(val) {
            var newVal = val;
            if (val.trim) {
                newVal = val.trim();
            }

            return !newVal;
        },

        checkLengthMax: function checkLengthMax(text, max) {
            return text.length <= max;
        },

        checkLengthMin: function checkLengthMin(text, min) {
            return text.length >= min;
        },

        checkStrengthPass: function checkStrengthPass(password) {
            return this.REGEXP.strengthPass.test(password);
        },

        getElements: function getElements() {
            var _this2 = this;

            var elems = this.$form.querySelectorAll('[data-validate-field]');
            this.elements = [];

            var _loop = function _loop(i, len) {
                var item = elems[i],
                    name = item.getAttribute('data-validate-field'),
                    value = item.value,
                    isElemInGroup = false,
                    group = [];

                if (item.type === 'checkbox') {
                    value = item.checked || '';
                    item.addEventListener('change', function (ev) {
                        var elem = ev.target,
                            item = {
                            name: elem.getAttribute('data-validate-field'),
                            value: elem.checked
                        };

                        delete _this2.result[item.name];
                        _this2.validateItem({
                            name: item.name,
                            value: item.value,
                            group: []
                        });
                        _this2.renderErrors();
                    });
                }

                if (item.type === 'radio') {
                    var findElem = _this2.elements.filter(function (item) {
                        if (item.name === name) {
                            return item;
                        }
                    })[0];

                    if (findElem) {
                        findElem.group.push(item.checked);
                        isElemInGroup = true;
                    } else {
                        group.push(item.checked);
                    }

                    item.addEventListener('change', function (ev) {
                        var elem = ev.target,
                            item = {
                            name: elem.getAttribute('data-validate-field'),
                            value: elem.checked
                        };

                        delete _this2.result[item.name];
                        _this2.validateItem({
                            name: item.name,
                            value: item.value,
                            group: []
                        });
                        _this2.renderErrors();
                    });
                }

                _this2.setterEventListener(item, 'keyup', _this2.handlerKeyup, 'add');

                if (!isElemInGroup) {
                    _this2.elements.push({
                        name: name,
                        value: value,
                        group: group
                    });
                }
            };

            for (var i = 0, len = elems.length; i < len; ++i) {
                _loop(i, len);
            }

            this.validateElements();
        },

        /**
         * Validate Required field
         * @param {string} value Value for validate
         * @returns {boolean} True if validate is OK
         */
        validateRequired: function validateRequired(value) {
            return !this.isEmpty(value);
        },

        /**
         * Validate Email field
         * @param {string} value Value for validate
         * @returns {boolean} True if validate is OK
         */
        validateEmail: function validateEmail(value) {
            return this.isEmail(value);
        },

        /**
         * Validate Phone field
         * @param {string} value Value for validate
         * @returns {boolean} True if validate is OK
         */
        validatePhone: function validatePhone(value) {
            return this.isPhone(value);
        },

        /**
         * Validate field for Min Length
         * @param {string} value Value for validate
         * @param {integer} min
         * @returns {boolean} True if validate is OK
         */
        validateMinLength: function validateMinLength(value, min) {
            return this.checkLengthMin(value, min);
        },

        /**
         * Validate field for Max Length
         * @param {string} value Value for validate
         * @param {integer} max
         * @returns {boolean} True if validate is OK
         */
        validateMaxLength: function validateMaxLength(value, max) {
            return this.checkLengthMax(value, max);
        },

        /**
         * Validate field for strength password
         * @param {string} password Value for validate
         * @returns {boolean} True if validate is OK
         */
        validateStrengthPass: function validateStrengthPass(password) {
            return this.checkStrengthPass(password);
        },

        /**
         * Validate Password field
         * @param {string} value Value for validate
         * @returns {boolean} True if validate is OK
         */
        validatePassword: function validatePassword(value) {
            return this.isPassword(value);
        },

        /**
         * Validate ZIP field
         * @param {string} value Value for validate
         * @returns {boolean} True if validate is OK
         */
        validateZip: function validateZip(value) {
            return this.isZip(value);
        },

        /**
         * Validate for remote check
         * @param value
         * @param name
         * @param {string} url
         * @param {string} successAnswer
         * @returns {boolean} True if validate is OK
         */
        validateRemote: function validateRemote(_ref) {
            var value = _ref.value,
                name = _ref.name,
                url = _ref.url,
                successAnswer = _ref.successAnswer,
                sendParam = _ref.sendParam,
                method = _ref.method;

            return new Promise(function (resolve) {
                ajax({
                    url: url,
                    method: method,
                    data: _defineProperty({}, sendParam, value),
                    async: true,
                    callback: function callback(data) {
                        if (data.toLowerCase() === successAnswer.toLowerCase()) {
                            resolve('ok');
                        }
                        resolve({
                            type: 'incorrect',
                            name: name
                        });
                    },
                    error: function error() {
                        resolve({
                            type: 'error',
                            name: name
                        });
                    }
                });
            });
        },

        generateMessage: function generateMessage(rule, name, value) {
            var messages = this.messages || this.defaultMessages;
            var customMessage = messages[name] && messages[name][rule] || this.messages && typeof this.messages[name] === 'string' && messages[name] ||
            // (messages[name][rule]) ||
            this.defaultMessages[rule] || this.DEFAULT_REMOTE_ERROR;

            if (value) {
                customMessage = customMessage.replace(':value', value.toString());
            }
            this.result[name] = {
                message: customMessage
            };
        },

        validateElements: function validateElements() {
            var _this3 = this;

            this.lockForm();
            this.elements.forEach(function (item) {
                _this3.validateItem({
                    name: item.name,
                    value: item.value,
                    group: item.group
                });
            });

            if (!this.promisesRemote.length) {
                this.renderErrors();
                return;
            }

            Promise.all(this.promisesRemote).then(function (resp) {
                resp.forEach(function (result) {
                    if (result === 'ok') {
                        _this3.renderErrors();
                        return;
                    }
                    if (result.type === 'error') {
                        alert('Server error occured. Please try later.');
                    }
                    _this3.generateMessage(RULE_REMOTE, result.name);
                    _this3.renderErrors();
                });
            });
        },

        validateItem: function validateItem(_ref2) {
            var _this4 = this;

            var name = _ref2.name,
                group = _ref2.group,
                value = _ref2.value,
                isKeyupChange = _ref2.isKeyupChange;

            var rules = this.rules[name] || this.defaultRules[name] || false;

            if (!rules) {
                return;
            }
            for (var rule in rules) {
                var ruleValue = rules[rule];

                if (rule !== RULE_REQUIRED && rule !== RULE_FUNCTION && value == '') {
                    return;
                }
                switch (rule) {
                    case RULE_FUNCTION:
                        {
                            if (typeof ruleValue !== 'function') {
                                break;
                            }
                            if (ruleValue(name, value)) {
                                break;
                            }
                            this.generateMessage(RULE_FUNCTION, name, ruleValue);
                            return;
                        }
                    case RULE_REQUIRED:
                        {
                            if (!ruleValue) {
                                break;
                            }

                            if (group.length) {
                                var isSuccessValidateGroup = false;

                                // At least one item in group
                                group.forEach(function (item) {
                                    if (_this4.validateRequired(item)) {
                                        isSuccessValidateGroup = true;
                                    }
                                });

                                if (isSuccessValidateGroup) {
                                    break;
                                }
                            } else {
                                if (this.validateRequired(value)) {
                                    break;
                                }
                            }

                            this.generateMessage(RULE_REQUIRED, name);
                            return;
                        }

                    case RULE_EMAIL:
                        {
                            if (!ruleValue) {
                                break;
                            }
                            if (this.validateEmail(value)) {
                                break;
                            }
                            this.generateMessage(RULE_EMAIL, name);
                            return;
                        }

                    case RULE_MINLENGTH:
                        {
                            if (!ruleValue) {
                                break;
                            }
                            if (this.validateMinLength(value, ruleValue)) {
                                break;
                            }
                            this.generateMessage(RULE_MINLENGTH, name, ruleValue);
                            return;
                        }

                    case RULE_MAXLENGTH:
                        {
                            if (!ruleValue) {
                                break;
                            }
                            if (this.validateMaxLength(value, ruleValue)) {
                                break;
                            }
                            this.generateMessage(RULE_MAXLENGTH, name, ruleValue);
                            return;
                        }

                    case RULE_PHONE:
                        {
                            if (!ruleValue) {
                                break;
                            }
                            if (this.validatePhone(value)) {
                                break;
                            }
                            this.generateMessage(RULE_PHONE, name);
                            return;
                        }

                    case RULE_PASSWORD:
                        {
                            if (!ruleValue) {
                                break;
                            }
                            if (this.validatePassword(value)) {
                                break;
                            }
                            this.generateMessage(RULE_PASSWORD, name);
                            return;
                        }

                    case RULE_STRENGTH:
                        {
                            if (!ruleValue || (typeof ruleValue === 'undefined' ? 'undefined' : _typeof(ruleValue)) !== 'object') {
                                break;
                            }

                            if (ruleValue.default && this.validateStrengthPass(value)) {
                                break;
                            }

                            if (ruleValue.custom) {
                                var regexp = void 0;

                                try {
                                    regexp = new RegExp(ruleValue.custom);
                                } catch (e) {
                                    regexp = this.REGEXP.strengthPass;

                                    // eslint-disable-next-line no-console
                                    console.error('Custom regexp for strength rule is not valid. Default regexp was used.');
                                }

                                if (regexp.test(value)) {
                                    break;
                                }
                            }
                            this.generateMessage(RULE_STRENGTH, name);
                            return;
                        }

                    case RULE_ZIP:
                        {
                            if (!ruleValue) {
                                break;
                            }
                            if (this.validateZip(value)) {
                                break;
                            }
                            this.generateMessage(RULE_ZIP, name);
                            return;
                        }

                    case RULE_REMOTE:
                        {
                            if (isKeyupChange) {
                                break;
                            }

                            if (!ruleValue) {
                                break;
                            }

                            var url = ruleValue.url,
                                successAnswer = ruleValue.successAnswer,
                                method = ruleValue.method,
                                sendParam = ruleValue.sendParam;

                            var $elem = this.$form.querySelector('input[data-validate-field="' + name + '"]');
                            this.setterEventListener($elem, 'keyup', this.handlerKeyup, 'remove');

                            this.promisesRemote.push(this.validateRemote({
                                name: name,
                                value: value,
                                url: url,
                                method: method,
                                sendParam: sendParam,
                                successAnswer: successAnswer
                            }));
                            return;
                        }
                }
            }
        },

        clearErrors: function clearErrors() {
            var $elems = document.querySelectorAll('.js-validate-error-label');
            for (var i = 0, len = $elems.length; i < len; ++i) {
                $elems[i].remove();
            }

            $elems = document.querySelectorAll('.js-validate-error-field');
            for (var _i = 0, _len = $elems.length; _i < _len; ++_i) {
                $elems[_i].classList.remove('js-validate-error-field');
                $elems[_i].style.border = '';
                $elems[_i].style.color = '';
            }
        },

        renderErrors: function renderErrors() {
            var _this5 = this;

            this.clearErrors();
            this.unlockForm();

            this.isValidationSuccess = false;
            if (Object.keys(this.result).length === 0) {
                this.isValidationSuccess = true;
                return;
            }

            for (var _item in this.result) {
                var message = this.result[_item].message;
                var $elems = this.$form.querySelectorAll('[data-validate-field="' + _item + '"]');

                var $elem = $elems[$elems.length - 1];

                var div = document.createElement('div');

                div.innerHTML = message;
                div.className = 'js-validate-error-label';
                div.setAttribute('style', 'color: ' + this.colorWrong);
                $elem.style.border = '1px solid ' + this.colorWrong;
                $elem.style.color = '' + this.colorWrong;
                $elem.classList.add('js-validate-error-field');

                if ($elem.type === 'checkbox' || $elem.type === 'radio') {
                    var $label = document.querySelector('label[for="' + $elem.getAttribute('id') + '"]');

                    if ($elem.parentNode.tagName.toLowerCase() === 'label') {
                        $elem.parentNode.parentNode.insertBefore(div, null);
                    } else if ($label) {
                        $label.parentNode.insertBefore(div, $label.nextSibling);
                    } else {
                        $elem.parentNode.insertBefore(div, $elem.nextSibling);
                    }
                } else {
                    $elem.parentNode.insertBefore(div, $elem.nextSibling);
                }
            }

            if (!this.tooltipSelectorWrap.length) {
                return;
            }

            this.state.tooltipsTimer = setTimeout(function () {
                _this5.hideTooltips();
            }, this.tooltipFadeOutTime);
        },

        hideTooltips: function hideTooltips() {
            var _this6 = this;

            var $elemsErrorLabel = document.querySelectorAll('.js-validate-error-label');

            $elemsErrorLabel.forEach(function (item) {
                item.classList.add(_this6.tooltipFadeOutClass);
            });

            this.state.tooltipsTimer = null;
        },

        lockForm: function lockForm() {
            var $elems = this.$form.querySelectorAll('input, textarea, button, select');
            for (var i = 0, len = $elems.length; i < len; ++i) {
                $elems[i].setAttribute('disabled', 'disabled');
                $elems[i].style.pointerEvents = 'none';
                $elems[i].style.webitFilter = 'grayscale(100%)';
                $elems[i].style.filter = 'grayscale(100%)';
            }
        },

        unlockForm: function unlockForm() {
            var $elems = this.$form.querySelectorAll('input, textarea, button, select');
            for (var i = 0, len = $elems.length; i < len; ++i) {
                $elems[i].removeAttribute('disabled');
                $elems[i].style.pointerEvents = '';
                $elems[i].style.webitFilter = '';
                $elems[i].style.filter = '';
            }
        }
    };

    window.JustValidate = JustValidate;
})(window);
"use strict";function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(){for(var e=["DocumentType","Element","CharacterData"],t=function(){null!=this.parentNode&&this.parentNode.removeChild(this)},i=0;i<e.length;i++){var r=e[i];window[r]&&!window[r].prototype.remove&&(window[r].prototype.remove=t)}}(),function(e){function t(){}function i(e,t){return function(){e.apply(t,arguments)}}function r(e){if("object"!==_typeof(this))throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],u(e,this)}function n(e,t){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(t):(e._handled=!0,void r._immediateFn(function(){var i=1===e._state?t.onFulfilled:t.onRejected;if(null===i)return void(1===e._state?o:s)(t.promise,e._value);var r;try{r=i(e._value)}catch(n){return void s(t.promise,n)}o(t.promise,r)}))}function o(e,t){try{if(t===e)throw new TypeError("A promise cannot be resolved with itself.");if(t&&("object"===("undefined"==typeof t?"undefined":_typeof(t))||"function"==typeof t)){var n=t.then;if(t instanceof r)return e._state=3,e._value=t,void a(e);if("function"==typeof n)return void u(i(n,t),e)}e._state=1,e._value=t,a(e)}catch(o){s(e,o)}}function s(e,t){e._state=2,e._value=t,a(e)}function a(e){2===e._state&&0===e._deferreds.length&&r._immediateFn(function(){e._handled||r._unhandledRejectionFn(e._value)});for(var t=0,i=e._deferreds.length;t<i;t++)n(e,e._deferreds[t]);e._deferreds=null}function l(e,t,i){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=i}function u(e,t){var i=!1;try{e(function(e){i||(i=!0,o(t,e))},function(e){i||(i=!0,s(t,e))})}catch(r){if(i)return;i=!0,s(t,r)}}var d=setTimeout;r.prototype["catch"]=function(e){return this.then(null,e)},r.prototype.then=function(e,i){var r=new this.constructor(t);return n(this,new l(e,i,r)),r},r.all=function(e){var t=Array.prototype.slice.call(e);return new r(function(e,i){function r(o,s){try{if(s&&("object"===("undefined"==typeof s?"undefined":_typeof(s))||"function"==typeof s)){var a=s.then;if("function"==typeof a)return void a.call(s,function(e){r(o,e)},i)}t[o]=s,0===--n&&e(t)}catch(l){i(l)}}if(0===t.length)return e([]);for(var n=t.length,o=0;o<t.length;o++)r(o,t[o])})},r.resolve=function(e){return e&&"object"===("undefined"==typeof e?"undefined":_typeof(e))&&e.constructor===r?e:new r(function(t){t(e)})},r.reject=function(e){return new r(function(t,i){i(e)})},r.race=function(e){return new r(function(t,i){for(var r=0,n=e.length;r<n;r++)e[r].then(t,i)})},r._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){d(e,0)},r._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},r._setImmediateFn=function(e){r._immediateFn=e},r._setUnhandledRejectionFn=function(e){r._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=r:e.Promise||(e.Promise=r)}(window),function(e){e.Promise||(e.Promise=Promise);var t="required",i="email",r="minLength",n="maxLength",o="password",s="zip",a="phone",l="remote",u="strength",d="function",c=function(e,t){if("string"==typeof e)return e;var i="post"===t.toLowerCase()?"":"?";return Array.isArray(e)?i+e.map(function(e){return e.name+"="+e.value}).join("&"):i+Object.keys(e).map(function(t){return t+"="+e[t]}).join("&")},h=function(e){var t=e.url,i=e.method,r=e.data,n=e.debug,o=e.callback,s=e.error;if(n)return void o("test");var a=e.async!==!1,l=new XMLHttpRequest,u=c(r,"get"),d=null;"post"===i.toLowerCase()&&(d=c(r,"post"),u=""),l.open(i,t+u,a),l.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),l.onreadystatechange=function(){4===this.readyState&&(200===this.status?o(this.responseText):s&&s(this.responseText))},l.send(d)},f=function(e,t){this.options=t||{},this.rules=this.options.rules||{},this.messages=this.options.messages||void 0,this.colorWrong=this.options.colorWrong||"#B81111",this.result={},this.elements=[],this.tooltip=this.options.tooltip||{},this.tooltipFadeOutTime=this.tooltip.fadeOutTime||5e3,this.tooltipFadeOutClass=this.tooltip.fadeOutClass||"just-validate-tooltip-hide",this.tooltipSelectorWrap=document.querySelectorAll(this.tooltip.selectorWrap).length?document.querySelectorAll(this.tooltip.selectorWrap):document.querySelectorAll(".just-validate-tooltip-container"),this.bindHandlerKeyup=this.handlerKeyup.bind(this),this.submitHandler=this.options.submitHandler||void 0,this.invalidFormCallback=this.options.invalidFormCallback||void 0,this.promisesRemote=[],this.isValidationSuccess=!1,this.focusWrongField=this.options.focusWrongField||!1,this.REGEXP={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,zip:/^\d{5}(-\d{4})?$/,phone:/^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/,password:/[^\w\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/,strengthPass:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]/},this.DEFAULT_REMOTE_ERROR="Error",this.state={tooltipsTimer:null},this.setForm(document.querySelector(e))};f.prototype={defaultRules:{email:{required:!0,email:!0},name:{required:!0,minLength:3,maxLength:15},text:{required:!0,maxLength:300,minLength:5},password:{required:!0,password:!0,minLength:4,maxLength:8},zip:{required:!0,zip:!0},phone:{phone:!0}},defaultMessages:{required:"The field is required",email:"Please, type a valid email",maxLength:"The field must contain a maximum of :value characters",minLength:"The field must contain a minimum of :value characters",password:"Password is not valid",remote:"Email already exists",strength:"Password must contents at least one uppercase letter, one lowercase letter and one number","function":"Function returned false"},handlerKeyup:function(e){var t=e.target,i={name:t.getAttribute("data-validate-field"),value:t.value};delete this.result[i.name],this.validateItem({name:i.name,value:i.value,group:[],isKeyupChange:!0}),this.renderErrors()},setterEventListener:function(e,t,i,r){switch("keyup"===t&&(i=this.bindHandlerKeyup),r){case"add":e.addEventListener(t,i);break;case"remove":e.removeEventListener(t,i)}},getElementsRealValue:function(){for(var e=this.$form.querySelectorAll("*"),t=void 0,i={},r=0,n=e.length;r<n;++r)if(t=e[r].getAttribute("name")){if("checkbox"===e[r].type){i[t]=e[r].checked;continue}i[t]=e[r].value}return i},validationFailed:function(){this.invalidFormCallback&&this.invalidFormCallback(this.result);var e=document.querySelector(".js-validate-error-field");this.focusWrongField&&e&&e.focus&&e.focus()},validationSuccess:function(){if(0===Object.keys(this.result).length){if(this.isValidationSuccess=!1,this.submitHandler){var e=this.getElementsRealValue();return void this.submitHandler(this.$form,e,h)}this.$form.submit()}},setForm:function(e){var t=this;this.$form=e,this.$form.setAttribute("novalidate","novalidate"),this.$form.addEventListener("submit",function(e){return e.preventDefault(),t.result=[],t.getElements(),t.promisesRemote.length?void Promise.all(t.promisesRemote).then(function(){t.promisesRemote=[],t.isValidationSuccess?t.validationSuccess():t.validationFailed()}):void(t.isValidationSuccess?t.validationSuccess():t.validationFailed())})},isEmail:function(e){return this.REGEXP.email.test(e)},isZip:function(e){return this.REGEXP.zip.test(e)},isPhone:function(e){return this.REGEXP.phone.test(e)},isPassword:function(e){return this.REGEXP.password.test(e)},isEmpty:function(e){var t=e;return e.trim&&(t=e.trim()),!t},checkLengthMax:function(e,t){return e.length<=t},checkLengthMin:function(e,t){return e.length>=t},checkStrengthPass:function(e){return this.REGEXP.strengthPass.test(e)},getElements:function(){var e=this,t=this.$form.querySelectorAll("[data-validate-field]");this.elements=[];for(var i=function(i,r){var n=t[i],o=n.getAttribute("data-validate-field"),s=n.value,a=!1,l=[];if("checkbox"===n.type&&(s=n.checked||"",n.addEventListener("change",function(t){var i=t.target,r={name:i.getAttribute("data-validate-field"),value:i.checked};delete e.result[r.name],e.validateItem({name:r.name,value:r.value,group:[]}),e.renderErrors()})),"radio"===n.type){var u=e.elements.filter(function(e){if(e.name===o)return e})[0];u?(u.group.push(n.checked),a=!0):l.push(n.checked),n.addEventListener("change",function(t){var i=t.target,r={name:i.getAttribute("data-validate-field"),value:i.checked};delete e.result[r.name],e.validateItem({name:r.name,value:r.value,group:[]}),e.renderErrors()})}e.setterEventListener(n,"keyup",e.handlerKeyup,"add"),a||e.elements.push({name:o,value:s,group:l})},r=0,n=t.length;r<n;++r)i(r,n);this.validateElements()},validateRequired:function(e){return!this.isEmpty(e)},validateEmail:function(e){return this.isEmail(e)},validatePhone:function(e){return this.isPhone(e)},validateMinLength:function(e,t){return this.checkLengthMin(e,t)},validateMaxLength:function(e,t){return this.checkLengthMax(e,t)},validateStrengthPass:function(e){return this.checkStrengthPass(e)},validatePassword:function(e){return this.isPassword(e)},validateZip:function(e){return this.isZip(e)},validateRemote:function(e){var t=e.value,i=e.name,r=e.url,n=e.successAnswer,o=e.sendParam,s=e.method;return new Promise(function(e){h({url:r,method:s,data:_defineProperty({},o,t),async:!0,callback:function(t){t.toLowerCase()===n.toLowerCase()&&e("ok"),e({type:"incorrect",name:i})},error:function(){e({type:"error",name:i})}})})},generateMessage:function(e,t,i){var r=this.messages||this.defaultMessages,n=r[t]&&r[t][e]||this.messages&&"string"==typeof this.messages[t]&&r[t]||this.defaultMessages[e]||this.DEFAULT_REMOTE_ERROR;i&&(n=n.replace(":value",i.toString())),this.result[t]={message:n}},validateElements:function(){var e=this;return this.lockForm(),this.elements.forEach(function(t){e.validateItem({name:t.name,value:t.value,group:t.group})}),this.promisesRemote.length?void Promise.all(this.promisesRemote).then(function(t){t.forEach(function(t){return"ok"===t?void e.renderErrors():("error"===t.type&&alert("Server error occured. Please try later."),e.generateMessage(l,t.name),void e.renderErrors())})}):void this.renderErrors()},validateItem:function(e){var c=this,h=e.name,f=e.group,m=e.value,v=e.isKeyupChange,p=this.rules[h]||this.defaultRules[h]||!1;if(p)for(var g in p){var y=p[g];if(g!==t&&g!==d&&""==m)return;switch(g){case d:if("function"!=typeof y)break;if(y(h,m))break;return void this.generateMessage(d,h,y);case t:if(!y)break;if(f.length){var b=!1;if(f.forEach(function(e){c.validateRequired(e)&&(b=!0)}),b)break}else if(this.validateRequired(m))break;return void this.generateMessage(t,h);case i:if(!y)break;if(this.validateEmail(m))break;return void this.generateMessage(i,h);case r:if(!y)break;if(this.validateMinLength(m,y))break;return void this.generateMessage(r,h,y);case n:if(!y)break;if(this.validateMaxLength(m,y))break;return void this.generateMessage(n,h,y);case a:if(!y)break;if(this.validatePhone(m))break;return void this.generateMessage(a,h);case o:if(!y)break;if(this.validatePassword(m))break;return void this.generateMessage(o,h);case u:if(!y||"object"!==("undefined"==typeof y?"undefined":_typeof(y)))break;if(y["default"]&&this.validateStrengthPass(m))break;if(y.custom){var E=void 0;try{E=new RegExp(y.custom)}catch(w){E=this.REGEXP.strengthPass,console.error("Custom regexp for strength rule is not valid. Default regexp was used.")}if(E.test(m))break}return void this.generateMessage(u,h);case s:if(!y)break;if(this.validateZip(m))break;return void this.generateMessage(s,h);case l:if(v)break;if(!y)break;var k=y.url,_=y.successAnswer,P=y.method,R=y.sendParam,S=this.$form.querySelector('input[data-validate-field="'+h+'"]');return this.setterEventListener(S,"keyup",this.handlerKeyup,"remove"),void this.promisesRemote.push(this.validateRemote({name:h,value:m,url:k,method:P,sendParam:R,successAnswer:_}))}}},clearErrors:function(){for(var e=document.querySelectorAll(".js-validate-error-label"),t=0,i=e.length;t<i;++t)e[t].remove();e=document.querySelectorAll(".js-validate-error-field");for(var r=0,n=e.length;r<n;++r)e[r].classList.remove("js-validate-error-field"),e[r].style.border="",e[r].style.color=""},renderErrors:function(){var e=this;if(this.clearErrors(),this.unlockForm(),this.isValidationSuccess=!1,0===Object.keys(this.result).length)return void(this.isValidationSuccess=!0);for(var t in this.result){var i=this.result[t].message,r=this.$form.querySelectorAll('[data-validate-field="'+t+'"]'),n=r[r.length-1],o=document.createElement("div");if(o.innerHTML=i,o.className="js-validate-error-label",o.setAttribute("style","color: "+this.colorWrong),n.style.border="1px solid "+this.colorWrong,n.style.color=""+this.colorWrong,n.classList.add("js-validate-error-field"),"checkbox"===n.type||"radio"===n.type){var s=document.querySelector('label[for="'+n.getAttribute("id")+'"]');"label"===n.parentNode.tagName.toLowerCase()?n.parentNode.parentNode.insertBefore(o,null):s?s.parentNode.insertBefore(o,s.nextSibling):n.parentNode.insertBefore(o,n.nextSibling)}else n.parentNode.insertBefore(o,n.nextSibling)}this.tooltipSelectorWrap.length&&(this.state.tooltipsTimer=setTimeout(function(){e.hideTooltips()},this.tooltipFadeOutTime))},hideTooltips:function(){var e=this,t=document.querySelectorAll(".js-validate-error-label");t.forEach(function(t){t.classList.add(e.tooltipFadeOutClass)}),this.state.tooltipsTimer=null},lockForm:function(){for(var e=this.$form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"},unlockForm:function(){for(var e=this.$form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webitFilter="",e[t].style.filter=""}},e.JustValidate=f}(window);
const selector = document.querySelector("input[type='tel']");
if (selector) {
  const im = new Inputmask("+7 (999)-999-99-99");
  im.mask(selector);
  new JustValidate(".form", {
    rules: {
      name: {
        required: true,
        minLength: 2,
        maxLength: 10,
      },
      tel: {
        required: true,
        function: (name, value) => {
          const phone = selector.inputmask.unmaskedvalue();
          return Number(phone) && phone.length === 10;
        },
      },
    },
    messages: {
      name: {
        required: "Вы не ввели имя",
        minLength: "Минимум 2 символа",
        maxLength: "Максимально 10 символов",
      },
      tel: {
        required: "Вы не ввели телефон",
        function: "Неверный номер",
      },
    },
  });
}

let checkClassSwiper = document.querySelector('.swiper');
if (checkClassSwiper) {
  document.addEventListener('DOMContentLoaded', function () {
    const swiper = new Swiper('.swiper', {

      observer: true,
      observeParents: true,

      lazy: {
        loadOnTransitionStart: false,
        loadPrevNext: false,
      },

      watchSlidesProgress: true,
      watchSlidesVisibility: true,
      
      navigation: {
        nextEl: '.button__next',
        prevEl: '.button__prev',
      },
      
      grabCursor: true,
      
      keyboard: {
        enabled: true,
        onlyViewport: true,
        pageUpDown: true,
      },
      
      mousewheel: {
        sensitivity: 1,
        eventsTarget: ".swiper-slide"
      },
      
      watchOverflow: false,
      
      preloadImages: false,
  
      lazy: {
        loadOnTransitionStart: false,
        loadPrevNext: false,
      },
      
      watchSlidesProgress: true,
      watchSlidesVisibility: true,
  
      loop: true,
      
      breakpoints: {
        320: {
          slidesPerView: 1,
          slidesPerGroup: 1,
          spaceBetween: 15,
        },
        540: {
          slidesPerView: 2,
          slidesPerGroup: 2,
          spaceBetween: 15,
        },
        860: {
          slidesPerView: 3,
          slidesPerGroup: 3,
          spaceBetween: 15,
        },
        1280: {
          slidesPerView: 4,
          slidesPerGroup: 4,
          spaceBetween: 15,
        },
        1450: {
          slidesPerView: 5,
          slidesPerGroup: 5,
          spaceBetween: 15,
        },
      },

      autoplay: {
        delay: 1000,
        disableOnInteraction: true,
      },

      speed: 800,
    });
  });
};


const answers_list = document.querySelectorAll(".item__block");
const background_active = "linear-gradient(180deg, #969AF7 0%, #686EEC 100%)";
const background = "linear-gradient(rgb(255, 255, 255) 50.57%, rgb(189, 192, 255) 100%)";
let flag = true;
answers_list.forEach(el => {
  el.addEventListener('click', function () {
    icon_close = el.childNodes[3].childNodes[1].childNodes[3].childNodes[3]
    icon_open = el.childNodes[3].childNodes[1].childNodes[3].childNodes[1]
    svg_circle = el.childNodes[3].childNodes[1].childNodes[1];
    item_descr = el.nextElementSibling;

    if (flag) {
      el.style.background = background_active;
      icon_close.style.display = "block";
      icon_open.style.display = "none";
      svg_circle.style.fill = "white";
      item_descr.style.display = "block"
    } else {
      el.style.background = background;
      icon_close.style.display = "none";
      icon_open.style.display = "block";
      svg_circle.style.fill = "#757AEF";
      item_descr.style.display = "none"
    }
    flag = !flag;
  })
})


const header_top = document.querySelector(".header__top");
if (header_top) {
  let debounceTimer;
  window.addEventListener('scroll', function () {
    if (debounceTimer) {
      clearTimeout(debounceTimer);
    }
    debounceTimer = setTimeout(() => {
      const scrollPosition = window.scrollY;
      if (scrollPosition > 0) {
        header_top.classList.add("header__top-scroll");
      } else {
        header_top.classList.remove("header__top-scroll");
      }
    }, 30);
  });
};











//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0bWFzay5taW4uanMiLCJqdXN0LXZhbGlkYXRlLmpzIiwianVzdC12YWxpZGF0ZS5taW4uanMiLCJzY3JpcHQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25rQ0E7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBkaXN0L2lucHV0bWFzay5taW5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Sb2JpbkhlcmJvdHMvSW5wdXRtYXNrXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAgLSAyMDIzIFJvYmluIEhlcmJvdHNcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogVmVyc2lvbjogNS4wLjgtYmV0YS43MlxuICovXG4hZnVuY3Rpb24oZSx0KXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz10KCk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLHQpO2Vsc2V7dmFyIGk9dCgpO2Zvcih2YXIgYSBpbiBpKShcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzOmUpW2FdPWlbYV19fShcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezg3NDE6ZnVuY3Rpb24oZSx0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9dm9pZCAwO3ZhciBpPSEoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvd3x8IXdpbmRvdy5kb2N1bWVudHx8IXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTt0LmRlZmF1bHQ9aX0sMzk3NjpmdW5jdGlvbihlLHQsaSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PXZvaWQgMDt2YXIgYT1pKDI4MzkpLG49e19tYXhUZXN0UG9zOjUwMCxwbGFjZWhvbGRlcjpcIl9cIixvcHRpb25hbG1hcmtlcjpbXCJbXCIsXCJdXCJdLHF1YW50aWZpZXJtYXJrZXI6W1wie1wiLFwifVwiXSxncm91cG1hcmtlcjpbXCIoXCIsXCIpXCJdLGFsdGVybmF0b3JtYXJrZXI6XCJ8XCIsZXNjYXBlQ2hhcjpcIlxcXFxcIixtYXNrOm51bGwscmVnZXg6bnVsbCxvbmNvbXBsZXRlOmZ1bmN0aW9uKCl7fSxvbmluY29tcGxldGU6ZnVuY3Rpb24oKXt9LG9uY2xlYXJlZDpmdW5jdGlvbigpe30scmVwZWF0OjAsZ3JlZWR5OiExLGF1dG9Vbm1hc2s6ITEscmVtb3ZlTWFza09uU3VibWl0OiExLGNsZWFyTWFza09uTG9zdEZvY3VzOiEwLGluc2VydE1vZGU6ITAsaW5zZXJ0TW9kZVZpc3VhbDohMCxjbGVhckluY29tcGxldGU6ITEsYWxpYXM6bnVsbCxvbktleURvd246ZnVuY3Rpb24oKXt9LG9uQmVmb3JlTWFzazpudWxsLG9uQmVmb3JlUGFzdGU6ZnVuY3Rpb24oZSx0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm9uQmVmb3JlTWFzaz90Lm9uQmVmb3JlTWFzay5jYWxsKHRoaXMsZSx0KTplfSxvbkJlZm9yZVdyaXRlOm51bGwsb25Vbk1hc2s6bnVsbCxzaG93TWFza09uRm9jdXM6ITAsc2hvd01hc2tPbkhvdmVyOiEwLG9uS2V5VmFsaWRhdGlvbjpmdW5jdGlvbigpe30sc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlcjpcIiBcIixudW1lcmljSW5wdXQ6ITEscmlnaHRBbGlnbjohMSx1bmRvT25Fc2NhcGU6ITAscmFkaXhQb2ludDpcIlwiLF9yYWRpeERhbmNlOiExLGdyb3VwU2VwYXJhdG9yOlwiXCIsa2VlcFN0YXRpYzpudWxsLHBvc2l0aW9uQ2FyZXRPblRhYjohMCx0YWJUaHJvdWdoOiExLHN1cHBvcnRzSW5wdXRUeXBlOltcInRleHRcIixcInRlbFwiLFwidXJsXCIsXCJwYXNzd29yZFwiLFwic2VhcmNoXCJdLGlnbm9yYWJsZXM6W2Eua2V5cy5CYWNrc3BhY2UsYS5rZXlzLlRhYixhLmtleXMuUGF1c2UsYS5rZXlzLkVzY2FwZSxhLmtleXMuUGFnZVVwLGEua2V5cy5QYWdlRG93bixhLmtleXMuRW5kLGEua2V5cy5Ib21lLGEua2V5cy5BcnJvd0xlZnQsYS5rZXlzLkFycm93VXAsYS5rZXlzLkFycm93UmlnaHQsYS5rZXlzLkFycm93RG93bixhLmtleXMuSW5zZXJ0LGEua2V5cy5EZWxldGUsYS5rZXlzLkNvbnRleHRNZW51LGEua2V5cy5GMSxhLmtleXMuRjIsYS5rZXlzLkYzLGEua2V5cy5GNCxhLmtleXMuRjUsYS5rZXlzLkY2LGEua2V5cy5GNyxhLmtleXMuRjgsYS5rZXlzLkY5LGEua2V5cy5GMTAsYS5rZXlzLkYxMSxhLmtleXMuRjEyLGEua2V5cy5Qcm9jZXNzLGEua2V5cy5VbmlkZW50aWZpZWQsYS5rZXlzLlNoaWZ0LGEua2V5cy5Db250cm9sLGEua2V5cy5BbHQsYS5rZXlzLlRhYixhLmtleXMuQWx0R3JhcGgsYS5rZXlzLkNhcHNMb2NrXSxpc0NvbXBsZXRlOm51bGwscHJlVmFsaWRhdGlvbjpudWxsLHBvc3RWYWxpZGF0aW9uOm51bGwsc3RhdGljRGVmaW5pdGlvblN5bWJvbDp2b2lkIDAsaml0TWFza2luZzohMSxudWxsYWJsZTohMCxpbnB1dEV2ZW50T25seTohMSxub1ZhbHVlUGF0Y2hpbmc6ITEscG9zaXRpb25DYXJldE9uQ2xpY2s6XCJsdnBcIixjYXNpbmc6bnVsbCxpbnB1dG1vZGU6XCJ0ZXh0XCIsaW1wb3J0RGF0YUF0dHJpYnV0ZXM6ITAsc2hpZnRQb3NpdGlvbnM6ITAsdXNlUHJvdG90eXBlRGVmaW5pdGlvbnM6ITAsdmFsaWRhdGlvbkV2ZW50VGltZU91dDozZTMsc3Vic3RpdHV0ZXM6e319O3QuZGVmYXVsdD1ufSw3MzkyOmZ1bmN0aW9uKGUsdCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PXZvaWQgMDt0LmRlZmF1bHQ9ezk6e3ZhbGlkYXRvcjpcIlswLTlcXHVmZjEwLVxcdWZmMTldXCIsZGVmaW5pdGlvblN5bWJvbDpcIipcIn0sYTp7dmFsaWRhdG9yOlwiW0EtWmEtelxcdTA0MTAtXFx1MDQ0ZlxcdTA0MDFcXHUwNDUxXFx4YzAtXFx4ZmZcXHhiNV1cIixkZWZpbml0aW9uU3ltYm9sOlwiKlwifSxcIipcIjp7dmFsaWRhdG9yOlwiWzAtOVxcdWZmMTAtXFx1ZmYxOUEtWmEtelxcdTA0MTAtXFx1MDQ0ZlxcdTA0MDFcXHUwNDUxXFx4YzAtXFx4ZmZcXHhiNV1cIn19fSwyNTM6ZnVuY3Rpb24oZSx0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0LGkpe2lmKHZvaWQgMD09PWkpcmV0dXJuIGUuX19kYXRhP2UuX19kYXRhW3RdOm51bGw7ZS5fX2RhdGE9ZS5fX2RhdGF8fHt9LGUuX19kYXRhW3RdPWl9fSwzNzc2OmZ1bmN0aW9uKGUsdCxpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkV2ZW50PXZvaWQgMCx0Lm9mZj1mdW5jdGlvbihlLHQpe3ZhciBpLGE7ZnVuY3Rpb24gbihlLHQsbil7aWYoZSBpbiBpPT0hMClpZihhLnJlbW92ZUV2ZW50TGlzdGVuZXI/YS5yZW1vdmVFdmVudExpc3RlbmVyKGUsbiwhMSk6YS5kZXRhY2hFdmVudCYmYS5kZXRhY2hFdmVudChcIm9uXCIrZSxuKSxcImdsb2JhbFwiPT09dClmb3IodmFyIHIgaW4gaVtlXSlpW2VdW3JdLnNwbGljZShpW2VdW3JdLmluZGV4T2YobiksMSk7ZWxzZSBpW2VdW3RdLnNwbGljZShpW2VdW3RdLmluZGV4T2YobiksMSl9ZnVuY3Rpb24gcihlLGEpe3ZhciBuLHIsbz1bXTtpZihlLmxlbmd0aD4wKWlmKHZvaWQgMD09PXQpZm9yKG49MCxyPWlbZV1bYV0ubGVuZ3RoO248cjtuKyspby5wdXNoKHtldjplLG5hbWVzcGFjZTphJiZhLmxlbmd0aD4wP2E6XCJnbG9iYWxcIixoYW5kbGVyOmlbZV1bYV1bbl19KTtlbHNlIG8ucHVzaCh7ZXY6ZSxuYW1lc3BhY2U6YSYmYS5sZW5ndGg+MD9hOlwiZ2xvYmFsXCIsaGFuZGxlcjp0fSk7ZWxzZSBpZihhLmxlbmd0aD4wKWZvcih2YXIgcyBpbiBpKWZvcih2YXIgbCBpbiBpW3NdKWlmKGw9PT1hKWlmKHZvaWQgMD09PXQpZm9yKG49MCxyPWlbc11bbF0ubGVuZ3RoO248cjtuKyspby5wdXNoKHtldjpzLG5hbWVzcGFjZTpsLGhhbmRsZXI6aVtzXVtsXVtuXX0pO2Vsc2Ugby5wdXNoKHtldjpzLG5hbWVzcGFjZTpsLGhhbmRsZXI6dH0pO3JldHVybiBvfWlmKGModGhpc1swXSkmJmUpe2k9dGhpc1swXS5ldmVudFJlZ2lzdHJ5LGE9dGhpc1swXTtmb3IodmFyIG89ZS5zcGxpdChcIiBcIikscz0wO3M8by5sZW5ndGg7cysrKWZvcih2YXIgbD1vW3NdLnNwbGl0KFwiLlwiKSx1PXIobFswXSxsWzFdKSxmPTAsZD11Lmxlbmd0aDtmPGQ7ZisrKW4odVtmXS5ldix1W2ZdLm5hbWVzcGFjZSx1W2ZdLmhhbmRsZXIpfXJldHVybiB0aGlzfSx0Lm9uPWZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gaShlLGkpe24uYWRkRXZlbnRMaXN0ZW5lcj9uLmFkZEV2ZW50TGlzdGVuZXIoZSx0LCExKTpuLmF0dGFjaEV2ZW50JiZuLmF0dGFjaEV2ZW50KFwib25cIitlLHQpLGFbZV09YVtlXXx8e30sYVtlXVtpXT1hW2VdW2ldfHxbXSxhW2VdW2ldLnB1c2godCl9aWYoYyh0aGlzWzBdKSlmb3IodmFyIGE9dGhpc1swXS5ldmVudFJlZ2lzdHJ5LG49dGhpc1swXSxyPWUuc3BsaXQoXCIgXCIpLG89MDtvPHIubGVuZ3RoO28rKyl7dmFyIHM9cltvXS5zcGxpdChcIi5cIiksbD1zWzBdLHU9c1sxXXx8XCJnbG9iYWxcIjtpKGwsdSl9cmV0dXJuIHRoaXN9LHQudHJpZ2dlcj1mdW5jdGlvbihlKXtpZihjKHRoaXNbMF0pKWZvcih2YXIgdD10aGlzWzBdLmV2ZW50UmVnaXN0cnksaT10aGlzWzBdLGE9XCJzdHJpbmdcIj09dHlwZW9mIGU/ZS5zcGxpdChcIiBcIik6W2UudHlwZV0scj0wO3I8YS5sZW5ndGg7cisrKXt2YXIgcz1hW3JdLnNwbGl0KFwiLlwiKSxsPXNbMF0sdT1zWzFdfHxcImdsb2JhbFwiO2lmKHZvaWQgMCE9PWRvY3VtZW50JiZcImdsb2JhbFwiPT09dSl7dmFyIGYsZCxwPXtidWJibGVzOiEwLGNhbmNlbGFibGU6ITAsY29tcG9zZWQ6ITAsZGV0YWlsOmFyZ3VtZW50c1sxXX07aWYoZG9jdW1lbnQuY3JlYXRlRXZlbnQpe3RyeXtpZihcImlucHV0XCI9PT1sKXAuaW5wdXRUeXBlPVwiaW5zZXJ0VGV4dFwiLGY9bmV3IElucHV0RXZlbnQobCxwKTtlbHNlIGY9bmV3IEN1c3RvbUV2ZW50KGwscCl9Y2F0Y2goZSl7KGY9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJDdXN0b21FdmVudFwiKSkuaW5pdEN1c3RvbUV2ZW50KGwscC5idWJibGVzLHAuY2FuY2VsYWJsZSxwLmRldGFpbCl9ZS50eXBlJiYoMCxuLmRlZmF1bHQpKGYsZSksaS5kaXNwYXRjaEV2ZW50KGYpfWVsc2UoZj1kb2N1bWVudC5jcmVhdGVFdmVudE9iamVjdCgpKS5ldmVudFR5cGU9bCxmLmRldGFpbD1hcmd1bWVudHNbMV0sZS50eXBlJiYoMCxuLmRlZmF1bHQpKGYsZSksaS5maXJlRXZlbnQoXCJvblwiK2YuZXZlbnRUeXBlLGYpfWVsc2UgaWYodm9pZCAwIT09dFtsXSlpZihhcmd1bWVudHNbMF09YXJndW1lbnRzWzBdLnR5cGU/YXJndW1lbnRzWzBdOm8uZGVmYXVsdC5FdmVudChhcmd1bWVudHNbMF0pLGFyZ3VtZW50c1swXS5kZXRhaWw9YXJndW1lbnRzLnNsaWNlKDEpLFwiZ2xvYmFsXCI9PT11KWZvcih2YXIgaCBpbiB0W2xdKWZvcihkPTA7ZDx0W2xdW2hdLmxlbmd0aDtkKyspdFtsXVtoXVtkXS5hcHBseShpLGFyZ3VtZW50cyk7ZWxzZSBmb3IoZD0wO2Q8dFtsXVt1XS5sZW5ndGg7ZCsrKXRbbF1bdV1bZF0uYXBwbHkoaSxhcmd1bWVudHMpfXJldHVybiB0aGlzfTt2YXIgYSxuPWwoaSg2MDApKSxyPWwoaSg5MzgwKSksbz1sKGkoNDk2MykpLHM9bChpKDg3NDEpKTtmdW5jdGlvbiBsKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBjKGUpe3JldHVybiBlIGluc3RhbmNlb2YgRWxlbWVudH10LkV2ZW50PWEsXCJmdW5jdGlvblwiPT10eXBlb2Ygci5kZWZhdWx0LkN1c3RvbUV2ZW50P3QuRXZlbnQ9YT1yLmRlZmF1bHQuQ3VzdG9tRXZlbnQ6cy5kZWZhdWx0JiYodC5FdmVudD1hPWZ1bmN0aW9uKGUsdCl7dD10fHx7YnViYmxlczohMSxjYW5jZWxhYmxlOiExLGNvbXBvc2VkOiEwLGRldGFpbDp2b2lkIDB9O3ZhciBpPWRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiQ3VzdG9tRXZlbnRcIik7cmV0dXJuIGkuaW5pdEN1c3RvbUV2ZW50KGUsdC5idWJibGVzLHQuY2FuY2VsYWJsZSx0LmRldGFpbCksaX0sYS5wcm90b3R5cGU9ci5kZWZhdWx0LkV2ZW50LnByb3RvdHlwZSl9LDYwMDpmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0saShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9ZnVuY3Rpb24gZSgpe3ZhciB0LGEsbixyLG8scyxsPWFyZ3VtZW50c1swXXx8e30sYz0xLHU9YXJndW1lbnRzLmxlbmd0aCxmPSExO1wiYm9vbGVhblwiPT10eXBlb2YgbCYmKGY9bCxsPWFyZ3VtZW50c1tjXXx8e30sYysrKTtcIm9iamVjdFwiIT09aShsKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgbCYmKGw9e30pO2Zvcig7Yzx1O2MrKylpZihudWxsIT0odD1hcmd1bWVudHNbY10pKWZvcihhIGluIHQpbj1sW2FdLHI9dFthXSxsIT09ciYmKGYmJnImJihcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHIpfHwobz1BcnJheS5pc0FycmF5KHIpKSk/KG8/KG89ITEscz1uJiZBcnJheS5pc0FycmF5KG4pP246W10pOnM9biYmXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKT9uOnt9LGxbYV09ZShmLHMscikpOnZvaWQgMCE9PXImJihsW2FdPXIpKTtyZXR1cm4gbH19LDQ5NjM6ZnVuY3Rpb24oZSx0LGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD12b2lkIDA7dmFyIGE9cyhpKDYwMCkpLG49cyhpKDkzODApKSxyPXMoaSgyNTMpKSxvPWkoMzc3Nik7ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGw9bi5kZWZhdWx0LmRvY3VtZW50O2Z1bmN0aW9uIGMoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBjP2U6dGhpcyBpbnN0YW5jZW9mIGM/dm9pZChudWxsIT1lJiZlIT09bi5kZWZhdWx0JiYodGhpc1swXT1lLm5vZGVOYW1lP2U6dm9pZCAwIT09ZVswXSYmZVswXS5ub2RlTmFtZT9lWzBdOmwucXVlcnlTZWxlY3RvcihlKSx2b2lkIDAhPT10aGlzWzBdJiZudWxsIT09dGhpc1swXSYmKHRoaXNbMF0uZXZlbnRSZWdpc3RyeT10aGlzWzBdLmV2ZW50UmVnaXN0cnl8fHt9KSkpOm5ldyBjKGUpfWMucHJvdG90eXBlPXtvbjpvLm9uLG9mZjpvLm9mZix0cmlnZ2VyOm8udHJpZ2dlcn0sYy5leHRlbmQ9YS5kZWZhdWx0LGMuZGF0YT1yLmRlZmF1bHQsYy5FdmVudD1vLkV2ZW50O3ZhciB1PWM7dC5kZWZhdWx0PXV9LDk4NDU6ZnVuY3Rpb24oZSx0LGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQubW9iaWxlPXQuaXBob25lPXQuaWU9dm9pZCAwO3ZhciBhLG49KGE9aSg5MzgwKSkmJmEuX19lc01vZHVsZT9hOntkZWZhdWx0OmF9O3ZhciByPW4uZGVmYXVsdC5uYXZpZ2F0b3ImJm4uZGVmYXVsdC5uYXZpZ2F0b3IudXNlckFnZW50fHxcIlwiLG89ci5pbmRleE9mKFwiTVNJRSBcIik+MHx8ci5pbmRleE9mKFwiVHJpZGVudC9cIik+MCxzPW5hdmlnYXRvci51c2VyQWdlbnREYXRhJiZuYXZpZ2F0b3IudXNlckFnZW50RGF0YS5tb2JpbGV8fG4uZGVmYXVsdC5uYXZpZ2F0b3ImJm4uZGVmYXVsdC5uYXZpZ2F0b3IubWF4VG91Y2hQb2ludHN8fFwib250b3VjaHN0YXJ0XCJpbiBuLmRlZmF1bHQsbD0vaXBob25lL2kudGVzdChyKTt0LmlwaG9uZT1sLHQubW9iaWxlPXMsdC5pZT1vfSw3MTg0OmZ1bmN0aW9uKGUsdCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PWZ1bmN0aW9uKGUpe3JldHVybiBlLnJlcGxhY2UoaSxcIlxcXFwkMVwiKX07dmFyIGk9bmV3IFJlZ0V4cChcIihcXFxcXCIrW1wiL1wiLFwiLlwiLFwiKlwiLFwiK1wiLFwiP1wiLFwifFwiLFwiKFwiLFwiKVwiLFwiW1wiLFwiXVwiLFwie1wiLFwifVwiLFwiXFxcXFwiLFwiJFwiLFwiXlwiXS5qb2luKFwifFxcXFxcIikrXCIpXCIsXCJnaW1cIil9LDYwMzA6ZnVuY3Rpb24oZSx0LGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRXZlbnRIYW5kbGVycz12b2lkIDA7dmFyIGE9aSg4NzExKSxuPWkoMjgzOSkscj1pKDk4NDUpLG89aSg3MjE1KSxzPWkoNzc2MCksbD1pKDQ3MTMpO2Z1bmN0aW9uIGMoZSx0KXt2YXIgaT1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKCFpKXtpZihBcnJheS5pc0FycmF5KGUpfHwoaT1mdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybjtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gdShlLHQpO3ZhciBpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtcIk9iamVjdFwiPT09aSYmZS5jb25zdHJ1Y3RvciYmKGk9ZS5jb25zdHJ1Y3Rvci5uYW1lKTtpZihcIk1hcFwiPT09aXx8XCJTZXRcIj09PWkpcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoXCJBcmd1bWVudHNcIj09PWl8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KGkpKXJldHVybiB1KGUsdCl9KGUpKXx8dCYmZSYmXCJudW1iZXJcIj09dHlwZW9mIGUubGVuZ3RoKXtpJiYoZT1pKTt2YXIgYT0wLG49ZnVuY3Rpb24oKXt9O3JldHVybntzOm4sbjpmdW5jdGlvbigpe3JldHVybiBhPj1lLmxlbmd0aD97ZG9uZTohMH06e2RvbmU6ITEsdmFsdWU6ZVthKytdfX0sZTpmdW5jdGlvbihlKXt0aHJvdyBlfSxmOm59fXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX12YXIgcixvPSEwLHM9ITE7cmV0dXJue3M6ZnVuY3Rpb24oKXtpPWkuY2FsbChlKX0sbjpmdW5jdGlvbigpe3ZhciBlPWkubmV4dCgpO3JldHVybiBvPWUuZG9uZSxlfSxlOmZ1bmN0aW9uKGUpe3M9ITAscj1lfSxmOmZ1bmN0aW9uKCl7dHJ5e298fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYocyl0aHJvdyByfX19fWZ1bmN0aW9uIHUoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIGk9MCxhPW5ldyBBcnJheSh0KTtpPHQ7aSsrKWFbaV09ZVtpXTtyZXR1cm4gYX12YXIgZj17a2V5RXZlbnQ6ZnVuY3Rpb24oZSx0LGksYyx1KXt2YXIgZD10aGlzLmlucHV0bWFzayxwPWQub3B0cyxoPWQuZGVwZW5kZW5jeUxpYix2PWQubWFza3NldCxtPXRoaXMsZz1oKG0pLGs9ZS5rZXkseT1hLmNhcmV0LmNhbGwoZCxtKSxiPXAub25LZXlEb3duLmNhbGwodGhpcyxlLGEuZ2V0QnVmZmVyLmNhbGwoZCkseSxwKTtpZih2b2lkIDAhPT1iKXJldHVybiBiO2lmKGs9PT1uLmtleXMuQmFja3NwYWNlfHxrPT09bi5rZXlzLkRlbGV0ZXx8ci5pcGhvbmUmJms9PT1uLmtleXMuQkFDS1NQQUNFX1NBRkFSSXx8ZS5jdHJsS2V5JiZrPT09bi5rZXlzLngmJiEoXCJvbmN1dFwiaW4gbSkpZS5wcmV2ZW50RGVmYXVsdCgpLG8uaGFuZGxlUmVtb3ZlLmNhbGwoZCxtLGsseSksKDAscy53cml0ZUJ1ZmZlcikobSxhLmdldEJ1ZmZlci5jYWxsKGQsITApLHYucCxlLG0uaW5wdXRtYXNrLl92YWx1ZUdldCgpIT09YS5nZXRCdWZmZXIuY2FsbChkKS5qb2luKFwiXCIpKTtlbHNlIGlmKGs9PT1uLmtleXMuRW5kfHxrPT09bi5rZXlzLlBhZ2VEb3duKXtlLnByZXZlbnREZWZhdWx0KCk7dmFyIHg9YS5zZWVrTmV4dC5jYWxsKGQsYS5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGQpKTthLmNhcmV0LmNhbGwoZCxtLGUuc2hpZnRLZXk/eS5iZWdpbjp4LHgsITApfWVsc2Ugaz09PW4ua2V5cy5Ib21lJiYhZS5zaGlmdEtleXx8az09PW4ua2V5cy5QYWdlVXA/KGUucHJldmVudERlZmF1bHQoKSxhLmNhcmV0LmNhbGwoZCxtLDAsZS5zaGlmdEtleT95LmJlZ2luOjAsITApKTpwLnVuZG9PbkVzY2FwZSYmaz09PW4ua2V5cy5Fc2NhcGUmJiEwIT09ZS5hbHRLZXk/KCgwLHMuY2hlY2tWYWwpKG0sITAsITEsZC51bmRvVmFsdWUuc3BsaXQoXCJcIikpLGcudHJpZ2dlcihcImNsaWNrXCIpKTprIT09bi5rZXlzLkluc2VydHx8ZS5zaGlmdEtleXx8ZS5jdHJsS2V5fHx2b2lkIDAhPT1kLnVzZXJPcHRpb25zLmluc2VydE1vZGU/ITA9PT1wLnRhYlRocm91Z2gmJms9PT1uLmtleXMuVGFiPyEwPT09ZS5zaGlmdEtleT8oeS5lbmQ9YS5zZWVrUHJldmlvdXMuY2FsbChkLHkuZW5kLCEwKSwhMD09PWwuZ2V0VGVzdC5jYWxsKGQseS5lbmQtMSkubWF0Y2guc3RhdGljJiZ5LmVuZC0tLHkuYmVnaW49YS5zZWVrUHJldmlvdXMuY2FsbChkLHkuZW5kLCEwKSx5LmJlZ2luPj0wJiZ5LmVuZD4wJiYoZS5wcmV2ZW50RGVmYXVsdCgpLGEuY2FyZXQuY2FsbChkLG0seS5iZWdpbix5LmVuZCkpKTooeS5iZWdpbj1hLnNlZWtOZXh0LmNhbGwoZCx5LmJlZ2luLCEwKSx5LmVuZD1hLnNlZWtOZXh0LmNhbGwoZCx5LmJlZ2luLCEwKSx5LmVuZDx2Lm1hc2tMZW5ndGgmJnkuZW5kLS0seS5iZWdpbjw9di5tYXNrTGVuZ3RoJiYoZS5wcmV2ZW50RGVmYXVsdCgpLGEuY2FyZXQuY2FsbChkLG0seS5iZWdpbix5LmVuZCkpKTplLnNoaWZ0S2V5fHxwLmluc2VydE1vZGVWaXN1YWwmJiExPT09cC5pbnNlcnRNb2RlJiYoaz09PW4ua2V5cy5BcnJvd1JpZ2h0P3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dmFyIGU9YS5jYXJldC5jYWxsKGQsbSk7YS5jYXJldC5jYWxsKGQsbSxlLmJlZ2luKX0pLDApOms9PT1uLmtleXMuQXJyb3dMZWZ0JiZzZXRUaW1lb3V0KChmdW5jdGlvbigpe3ZhciBlPWEudHJhbnNsYXRlUG9zaXRpb24uY2FsbChkLG0uaW5wdXRtYXNrLmNhcmV0UG9zLmJlZ2luKTthLnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwoZCxtLmlucHV0bWFzay5jYXJldFBvcy5lbmQpO2QuaXNSVEw/YS5jYXJldC5jYWxsKGQsbSxlKyhlPT09di5tYXNrTGVuZ3RoPzA6MSkpOmEuY2FyZXQuY2FsbChkLG0sZS0oMD09PWU/MDoxKSl9KSwwKSk6by5pc1NlbGVjdGlvbi5jYWxsKGQseSk/cC5pbnNlcnRNb2RlPSFwLmluc2VydE1vZGU6KHAuaW5zZXJ0TW9kZT0hcC5pbnNlcnRNb2RlLGEuY2FyZXQuY2FsbChkLG0seS5iZWdpbix5LmJlZ2luKSk7cmV0dXJuIGQuaXNDb21wb3Npbmc9az09bi5rZXlzLlByb2Nlc3N8fGs9PW4ua2V5cy5VbmlkZW50aWZpZWQsZC5pZ25vcmFibGU9cC5pZ25vcmFibGVzLmluY2x1ZGVzKGspLGYua2V5cHJlc3NFdmVudC5jYWxsKHRoaXMsZSx0LGksYyx1KX0sa2V5cHJlc3NFdmVudDpmdW5jdGlvbihlLHQsaSxyLGwpe3ZhciBjPXRoaXMuaW5wdXRtYXNrfHx0aGlzLHU9Yy5vcHRzLGY9Yy5kZXBlbmRlbmN5TGliLGQ9Yy5tYXNrc2V0LHA9Yy5lbCxoPWYocCksdj1lLmtleTtpZighMD09PXR8fGUuY3RybEtleSYmZS5hbHRLZXl8fCEoZS5jdHJsS2V5fHxlLm1ldGFLZXl8fGMuaWdub3JhYmxlKSl7aWYodil7dmFyIG0sZz10P3tiZWdpbjpsLGVuZDpsfTphLmNhcmV0LmNhbGwoYyxwKTt2PXUuc3Vic3RpdHV0ZXNbdl18fHYsZC53cml0ZU91dEJ1ZmZlcj0hMDt2YXIgaz1vLmlzVmFsaWQuY2FsbChjLGcsdixyLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHQpO2lmKCExIT09ayYmKGEucmVzZXRNYXNrU2V0LmNhbGwoYywhMCksbT12b2lkIDAhPT1rLmNhcmV0P2suY2FyZXQ6YS5zZWVrTmV4dC5jYWxsKGMsay5wb3MuYmVnaW4/ay5wb3MuYmVnaW46ay5wb3MpLGQucD1tKSxtPXUubnVtZXJpY0lucHV0JiZ2b2lkIDA9PT1rLmNhcmV0P2Euc2Vla1ByZXZpb3VzLmNhbGwoYyxtKTptLCExIT09aSYmKHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dS5vbktleVZhbGlkYXRpb24uY2FsbChwLHYsayl9KSwwKSxkLndyaXRlT3V0QnVmZmVyJiYhMSE9PWspKXt2YXIgeT1hLmdldEJ1ZmZlci5jYWxsKGMpOygwLHMud3JpdGVCdWZmZXIpKHAseSxtLGUsITAhPT10KX1pZihlLnByZXZlbnREZWZhdWx0KCksdClyZXR1cm4hMSE9PWsmJihrLmZvcndhcmRQb3NpdGlvbj1tKSxrfX1lbHNlIHY9PT1uLmtleXMuRW50ZXImJmMudW5kb1ZhbHVlIT09Yy5fdmFsdWVHZXQoITApJiYoYy51bmRvVmFsdWU9Yy5fdmFsdWVHZXQoITApLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7aC50cmlnZ2VyKFwiY2hhbmdlXCIpfSksMCkpfSxwYXN0ZUV2ZW50OmZ1bmN0aW9uKGUpe3ZhciB0LGk9dGhpcy5pbnB1dG1hc2ssbj1pLm9wdHMscj1pLl92YWx1ZUdldCghMCksbz1hLmNhcmV0LmNhbGwoaSx0aGlzKTtpLmlzUlRMJiYodD1vLmVuZCxvLmVuZD1hLnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwoaSxvLmJlZ2luKSxvLmJlZ2luPWEudHJhbnNsYXRlUG9zaXRpb24uY2FsbChpLHQpKTt2YXIgbD1yLnN1YnN0cigwLG8uYmVnaW4pLHU9ci5zdWJzdHIoby5lbmQsci5sZW5ndGgpO2lmKGw9PShpLmlzUlRMP2EuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpKS5zbGljZSgpLnJldmVyc2UoKTphLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwoaSkpLnNsaWNlKDAsby5iZWdpbikuam9pbihcIlwiKSYmKGw9XCJcIiksdT09KGkuaXNSVEw/YS5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGkpLnNsaWNlKCkucmV2ZXJzZSgpOmEuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpKSkuc2xpY2Uoby5lbmQpLmpvaW4oXCJcIikmJih1PVwiXCIpLHdpbmRvdy5jbGlwYm9hcmREYXRhJiZ3aW5kb3cuY2xpcGJvYXJkRGF0YS5nZXREYXRhKXI9bCt3aW5kb3cuY2xpcGJvYXJkRGF0YS5nZXREYXRhKFwiVGV4dFwiKSt1O2Vsc2V7aWYoIWUuY2xpcGJvYXJkRGF0YXx8IWUuY2xpcGJvYXJkRGF0YS5nZXREYXRhKXJldHVybiEwO3I9bCtlLmNsaXBib2FyZERhdGEuZ2V0RGF0YShcInRleHQvcGxhaW5cIikrdX12YXIgZj1yO2lmKGkuaXNSVEwpe2Y9Zi5zcGxpdChcIlwiKTt2YXIgZCxwPWMoYS5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGkpKTt0cnl7Zm9yKHAucygpOyEoZD1wLm4oKSkuZG9uZTspe3ZhciBoPWQudmFsdWU7ZlswXT09PWgmJmYuc2hpZnQoKX19Y2F0Y2goZSl7cC5lKGUpfWZpbmFsbHl7cC5mKCl9Zj1mLmpvaW4oXCJcIil9aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygbi5vbkJlZm9yZVBhc3RlKXtpZighMT09PShmPW4ub25CZWZvcmVQYXN0ZS5jYWxsKGksZixuKSkpcmV0dXJuITE7Znx8KGY9cil9KDAscy5jaGVja1ZhbCkodGhpcywhMCwhMSxmLnRvU3RyaW5nKCkuc3BsaXQoXCJcIiksZSksZS5wcmV2ZW50RGVmYXVsdCgpfSxpbnB1dEZhbGxCYWNrRXZlbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5pbnB1dG1hc2ssaT10Lm9wdHMsbz10LmRlcGVuZGVuY3lMaWI7dmFyIGMsdT10aGlzLGQ9dS5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSxwPSh0LmlzUlRMP2EuZ2V0QnVmZmVyLmNhbGwodCkuc2xpY2UoKS5yZXZlcnNlKCk6YS5nZXRCdWZmZXIuY2FsbCh0KSkuam9pbihcIlwiKSxoPWEuY2FyZXQuY2FsbCh0LHUsdm9pZCAwLHZvaWQgMCwhMCk7aWYocCE9PWQpe2lmKGM9ZnVuY3Rpb24oZSxuLHIpe2Zvcih2YXIgbyxzLGMsdT1lLnN1YnN0cigwLHIuYmVnaW4pLnNwbGl0KFwiXCIpLGY9ZS5zdWJzdHIoci5iZWdpbikuc3BsaXQoXCJcIiksZD1uLnN1YnN0cigwLHIuYmVnaW4pLnNwbGl0KFwiXCIpLHA9bi5zdWJzdHIoci5iZWdpbikuc3BsaXQoXCJcIiksaD11Lmxlbmd0aD49ZC5sZW5ndGg/dS5sZW5ndGg6ZC5sZW5ndGgsdj1mLmxlbmd0aD49cC5sZW5ndGg/Zi5sZW5ndGg6cC5sZW5ndGgsbT1cIlwiLGc9W10saz1cIn5cIjt1Lmxlbmd0aDxoOyl1LnB1c2goayk7Zm9yKDtkLmxlbmd0aDxoOylkLnB1c2goayk7Zm9yKDtmLmxlbmd0aDx2OylmLnVuc2hpZnQoayk7Zm9yKDtwLmxlbmd0aDx2OylwLnVuc2hpZnQoayk7dmFyIHk9dS5jb25jYXQoZiksYj1kLmNvbmNhdChwKTtmb3Iocz0wLG89eS5sZW5ndGg7czxvO3MrKylzd2l0Y2goYz1sLmdldFBsYWNlaG9sZGVyLmNhbGwodCxhLnRyYW5zbGF0ZVBvc2l0aW9uLmNhbGwodCxzKSksbSl7Y2FzZVwiaW5zZXJ0VGV4dFwiOmJbcy0xXT09PXlbc10mJnIuYmVnaW49PXkubGVuZ3RoLTEmJmcucHVzaCh5W3NdKSxzPW87YnJlYWs7Y2FzZVwiaW5zZXJ0UmVwbGFjZW1lbnRUZXh0XCI6Y2FzZVwiZGVsZXRlQ29udGVudEJhY2t3YXJkXCI6eVtzXT09PWs/ci5lbmQrKzpzPW87YnJlYWs7ZGVmYXVsdDp5W3NdIT09YltzXSYmKHlbcysxXSE9PWsmJnlbcysxXSE9PWMmJnZvaWQgMCE9PXlbcysxXXx8KGJbc10hPT1jfHxiW3MrMV0hPT1rKSYmYltzXSE9PWs/YltzKzFdPT09ayYmYltzXT09PXlbcysxXT8obT1cImluc2VydFRleHRcIixnLnB1c2goeVtzXSksci5iZWdpbi0tLHIuZW5kLS0pOnlbc10hPT1jJiZ5W3NdIT09ayYmKHlbcysxXT09PWt8fGJbc10hPT15W3NdJiZiW3MrMV09PT15W3MrMV0pPyhtPVwiaW5zZXJ0UmVwbGFjZW1lbnRUZXh0XCIsZy5wdXNoKHlbc10pLHIuYmVnaW4tLSk6eVtzXT09PWs/KG09XCJkZWxldGVDb250ZW50QmFja3dhcmRcIiwoYS5pc01hc2suY2FsbCh0LGEudHJhbnNsYXRlUG9zaXRpb24uY2FsbCh0LHMpLCEwKXx8YltzXT09PWkucmFkaXhQb2ludCkmJnIuZW5kKyspOnM9bzoobT1cImluc2VydFRleHRcIixnLnB1c2goeVtzXSksci5iZWdpbi0tLHIuZW5kLS0pKX1yZXR1cm57YWN0aW9uOm0sZGF0YTpnLGNhcmV0OnJ9fShkLHAsaCksKHUuaW5wdXRtYXNrLnNoYWRvd1Jvb3R8fHUub3duZXJEb2N1bWVudCkuYWN0aXZlRWxlbWVudCE9PXUmJnUuZm9jdXMoKSwoMCxzLndyaXRlQnVmZmVyKSh1LGEuZ2V0QnVmZmVyLmNhbGwodCkpLGEuY2FyZXQuY2FsbCh0LHUsaC5iZWdpbixoLmVuZCwhMCksIXIubW9iaWxlJiZ0LnNraXBOZXh0SW5zZXJ0JiZcImluc2VydFRleHRcIj09PWUuaW5wdXRUeXBlJiZcImluc2VydFRleHRcIj09PWMuYWN0aW9uJiZ0LmlzQ29tcG9zaW5nKXJldHVybiExO3N3aXRjaChcImluc2VydENvbXBvc2l0aW9uVGV4dFwiPT09ZS5pbnB1dFR5cGUmJlwiaW5zZXJ0VGV4dFwiPT09Yy5hY3Rpb24mJnQuaXNDb21wb3Npbmc/dC5za2lwTmV4dEluc2VydD0hMDp0LnNraXBOZXh0SW5zZXJ0PSExLGMuYWN0aW9uKXtjYXNlXCJpbnNlcnRUZXh0XCI6Y2FzZVwiaW5zZXJ0UmVwbGFjZW1lbnRUZXh0XCI6Yy5kYXRhLmZvckVhY2goKGZ1bmN0aW9uKGUsaSl7dmFyIGE9bmV3IG8uRXZlbnQoXCJrZXlwcmVzc1wiKTthLmtleT1lLHQuaWdub3JhYmxlPSExLGYua2V5cHJlc3NFdmVudC5jYWxsKHUsYSl9KSksc2V0VGltZW91dCgoZnVuY3Rpb24oKXt0LiRlbC50cmlnZ2VyKFwia2V5dXBcIil9KSwwKTticmVhaztjYXNlXCJkZWxldGVDb250ZW50QmFja3dhcmRcIjp2YXIgdj1uZXcgby5FdmVudChcImtleWRvd25cIik7di5rZXk9bi5rZXlzLkJhY2tzcGFjZSxmLmtleUV2ZW50LmNhbGwodSx2KTticmVhaztkZWZhdWx0OigwLHMuYXBwbHlJbnB1dFZhbHVlKSh1LGQpLGEuY2FyZXQuY2FsbCh0LHUsaC5iZWdpbixoLmVuZCwhMCl9ZS5wcmV2ZW50RGVmYXVsdCgpfX0sc2V0VmFsdWVFdmVudDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmlucHV0bWFzayxpPXRoaXMsbj1lJiZlLmRldGFpbD9lLmRldGFpbFswXTphcmd1bWVudHNbMV07dm9pZCAwPT09biYmKG49aS5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSksKDAscy5hcHBseUlucHV0VmFsdWUpKGksbiksKGUuZGV0YWlsJiZ2b2lkIDAhPT1lLmRldGFpbFsxXXx8dm9pZCAwIT09YXJndW1lbnRzWzJdKSYmYS5jYXJldC5jYWxsKHQsaSxlLmRldGFpbD9lLmRldGFpbFsxXTphcmd1bWVudHNbMl0pfSxmb2N1c0V2ZW50OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuaW5wdXRtYXNrLGk9dC5vcHRzLG49dGhpcyxyPW4uaW5wdXRtYXNrLl92YWx1ZUdldCgpO2kuc2hvd01hc2tPbkZvY3VzJiZyIT09YS5nZXRCdWZmZXIuY2FsbCh0KS5qb2luKFwiXCIpJiYoMCxzLndyaXRlQnVmZmVyKShuLGEuZ2V0QnVmZmVyLmNhbGwodCksYS5zZWVrTmV4dC5jYWxsKHQsYS5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHQpKSksITAhPT1pLnBvc2l0aW9uQ2FyZXRPblRhYnx8ITEhPT10Lm1vdXNlRW50ZXJ8fG8uaXNDb21wbGV0ZS5jYWxsKHQsYS5nZXRCdWZmZXIuY2FsbCh0KSkmJi0xIT09YS5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHQpfHxmLmNsaWNrRXZlbnQuYXBwbHkobixbZSwhMF0pLHQudW5kb1ZhbHVlPXQuX3ZhbHVlR2V0KCEwKX0saW52YWxpZEV2ZW50OmZ1bmN0aW9uKGUpe3RoaXMuaW5wdXRtYXNrLnZhbGlkYXRpb25FdmVudD0hMH0sbW91c2VsZWF2ZUV2ZW50OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5pbnB1dG1hc2ssdD1lLm9wdHMsaT10aGlzO2UubW91c2VFbnRlcj0hMSx0LmNsZWFyTWFza09uTG9zdEZvY3VzJiYoaS5pbnB1dG1hc2suc2hhZG93Um9vdHx8aS5vd25lckRvY3VtZW50KS5hY3RpdmVFbGVtZW50IT09aSYmKDAscy5IYW5kbGVOYXRpdmVQbGFjZWhvbGRlcikoaSxlLm9yaWdpbmFsUGxhY2Vob2xkZXIpfSxjbGlja0V2ZW50OmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5pbnB1dG1hc2s7aS5jbGlja2VkKys7dmFyIG49dGhpcztpZigobi5pbnB1dG1hc2suc2hhZG93Um9vdHx8bi5vd25lckRvY3VtZW50KS5hY3RpdmVFbGVtZW50PT09bil7dmFyIHI9YS5kZXRlcm1pbmVOZXdDYXJldFBvc2l0aW9uLmNhbGwoaSxhLmNhcmV0LmNhbGwoaSxuKSx0KTt2b2lkIDAhPT1yJiZhLmNhcmV0LmNhbGwoaSxuLHIpfX0sY3V0RXZlbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5pbnB1dG1hc2ssaT10Lm1hc2tzZXQscj10aGlzLGw9YS5jYXJldC5jYWxsKHQsciksYz10LmlzUlRMP2EuZ2V0QnVmZmVyLmNhbGwodCkuc2xpY2UobC5lbmQsbC5iZWdpbik6YS5nZXRCdWZmZXIuY2FsbCh0KS5zbGljZShsLmJlZ2luLGwuZW5kKSx1PXQuaXNSVEw/Yy5yZXZlcnNlKCkuam9pbihcIlwiKTpjLmpvaW4oXCJcIik7d2luZG93Lm5hdmlnYXRvci5jbGlwYm9hcmQ/d2luZG93Lm5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHUpOndpbmRvdy5jbGlwYm9hcmREYXRhJiZ3aW5kb3cuY2xpcGJvYXJkRGF0YS5nZXREYXRhJiZ3aW5kb3cuY2xpcGJvYXJkRGF0YS5zZXREYXRhKFwiVGV4dFwiLHUpLG8uaGFuZGxlUmVtb3ZlLmNhbGwodCxyLG4ua2V5cy5EZWxldGUsbCksKDAscy53cml0ZUJ1ZmZlcikocixhLmdldEJ1ZmZlci5jYWxsKHQpLGkucCxlLHQudW5kb1ZhbHVlIT09dC5fdmFsdWVHZXQoITApKX0sYmx1ckV2ZW50OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuaW5wdXRtYXNrLGk9dC5vcHRzLG49dC5kZXBlbmRlbmN5TGliO3QuY2xpY2tlZD0wO3ZhciByPW4odGhpcyksbD10aGlzO2lmKGwuaW5wdXRtYXNrKXsoMCxzLkhhbmRsZU5hdGl2ZVBsYWNlaG9sZGVyKShsLHQub3JpZ2luYWxQbGFjZWhvbGRlcik7dmFyIGM9bC5pbnB1dG1hc2suX3ZhbHVlR2V0KCksdT1hLmdldEJ1ZmZlci5jYWxsKHQpLnNsaWNlKCk7XCJcIiE9PWMmJihpLmNsZWFyTWFza09uTG9zdEZvY3VzJiYoLTE9PT1hLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwodCkmJmM9PT1hLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwodCkuam9pbihcIlwiKT91PVtdOnMuY2xlYXJPcHRpb25hbFRhaWwuY2FsbCh0LHUpKSwhMT09PW8uaXNDb21wbGV0ZS5jYWxsKHQsdSkmJihzZXRUaW1lb3V0KChmdW5jdGlvbigpe3IudHJpZ2dlcihcImluY29tcGxldGVcIil9KSwwKSxpLmNsZWFySW5jb21wbGV0ZSYmKGEucmVzZXRNYXNrU2V0LmNhbGwodCksdT1pLmNsZWFyTWFza09uTG9zdEZvY3VzP1tdOmEuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbCh0KS5zbGljZSgpKSksKDAscy53cml0ZUJ1ZmZlcikobCx1LHZvaWQgMCxlKSksdC51bmRvVmFsdWUhPT10Ll92YWx1ZUdldCghMCkmJih0LnVuZG9WYWx1ZT10Ll92YWx1ZUdldCghMCksci50cmlnZ2VyKFwiY2hhbmdlXCIpKX19LG1vdXNlZW50ZXJFdmVudDpmdW5jdGlvbigpe3ZhciBlPXRoaXMuaW5wdXRtYXNrLHQ9ZS5vcHRzLnNob3dNYXNrT25Ib3ZlcixpPXRoaXM7aWYoZS5tb3VzZUVudGVyPSEwLChpLmlucHV0bWFzay5zaGFkb3dSb290fHxpLm93bmVyRG9jdW1lbnQpLmFjdGl2ZUVsZW1lbnQhPT1pKXt2YXIgbj0oZS5pc1JUTD9hLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwoZSkuc2xpY2UoKS5yZXZlcnNlKCk6YS5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGUpKS5qb2luKFwiXCIpO3QmJigwLHMuSGFuZGxlTmF0aXZlUGxhY2Vob2xkZXIpKGksbil9fSxzdWJtaXRFdmVudDpmdW5jdGlvbigpe3ZhciBlPXRoaXMuaW5wdXRtYXNrLHQ9ZS5vcHRzO2UudW5kb1ZhbHVlIT09ZS5fdmFsdWVHZXQoITApJiZlLiRlbC50cmlnZ2VyKFwiY2hhbmdlXCIpLC0xPT09YS5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGUpJiZlLl92YWx1ZUdldCYmZS5fdmFsdWVHZXQoKT09PWEuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChlKS5qb2luKFwiXCIpJiZlLl92YWx1ZVNldChcIlwiKSx0LmNsZWFySW5jb21wbGV0ZSYmITE9PT1vLmlzQ29tcGxldGUuY2FsbChlLGEuZ2V0QnVmZmVyLmNhbGwoZSkpJiZlLl92YWx1ZVNldChcIlwiKSx0LnJlbW92ZU1hc2tPblN1Ym1pdCYmKGUuX3ZhbHVlU2V0KGUudW5tYXNrZWR2YWx1ZSgpLCEwKSxzZXRUaW1lb3V0KChmdW5jdGlvbigpeygwLHMud3JpdGVCdWZmZXIpKGUuZWwsYS5nZXRCdWZmZXIuY2FsbChlKSl9KSwwKSl9LHJlc2V0RXZlbnQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmlucHV0bWFzaztlLnJlZnJlc2hWYWx1ZT0hMCxzZXRUaW1lb3V0KChmdW5jdGlvbigpeygwLHMuYXBwbHlJbnB1dFZhbHVlKShlLmVsLGUuX3ZhbHVlR2V0KCEwKSl9KSwwKX19O3QuRXZlbnRIYW5kbGVycz1mfSw5NzE2OmZ1bmN0aW9uKGUsdCxpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkV2ZW50UnVsZXI9dm9pZCAwO3ZhciBhLG49KGE9aSgyMzk0KSkmJmEuX19lc01vZHVsZT9hOntkZWZhdWx0OmF9LHI9aSgyODM5KSxvPWkoODcxMSkscz1pKDc3NjApO3ZhciBsPXtvbjpmdW5jdGlvbihlLHQsaSl7dmFyIGE9ZS5pbnB1dG1hc2suZGVwZW5kZW5jeUxpYixsPWZ1bmN0aW9uKHQpe3Qub3JpZ2luYWxFdmVudCYmKHQ9dC5vcmlnaW5hbEV2ZW50fHx0LGFyZ3VtZW50c1swXT10KTt2YXIgbCxjPXRoaXMsdT1jLmlucHV0bWFzayxmPXU/dS5vcHRzOnZvaWQgMDtpZih2b2lkIDA9PT11JiZcIkZPUk1cIiE9PXRoaXMubm9kZU5hbWUpe3ZhciBkPWEuZGF0YShjLFwiX2lucHV0bWFza19vcHRzXCIpO2EoYykub2ZmKCksZCYmbmV3IG4uZGVmYXVsdChkKS5tYXNrKGMpfWVsc2V7aWYoW1wic3VibWl0XCIsXCJyZXNldFwiLFwic2V0dmFsdWVcIl0uaW5jbHVkZXModC50eXBlKXx8XCJGT1JNXCI9PT10aGlzLm5vZGVOYW1lfHwhKGMuZGlzYWJsZWR8fGMucmVhZE9ubHkmJiEoXCJrZXlkb3duXCI9PT10LnR5cGUmJnQuY3RybEtleSYmdC5rZXk9PT1yLmtleXMuY3x8ITE9PT1mLnRhYlRocm91Z2gmJnQua2V5PT09ci5rZXlzLlRhYikpKXtzd2l0Y2godC50eXBlKXtjYXNlXCJpbnB1dFwiOmlmKCEwPT09dS5za2lwSW5wdXRFdmVudClyZXR1cm4gdS5za2lwSW5wdXRFdmVudD0hMSx0LnByZXZlbnREZWZhdWx0KCk7YnJlYWs7Y2FzZVwiY2xpY2tcIjpjYXNlXCJmb2N1c1wiOnJldHVybiB1LnZhbGlkYXRpb25FdmVudD8odS52YWxpZGF0aW9uRXZlbnQ9ITEsZS5ibHVyKCksKDAscy5IYW5kbGVOYXRpdmVQbGFjZWhvbGRlcikoZSwodS5pc1JUTD9vLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwodSkuc2xpY2UoKS5yZXZlcnNlKCk6by5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKHUpKS5qb2luKFwiXCIpKSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuZm9jdXMoKX0pLGYudmFsaWRhdGlvbkV2ZW50VGltZU91dCksITEpOihsPWFyZ3VtZW50cyx2b2lkIHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZS5pbnB1dG1hc2smJmkuYXBwbHkoYyxsKX0pLDApKX12YXIgcD1pLmFwcGx5KGMsYXJndW1lbnRzKTtyZXR1cm4hMT09PXAmJih0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKSkscH10LnByZXZlbnREZWZhdWx0KCl9fTtbXCJzdWJtaXRcIixcInJlc2V0XCJdLmluY2x1ZGVzKHQpPyhsPWwuYmluZChlKSxudWxsIT09ZS5mb3JtJiZhKGUuZm9ybSkub24odCxsKSk6YShlKS5vbih0LGwpLGUuaW5wdXRtYXNrLmV2ZW50c1t0XT1lLmlucHV0bWFzay5ldmVudHNbdF18fFtdLGUuaW5wdXRtYXNrLmV2ZW50c1t0XS5wdXNoKGwpfSxvZmY6ZnVuY3Rpb24oZSx0KXtpZihlLmlucHV0bWFzayYmZS5pbnB1dG1hc2suZXZlbnRzKXt2YXIgaT1lLmlucHV0bWFzay5kZXBlbmRlbmN5TGliLGE9ZS5pbnB1dG1hc2suZXZlbnRzO2Zvcih2YXIgbiBpbiB0JiYoKGE9W10pW3RdPWUuaW5wdXRtYXNrLmV2ZW50c1t0XSksYSl7Zm9yKHZhciByPWFbbl07ci5sZW5ndGg+MDspe3ZhciBvPXIucG9wKCk7W1wic3VibWl0XCIsXCJyZXNldFwiXS5pbmNsdWRlcyhuKT9udWxsIT09ZS5mb3JtJiZpKGUuZm9ybSkub2ZmKG4sbyk6aShlKS5vZmYobixvKX1kZWxldGUgZS5pbnB1dG1hc2suZXZlbnRzW25dfX19fTt0LkV2ZW50UnVsZXI9bH0sMjE5OmZ1bmN0aW9uKGUsdCxpKXt2YXIgYT1kKGkoMjM5NCkpLG49aSgyODM5KSxyPWQoaSg3MTg0KSksbz1pKDg3MTEpLHM9aSg0NzEzKTtmdW5jdGlvbiBsKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe3ZhciBpPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPWkpe3ZhciBhLG4scixvLHM9W10sbD0hMCxjPSExO3RyeXtpZihyPShpPWkuY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KGkpIT09aSlyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShhPXIuY2FsbChpKSkuZG9uZSkmJihzLnB1c2goYS52YWx1ZSkscy5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxuPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPWkucmV0dXJuJiYobz1pLnJldHVybigpLE9iamVjdChvKSE9PW8pKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgbn19cmV0dXJuIHN9fShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybjtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gYyhlLHQpO3ZhciBpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtcIk9iamVjdFwiPT09aSYmZS5jb25zdHJ1Y3RvciYmKGk9ZS5jb25zdHJ1Y3Rvci5uYW1lKTtpZihcIk1hcFwiPT09aXx8XCJTZXRcIj09PWkpcmV0dXJuIEFycmF5LmZyb20oZSk7aWYoXCJBcmd1bWVudHNcIj09PWl8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KGkpKXJldHVybiBjKGUsdCl9KGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiBjKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBpPTAsYT1uZXcgQXJyYXkodCk7aTx0O2krKylhW2ldPWVbaV07cmV0dXJuIGF9ZnVuY3Rpb24gdShlKXtyZXR1cm4gdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSx1KGUpfWZ1bmN0aW9uIGYoZSx0KXtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIGE9dFtpXTthLmVudW1lcmFibGU9YS5lbnVtZXJhYmxlfHwhMSxhLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBhJiYoYS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsKG49YS5rZXkscj12b2lkIDAscj1mdW5jdGlvbihlLHQpe2lmKFwib2JqZWN0XCIhPT11KGUpfHxudWxsPT09ZSlyZXR1cm4gZTt2YXIgaT1lW1N5bWJvbC50b1ByaW1pdGl2ZV07aWYodm9pZCAwIT09aSl7dmFyIGE9aS5jYWxsKGUsdHx8XCJkZWZhdWx0XCIpO2lmKFwib2JqZWN0XCIhPT11KGEpKXJldHVybiBhO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKX1yZXR1cm4oXCJzdHJpbmdcIj09PXQ/U3RyaW5nOk51bWJlcikoZSl9KG4sXCJzdHJpbmdcIiksXCJzeW1ib2xcIj09PXUocik/cjpTdHJpbmcocikpLGEpfXZhciBuLHJ9ZnVuY3Rpb24gZChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHA9YS5kZWZhdWx0LmRlcGVuZGVuY3lMaWIsaD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxpLGEpeyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsZSksdGhpcy5tYXNrPXQsdGhpcy5mb3JtYXQ9aSx0aGlzLm9wdHM9YSx0aGlzLl9kYXRlPW5ldyBEYXRlKDEsMCwxKSx0aGlzLmluaXREYXRlT2JqZWN0KHQsdGhpcy5vcHRzKX12YXIgdCxpLGE7cmV0dXJuIHQ9ZSwoaT1be2tleTpcImRhdGVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09dGhpcy5fZGF0ZSYmKHRoaXMuX2RhdGU9bmV3IERhdGUoMSwwLDEpLHRoaXMuaW5pdERhdGVPYmplY3Qodm9pZCAwLHRoaXMub3B0cykpLHRoaXMuX2RhdGV9fSx7a2V5OlwiaW5pdERhdGVPYmplY3RcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBpO2ZvcihQKHQpLmxhc3RJbmRleD0wO2k9UCh0KS5leGVjKHRoaXMuZm9ybWF0KTspe3ZhciBhPW5ldyBSZWdFeHAoXCJcXFxcZCskXCIpLmV4ZWMoaVswXSksbj1hP2lbMF1bMF0rXCJ4XCI6aVswXSxyPXZvaWQgMDtpZih2b2lkIDAhPT1lKXtpZihhKXt2YXIgbz1QKHQpLmxhc3RJbmRleCxzPUUoaS5pbmRleCx0KTtQKHQpLmxhc3RJbmRleD1vLHI9ZS5zbGljZSgwLGUuaW5kZXhPZihzLm5leHRNYXRjaFswXSkpfWVsc2Ugcj1lLnNsaWNlKDAsZ1tuXSYmZ1tuXVs0XXx8bi5sZW5ndGgpO2U9ZS5zbGljZShyLmxlbmd0aCl9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGcsbikmJnRoaXMuc2V0VmFsdWUodGhpcyxyLG4sZ1tuXVsyXSxnW25dWzFdKX19fSx7a2V5Olwic2V0VmFsdWVcIix2YWx1ZTpmdW5jdGlvbihlLHQsaSxhLG4pe2lmKHZvaWQgMCE9PXQmJihlW2FdPVwiYW1wbVwiPT09YT90OnQucmVwbGFjZSgvW14wLTldL2csXCIwXCIpLGVbXCJyYXdcIithXT10LnJlcGxhY2UoL1xccy9nLFwiX1wiKSksdm9pZCAwIT09bil7dmFyIHI9ZVthXTsoXCJkYXlcIj09PWEmJjI5PT09cGFyc2VJbnQocil8fFwibW9udGhcIj09PWEmJjI9PT1wYXJzZUludChyKSkmJigyOSE9PXBhcnNlSW50KGUuZGF5KXx8MiE9PXBhcnNlSW50KGUubW9udGgpfHxcIlwiIT09ZS55ZWFyJiZ2b2lkIDAhPT1lLnllYXJ8fGUuX2RhdGUuc2V0RnVsbFllYXIoMjAxMiwxLDI5KSksXCJkYXlcIj09PWEmJihtPSEwLDA9PT1wYXJzZUludChyKSYmKHI9MSkpLFwibW9udGhcIj09PWEmJihtPSEwKSxcInllYXJcIj09PWEmJihtPSEwLHIubGVuZ3RoPDQmJihyPV8ociw0LCEwKSkpLFwiXCI9PT1yfHxpc05hTihyKXx8bi5jYWxsKGUuX2RhdGUsciksXCJhbXBtXCI9PT1hJiZuLmNhbGwoZS5fZGF0ZSxyKX19fSx7a2V5OlwicmVzZXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2RhdGU9bmV3IERhdGUoMSwwLDEpfX0se2tleTpcInJlSW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fZGF0ZT12b2lkIDAsdGhpcy5kYXRlfX1dKSYmZih0LnByb3RvdHlwZSxpKSxhJiZmKHQsYSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSxlfSgpLHY9KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpLG09ITEsZz17ZDpbXCJbMS05XXxbMTJdWzAtOV18M1swMV1cIixEYXRlLnByb3RvdHlwZS5zZXREYXRlLFwiZGF5XCIsRGF0ZS5wcm90b3R5cGUuZ2V0RGF0ZV0sZGQ6W1wiMFsxLTldfFsxMl1bMC05XXwzWzAxXVwiLERhdGUucHJvdG90eXBlLnNldERhdGUsXCJkYXlcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldERhdGUuY2FsbCh0aGlzKSwyKX1dLGRkZDpbXCJcIl0sZGRkZDpbXCJcIl0sbTpbXCJbMS05XXwxWzAxMl1cIixmdW5jdGlvbihlKXt2YXIgdD1lP3BhcnNlSW50KGUpOjA7cmV0dXJuIHQ+MCYmdC0tLERhdGUucHJvdG90eXBlLnNldE1vbnRoLmNhbGwodGhpcyx0KX0sXCJtb250aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIERhdGUucHJvdG90eXBlLmdldE1vbnRoLmNhbGwodGhpcykrMX1dLG1tOltcIjBbMS05XXwxWzAxMl1cIixmdW5jdGlvbihlKXt2YXIgdD1lP3BhcnNlSW50KGUpOjA7cmV0dXJuIHQ+MCYmdC0tLERhdGUucHJvdG90eXBlLnNldE1vbnRoLmNhbGwodGhpcyx0KX0sXCJtb250aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIF8oRGF0ZS5wcm90b3R5cGUuZ2V0TW9udGguY2FsbCh0aGlzKSsxLDIpfV0sbW1tOltcIlwiXSxtbW1tOltcIlwiXSx5eTpbXCJbMC05XXsyfVwiLERhdGUucHJvdG90eXBlLnNldEZ1bGxZZWFyLFwieWVhclwiLGZ1bmN0aW9uKCl7cmV0dXJuIF8oRGF0ZS5wcm90b3R5cGUuZ2V0RnVsbFllYXIuY2FsbCh0aGlzKSwyKX1dLHl5eXk6W1wiWzAtOV17NH1cIixEYXRlLnByb3RvdHlwZS5zZXRGdWxsWWVhcixcInllYXJcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldEZ1bGxZZWFyLmNhbGwodGhpcyksNCl9XSxoOltcIlsxLTldfDFbMC0yXVwiLERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixEYXRlLnByb3RvdHlwZS5nZXRIb3Vyc10saGg6W1wiMFsxLTldfDFbMC0yXVwiLERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldEhvdXJzLmNhbGwodGhpcyksMil9XSxoeDpbZnVuY3Rpb24oZSl7cmV0dXJuXCJbMC05XXtcIi5jb25jYXQoZSxcIn1cIil9LERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixmdW5jdGlvbihlKXtyZXR1cm4gRGF0ZS5wcm90b3R5cGUuZ2V0SG91cnN9XSxIOltcIjE/WzAtOV18MlswLTNdXCIsRGF0ZS5wcm90b3R5cGUuc2V0SG91cnMsXCJob3Vyc1wiLERhdGUucHJvdG90eXBlLmdldEhvdXJzXSxISDpbXCIwWzAtOV18MVswLTldfDJbMC0zXVwiLERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldEhvdXJzLmNhbGwodGhpcyksMil9XSxIeDpbZnVuY3Rpb24oZSl7cmV0dXJuXCJbMC05XXtcIi5jb25jYXQoZSxcIn1cIil9LERhdGUucHJvdG90eXBlLnNldEhvdXJzLFwiaG91cnNcIixmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXyhEYXRlLnByb3RvdHlwZS5nZXRIb3Vycy5jYWxsKHRoaXMpLGUpfX1dLE06W1wiWzEtNV0/WzAtOV1cIixEYXRlLnByb3RvdHlwZS5zZXRNaW51dGVzLFwibWludXRlc1wiLERhdGUucHJvdG90eXBlLmdldE1pbnV0ZXNdLE1NOltcIjBbMC05XXwxWzAtOV18MlswLTldfDNbMC05XXw0WzAtOV18NVswLTldXCIsRGF0ZS5wcm90b3R5cGUuc2V0TWludXRlcyxcIm1pbnV0ZXNcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldE1pbnV0ZXMuY2FsbCh0aGlzKSwyKX1dLHM6W1wiWzEtNV0/WzAtOV1cIixEYXRlLnByb3RvdHlwZS5zZXRTZWNvbmRzLFwic2Vjb25kc1wiLERhdGUucHJvdG90eXBlLmdldFNlY29uZHNdLHNzOltcIjBbMC05XXwxWzAtOV18MlswLTldfDNbMC05XXw0WzAtOV18NVswLTldXCIsRGF0ZS5wcm90b3R5cGUuc2V0U2Vjb25kcyxcInNlY29uZHNcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldFNlY29uZHMuY2FsbCh0aGlzKSwyKX1dLGw6W1wiWzAtOV17M31cIixEYXRlLnByb3RvdHlwZS5zZXRNaWxsaXNlY29uZHMsXCJtaWxsaXNlY29uZHNcIixmdW5jdGlvbigpe3JldHVybiBfKERhdGUucHJvdG90eXBlLmdldE1pbGxpc2Vjb25kcy5jYWxsKHRoaXMpLDMpfSwzXSxMOltcIlswLTldezJ9XCIsRGF0ZS5wcm90b3R5cGUuc2V0TWlsbGlzZWNvbmRzLFwibWlsbGlzZWNvbmRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gXyhEYXRlLnByb3RvdHlwZS5nZXRNaWxsaXNlY29uZHMuY2FsbCh0aGlzKSwyKX0sMl0sdDpbXCJbYXBdXCIseSxcImFtcG1cIixiLDFdLHR0OltcIlthcF1tXCIseSxcImFtcG1cIixiLDJdLFQ6W1wiW0FQXVwiLHksXCJhbXBtXCIsYiwxXSxUVDpbXCJbQVBdTVwiLHksXCJhbXBtXCIsYiwyXSxaOltcIi4qXCIsdm9pZCAwLFwiWlwiLGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy50b1N0cmluZygpLm1hdGNoKC9cXCgoLispXFwpLylbMV07ZS5pbmNsdWRlcyhcIiBcIikmJihlPShlPWUucmVwbGFjZShcIi1cIixcIiBcIikudG9VcHBlckNhc2UoKSkuc3BsaXQoXCIgXCIpLm1hcCgoZnVuY3Rpb24oZSl7cmV0dXJuIGwoZSwxKVswXX0pKS5qb2luKFwiXCIpKTtyZXR1cm4gZX1dLG86W1wiXCJdLFM6W1wiXCJdfSxrPXtpc29EYXRlOlwieXl5eS1tbS1kZFwiLGlzb1RpbWU6XCJISDpNTTpzc1wiLGlzb0RhdGVUaW1lOlwieXl5eS1tbS1kZCdUJ0hIOk1NOnNzXCIsaXNvVXRjRGF0ZVRpbWU6XCJVVEM6eXl5eS1tbS1kZCdUJ0hIOk1NOnNzJ1onXCJ9O2Z1bmN0aW9uIHkoZSl7dmFyIHQ9dGhpcy5nZXRIb3VycygpO2UudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcInBcIik/dGhpcy5zZXRIb3Vycyh0KzEyKTplLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJhXCIpJiZ0Pj0xMiYmdGhpcy5zZXRIb3Vycyh0LTEyKX1mdW5jdGlvbiBiKCl7dmFyIGU9dGhpcy5nZXRIb3VycygpO3JldHVybihlPWV8fDEyKT49MTI/XCJQTVwiOlwiQU1cIn1mdW5jdGlvbiB4KGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcXFxcZCskXCIpLmV4ZWMoZVswXSk7aWYodCYmdm9pZCAwIT09dFswXSl7dmFyIGk9Z1tlWzBdWzBdK1wieFwiXS5zbGljZShcIlwiKTtyZXR1cm4gaVswXT1pWzBdKHRbMF0pLGlbM109aVszXSh0WzBdKSxpfWlmKGdbZVswXV0pcmV0dXJuIGdbZVswXV19ZnVuY3Rpb24gUChlKXtpZighZS50b2tlbml6ZXIpe3ZhciB0PVtdLGk9W107Zm9yKHZhciBhIGluIGcpaWYoL1xcLip4JC8udGVzdChhKSl7dmFyIG49YVswXStcIlxcXFxkK1wiOy0xPT09aS5pbmRleE9mKG4pJiZpLnB1c2gobil9ZWxzZS0xPT09dC5pbmRleE9mKGFbMF0pJiZ0LnB1c2goYVswXSk7ZS50b2tlbml6ZXI9XCIoXCIrKGkubGVuZ3RoPjA/aS5qb2luKFwifFwiKStcInxcIjpcIlwiKSt0LmpvaW4oXCIrfFwiKStcIikrP3wuXCIsZS50b2tlbml6ZXI9bmV3IFJlZ0V4cChlLnRva2VuaXplcixcImdcIil9cmV0dXJuIGUudG9rZW5pemVyfWZ1bmN0aW9uIHcoZSx0LGkpe2lmKCFtKXJldHVybiEwO2lmKHZvaWQgMD09PWUucmF3ZGF5fHwhaXNGaW5pdGUoZS5yYXdkYXkpJiZuZXcgRGF0ZShlLmRhdGUuZ2V0RnVsbFllYXIoKSxpc0Zpbml0ZShlLnJhd21vbnRoKT9lLm1vbnRoOmUuZGF0ZS5nZXRNb250aCgpKzEsMCkuZ2V0RGF0ZSgpPj1lLmRheXx8XCIyOVwiPT1lLmRheSYmKCFpc0Zpbml0ZShlLnJhd3llYXIpfHx2b2lkIDA9PT1lLnJhd3llYXJ8fFwiXCI9PT1lLnJhd3llYXIpfHxuZXcgRGF0ZShlLmRhdGUuZ2V0RnVsbFllYXIoKSxpc0Zpbml0ZShlLnJhd21vbnRoKT9lLm1vbnRoOmUuZGF0ZS5nZXRNb250aCgpKzEsMCkuZ2V0RGF0ZSgpPj1lLmRheSlyZXR1cm4gdDtpZihcIjI5XCI9PWUuZGF5KXt2YXIgYT1FKHQucG9zLGkpO2lmKFwieXl5eVwiPT09YS50YXJnZXRNYXRjaFswXSYmdC5wb3MtYS50YXJnZXRNYXRjaEluZGV4PT0yKXJldHVybiB0LnJlbW92ZT10LnBvcysxLHR9ZWxzZSBpZihcIjAyXCI9PWUubW9udGgmJlwiMzBcIj09ZS5kYXkmJnZvaWQgMCE9PXQuYylyZXR1cm4gZS5kYXk9XCIwM1wiLGUuZGF0ZS5zZXREYXRlKDMpLGUuZGF0ZS5zZXRNb250aCgxKSx0Lmluc2VydD1be3Bvczp0LnBvcyxjOlwiMFwifSx7cG9zOnQucG9zKzEsYzp0LmN9XSx0LmNhcmV0PW8uc2Vla05leHQuY2FsbCh0aGlzLHQucG9zKzEpLHQ7cmV0dXJuITF9ZnVuY3Rpb24gUyhlLHQsaSxhKXt2YXIgbixvLHM9XCJcIjtmb3IoUChpKS5sYXN0SW5kZXg9MDtuPVAoaSkuZXhlYyhlKTspe2lmKHZvaWQgMD09PXQpaWYobz14KG4pKXMrPVwiKFwiK29bMF0rXCIpXCI7ZWxzZSBzd2l0Y2goblswXSl7Y2FzZVwiW1wiOnMrPVwiKFwiO2JyZWFrO2Nhc2VcIl1cIjpzKz1cIik/XCI7YnJlYWs7ZGVmYXVsdDpzKz0oMCxyLmRlZmF1bHQpKG5bMF0pfWVsc2UgaWYobz14KG4pKWlmKCEwIT09YSYmb1szXSlzKz1vWzNdLmNhbGwodC5kYXRlKTtlbHNlIG9bMl0/cys9dFtcInJhd1wiK29bMl1dOnMrPW5bMF07ZWxzZSBzKz1uWzBdfXJldHVybiBzfWZ1bmN0aW9uIF8oZSx0LGkpe2ZvcihlPVN0cmluZyhlKSx0PXR8fDI7ZS5sZW5ndGg8dDspZT1pP2UrXCIwXCI6XCIwXCIrZTtyZXR1cm4gZX1mdW5jdGlvbiBNKGUsdCxpKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT9uZXcgaChlLHQsaSk6ZSYmXCJvYmplY3RcIj09PXUoZSkmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLFwiZGF0ZVwiKT9lOnZvaWQgMH1mdW5jdGlvbiBPKGUsdCl7cmV0dXJuIFModC5pbnB1dEZvcm1hdCx7ZGF0ZTplfSx0KX1mdW5jdGlvbiBFKGUsdCl7dmFyIGksYSxuPTAscj0wO2ZvcihQKHQpLmxhc3RJbmRleD0wO2E9UCh0KS5leGVjKHQuaW5wdXRGb3JtYXQpOyl7dmFyIG89bmV3IFJlZ0V4cChcIlxcXFxkKyRcIikuZXhlYyhhWzBdKTtpZigobis9cj1vP3BhcnNlSW50KG9bMF0pOmFbMF0ubGVuZ3RoKT49ZSsxKXtpPWEsYT1QKHQpLmV4ZWModC5pbnB1dEZvcm1hdCk7YnJlYWt9fXJldHVybnt0YXJnZXRNYXRjaEluZGV4Om4tcixuZXh0TWF0Y2g6YSx0YXJnZXRNYXRjaDppfX1hLmRlZmF1bHQuZXh0ZW5kQWxpYXNlcyh7ZGF0ZXRpbWU6e21hc2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubnVtZXJpY0lucHV0PSExLGcuUz1lLmkxOG4ub3JkaW5hbFN1ZmZpeC5qb2luKFwifFwiKSxlLmlucHV0Rm9ybWF0PWtbZS5pbnB1dEZvcm1hdF18fGUuaW5wdXRGb3JtYXQsZS5kaXNwbGF5Rm9ybWF0PWtbZS5kaXNwbGF5Rm9ybWF0XXx8ZS5kaXNwbGF5Rm9ybWF0fHxlLmlucHV0Rm9ybWF0LGUub3V0cHV0Rm9ybWF0PWtbZS5vdXRwdXRGb3JtYXRdfHxlLm91dHB1dEZvcm1hdHx8ZS5pbnB1dEZvcm1hdCxlLnBsYWNlaG9sZGVyPVwiXCIhPT1lLnBsYWNlaG9sZGVyP2UucGxhY2Vob2xkZXI6ZS5pbnB1dEZvcm1hdC5yZXBsYWNlKC9bW1xcXV0vLFwiXCIpLGUucmVnZXg9UyhlLmlucHV0Rm9ybWF0LHZvaWQgMCxlKSxlLm1pbj1NKGUubWluLGUuaW5wdXRGb3JtYXQsZSksZS5tYXg9TShlLm1heCxlLmlucHV0Rm9ybWF0LGUpLG51bGx9LHBsYWNlaG9sZGVyOlwiXCIsaW5wdXRGb3JtYXQ6XCJpc29EYXRlVGltZVwiLGRpc3BsYXlGb3JtYXQ6bnVsbCxvdXRwdXRGb3JtYXQ6bnVsbCxtaW46bnVsbCxtYXg6bnVsbCxza2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyOlwiXCIsaTE4bjp7ZGF5TmFtZXM6W1wiTW9uXCIsXCJUdWVcIixcIldlZFwiLFwiVGh1XCIsXCJGcmlcIixcIlNhdFwiLFwiU3VuXCIsXCJNb25kYXlcIixcIlR1ZXNkYXlcIixcIldlZG5lc2RheVwiLFwiVGh1cnNkYXlcIixcIkZyaWRheVwiLFwiU2F0dXJkYXlcIixcIlN1bmRheVwiXSxtb250aE5hbWVzOltcIkphblwiLFwiRmViXCIsXCJNYXJcIixcIkFwclwiLFwiTWF5XCIsXCJKdW5cIixcIkp1bFwiLFwiQXVnXCIsXCJTZXBcIixcIk9jdFwiLFwiTm92XCIsXCJEZWNcIixcIkphbnVhcnlcIixcIkZlYnJ1YXJ5XCIsXCJNYXJjaFwiLFwiQXByaWxcIixcIk1heVwiLFwiSnVuZVwiLFwiSnVseVwiLFwiQXVndXN0XCIsXCJTZXB0ZW1iZXJcIixcIk9jdG9iZXJcIixcIk5vdmVtYmVyXCIsXCJEZWNlbWJlclwiXSxvcmRpbmFsU3VmZml4OltcInN0XCIsXCJuZFwiLFwicmRcIixcInRoXCJdfSxwcmVWYWxpZGF0aW9uOmZ1bmN0aW9uKGUsdCxpLGEsbixyLG8scyl7aWYocylyZXR1cm4hMDtpZihpc05hTihpKSYmZVt0XSE9PWkpe3ZhciBsPUUodCxuKTtpZihsLm5leHRNYXRjaCYmbC5uZXh0TWF0Y2hbMF09PT1pJiZsLnRhcmdldE1hdGNoWzBdLmxlbmd0aD4xKXt2YXIgYz1nW2wudGFyZ2V0TWF0Y2hbMF1dWzBdO2lmKG5ldyBSZWdFeHAoYykudGVzdChcIjBcIitlW3QtMV0pKXJldHVybiBlW3RdPWVbdC0xXSxlW3QtMV09XCIwXCIse2Z1enp5OiEwLGJ1ZmZlcjplLHJlZnJlc2hGcm9tQnVmZmVyOntzdGFydDp0LTEsZW5kOnQrMX0scG9zOnQrMX19fXJldHVybiEwfSxwb3N0VmFsaWRhdGlvbjpmdW5jdGlvbihlLHQsaSxhLG4scixvLGwpe3ZhciBjLHU7aWYobylyZXR1cm4hMDtpZighMT09PWEmJigoKGM9RSh0KzEsbikpLnRhcmdldE1hdGNoJiZjLnRhcmdldE1hdGNoSW5kZXg9PT10JiZjLnRhcmdldE1hdGNoWzBdLmxlbmd0aD4xJiZ2b2lkIDAhPT1nW2MudGFyZ2V0TWF0Y2hbMF1dfHwoYz1FKHQrMixuKSkudGFyZ2V0TWF0Y2gmJmMudGFyZ2V0TWF0Y2hJbmRleD09PXQrMSYmYy50YXJnZXRNYXRjaFswXS5sZW5ndGg+MSYmdm9pZCAwIT09Z1tjLnRhcmdldE1hdGNoWzBdXSkmJih1PWdbYy50YXJnZXRNYXRjaFswXV1bMF0pLHZvaWQgMCE9PXUmJih2b2lkIDAhPT1yLnZhbGlkUG9zaXRpb25zW3QrMV0mJm5ldyBSZWdFeHAodSkudGVzdChpK1wiMFwiKT8oZVt0XT1pLGVbdCsxXT1cIjBcIixhPXtwb3M6dCsyLGNhcmV0OnR9KTpuZXcgUmVnRXhwKHUpLnRlc3QoXCIwXCIraSkmJihlW3RdPVwiMFwiLGVbdCsxXT1pLGE9e3Bvczp0KzJ9KSksITE9PT1hKSlyZXR1cm4gYTtpZihhLmZ1enp5JiYoZT1hLmJ1ZmZlcix0PWEucG9zKSwoYz1FKHQsbikpLnRhcmdldE1hdGNoJiZjLnRhcmdldE1hdGNoWzBdJiZ2b2lkIDAhPT1nW2MudGFyZ2V0TWF0Y2hbMF1dKXt2YXIgZj1nW2MudGFyZ2V0TWF0Y2hbMF1dO3U9ZlswXTt2YXIgZD1lLnNsaWNlKGMudGFyZ2V0TWF0Y2hJbmRleCxjLnRhcmdldE1hdGNoSW5kZXgrYy50YXJnZXRNYXRjaFswXS5sZW5ndGgpO2lmKCExPT09bmV3IFJlZ0V4cCh1KS50ZXN0KGQuam9pbihcIlwiKSkmJjI9PT1jLnRhcmdldE1hdGNoWzBdLmxlbmd0aCYmci52YWxpZFBvc2l0aW9uc1tjLnRhcmdldE1hdGNoSW5kZXhdJiZyLnZhbGlkUG9zaXRpb25zW2MudGFyZ2V0TWF0Y2hJbmRleCsxXSYmKHIudmFsaWRQb3NpdGlvbnNbYy50YXJnZXRNYXRjaEluZGV4KzFdLmlucHV0PVwiMFwiKSxcInllYXJcIj09ZlsyXSlmb3IodmFyIHA9cy5nZXRNYXNrVGVtcGxhdGUuY2FsbCh0aGlzLCExLDEsdm9pZCAwLCEwKSxoPXQrMTtoPGUubGVuZ3RoO2grKyllW2hdPXBbaF0sZGVsZXRlIHIudmFsaWRQb3NpdGlvbnNbaF19dmFyIG09YSxrPU0oZS5qb2luKFwiXCIpLG4uaW5wdXRGb3JtYXQsbik7cmV0dXJuIG0mJiFpc05hTihrLmRhdGUuZ2V0VGltZSgpKSYmKG4ucHJlZmlsbFllYXImJihtPWZ1bmN0aW9uKGUsdCxpKXtpZihlLnllYXIhPT1lLnJhd3llYXIpe3ZhciBhPXYudG9TdHJpbmcoKSxuPWUucmF3eWVhci5yZXBsYWNlKC9bXjAtOV0vZyxcIlwiKSxyPWEuc2xpY2UoMCxuLmxlbmd0aCksbz1hLnNsaWNlKG4ubGVuZ3RoKTtpZigyPT09bi5sZW5ndGgmJm49PT1yKXt2YXIgcz1uZXcgRGF0ZSh2LGUubW9udGgtMSxlLmRheSk7ZS5kYXk9PXMuZ2V0RGF0ZSgpJiYoIWkubWF4fHxpLm1heC5kYXRlLmdldFRpbWUoKT49cy5nZXRUaW1lKCkpJiYoZS5kYXRlLnNldEZ1bGxZZWFyKHYpLGUueWVhcj1hLHQuaW5zZXJ0PVt7cG9zOnQucG9zKzEsYzpvWzBdfSx7cG9zOnQucG9zKzIsYzpvWzFdfV0pfX1yZXR1cm4gdH0oayxtLG4pKSxtPWZ1bmN0aW9uKGUsdCxpLGEsbil7aWYoIXQpcmV0dXJuIHQ7aWYodCYmaS5taW4mJiFpc05hTihpLm1pbi5kYXRlLmdldFRpbWUoKSkpe3ZhciByO2ZvcihlLnJlc2V0KCksUChpKS5sYXN0SW5kZXg9MDtyPVAoaSkuZXhlYyhpLmlucHV0Rm9ybWF0KTspe3ZhciBvO2lmKChvPXgocikpJiZvWzNdKXtmb3IodmFyIHM9b1sxXSxsPWVbb1syXV0sYz1pLm1pbltvWzJdXSx1PWkubWF4P2kubWF4W29bMl1dOmMsZj1bXSxkPSExLHA9MDtwPGMubGVuZ3RoO3ArKyl2b2lkIDAhPT1hLnZhbGlkUG9zaXRpb25zW3Arci5pbmRleF18fGQ/KGZbcF09bFtwXSxkPWR8fGxbcF0+Y1twXSk6KGZbcF09Y1twXSxcInllYXJcIj09PW9bMl0mJmwubGVuZ3RoLTE9PXAmJmMhPXUmJihmPShwYXJzZUludChmLmpvaW4oXCJcIikpKzEpLnRvU3RyaW5nKCkuc3BsaXQoXCJcIikpLFwiYW1wbVwiPT09b1syXSYmYyE9dSYmaS5taW4uZGF0ZS5nZXRUaW1lKCk+ZS5kYXRlLmdldFRpbWUoKSYmKGZbcF09dVtwXSkpO3MuY2FsbChlLl9kYXRlLGYuam9pbihcIlwiKSl9fXQ9aS5taW4uZGF0ZS5nZXRUaW1lKCk8PWUuZGF0ZS5nZXRUaW1lKCksZS5yZUluaXQoKX1yZXR1cm4gdCYmaS5tYXgmJihpc05hTihpLm1heC5kYXRlLmdldFRpbWUoKSl8fCh0PWkubWF4LmRhdGUuZ2V0VGltZSgpPj1lLmRhdGUuZ2V0VGltZSgpKSksdH0oayxtPXcuY2FsbCh0aGlzLGssbSxuKSxuLHIpKSx2b2lkIDAhPT10JiZtJiZhLnBvcyE9PXQ/e2J1ZmZlcjpTKG4uaW5wdXRGb3JtYXQsayxuKS5zcGxpdChcIlwiKSxyZWZyZXNoRnJvbUJ1ZmZlcjp7c3RhcnQ6dCxlbmQ6YS5wb3N9LHBvczphLmNhcmV0fHxhLnBvc306bX0sb25LZXlEb3duOmZ1bmN0aW9uKGUsdCxpLGEpe2UuY3RybEtleSYmZS5rZXk9PT1uLmtleXMuQXJyb3dSaWdodCYmKHRoaXMuaW5wdXRtYXNrLl92YWx1ZVNldChPKG5ldyBEYXRlLGEpKSxwKHRoaXMpLnRyaWdnZXIoXCJzZXR2YWx1ZVwiKSl9LG9uVW5NYXNrOmZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gdD9TKGkub3V0cHV0Rm9ybWF0LE0oZSxpLmlucHV0Rm9ybWF0LGkpLGksITApOnR9LGNhc2luZzpmdW5jdGlvbihlLHQsaSxhKXtyZXR1cm4gMD09dC5uYXRpdmVEZWYuaW5kZXhPZihcIlthcF1cIik/ZS50b0xvd2VyQ2FzZSgpOjA9PXQubmF0aXZlRGVmLmluZGV4T2YoXCJbQVBdXCIpP2UudG9VcHBlckNhc2UoKTplfSxvbkJlZm9yZU1hc2s6ZnVuY3Rpb24oZSx0KXtyZXR1cm5cIltvYmplY3QgRGF0ZV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSYmKGU9TyhlLHQpKSxlfSxpbnNlcnRNb2RlOiExLGluc2VydE1vZGVWaXN1YWw6ITEsc2hpZnRQb3NpdGlvbnM6ITEsa2VlcFN0YXRpYzohMSxpbnB1dG1vZGU6XCJudW1lcmljXCIscHJlZmlsbFllYXI6ITB9fSl9LDM4NTE6ZnVuY3Rpb24oZSx0LGkpe3ZhciBhLG49KGE9aSgyMzk0KSkmJmEuX19lc01vZHVsZT9hOntkZWZhdWx0OmF9LHI9aSg4NzExKSxvPWkoNDcxMyk7bi5kZWZhdWx0LmV4dGVuZERlZmluaXRpb25zKHtBOnt2YWxpZGF0b3I6XCJbQS1aYS16XFx1MDQxMC1cXHUwNDRmXFx1MDQwMVxcdTA0NTFcXHhjMC1cXHhmZlxceGI1XVwiLGNhc2luZzpcInVwcGVyXCJ9LFwiJlwiOnt2YWxpZGF0b3I6XCJbMC05QS1aYS16XFx1MDQxMC1cXHUwNDRmXFx1MDQwMVxcdTA0NTFcXHhjMC1cXHhmZlxceGI1XVwiLGNhc2luZzpcInVwcGVyXCJ9LFwiI1wiOnt2YWxpZGF0b3I6XCJbMC05QS1GYS1mXVwiLGNhc2luZzpcInVwcGVyXCJ9fSk7dmFyIHM9bmV3IFJlZ0V4cChcIjI1WzAtNV18MlswLTRdWzAtOV18WzAxXVswLTldWzAtOV1cIik7ZnVuY3Rpb24gbChlLHQsaSxhLG4pe3JldHVybiBpLTE+LTEmJlwiLlwiIT09dC5idWZmZXJbaS0xXT8oZT10LmJ1ZmZlcltpLTFdK2UsZT1pLTI+LTEmJlwiLlwiIT09dC5idWZmZXJbaS0yXT90LmJ1ZmZlcltpLTJdK2U6XCIwXCIrZSk6ZT1cIjAwXCIrZSxzLnRlc3QoZSl9bi5kZWZhdWx0LmV4dGVuZEFsaWFzZXMoe2Nzc3VuaXQ6e3JlZ2V4OlwiWystXT9bMC05XStcXFxcLj8oWzAtOV0rKT8ocHh8ZW18cmVtfGV4fCV8aW58Y218bW18cHR8cGMpXCJ9LHVybDp7cmVnZXg6XCIoaHR0cHM/fGZ0cCk6Ly8uKlwiLGF1dG9Vbm1hc2s6ITEsa2VlcFN0YXRpYzohMSx0YWJUaHJvdWdoOiEwfSxpcDp7bWFzazpcIml7MSwzfS5qezEsM30ua3sxLDN9Lmx7MSwzfVwiLGRlZmluaXRpb25zOntpOnt2YWxpZGF0b3I6bH0sajp7dmFsaWRhdG9yOmx9LGs6e3ZhbGlkYXRvcjpsfSxsOnt2YWxpZGF0b3I6bH19LG9uVW5NYXNrOmZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gZX0saW5wdXRtb2RlOlwiZGVjaW1hbFwiLHN1YnN0aXR1dGVzOntcIixcIjpcIi5cIn19LGVtYWlsOnttYXNrOmZ1bmN0aW9uKGUpe3ZhciB0PWUuc2VwYXJhdG9yLGk9ZS5xdWFudGlmaWVyLGE9XCIqezEsNjR9Wy4qezEsNjR9XVsuKnsxLDY0fV1bLip7MSw2M31dQC17MSw2M30uLXsxLDYzfVsuLXsxLDYzfV1bLi17MSw2M31dXCIsbj1hO2lmKHQpZm9yKHZhciByPTA7cjxpO3IrKyluKz1cIltcIi5jb25jYXQodCkuY29uY2F0KGEsXCJdXCIpO3JldHVybiBufSxncmVlZHk6ITEsY2FzaW5nOlwibG93ZXJcIixzZXBhcmF0b3I6bnVsbCxxdWFudGlmaWVyOjUsc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlcjpcIlwiLG9uQmVmb3JlUGFzdGU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4oZT1lLnRvTG93ZXJDYXNlKCkpLnJlcGxhY2UoXCJtYWlsdG86XCIsXCJcIil9LGRlZmluaXRpb25zOntcIipcIjp7dmFsaWRhdG9yOlwiWzAtOVxcdWZmMTEtXFx1ZmYxOUEtWmEtelxcdTA0MTAtXFx1MDQ0ZlxcdTA0MDFcXHUwNDUxXFx4YzAtXFx4ZmZcXHhiNSEjJCUmJyorLz0/Xl9ge3x9fi1dXCJ9LFwiLVwiOnt2YWxpZGF0b3I6XCJbMC05QS1aYS16LV1cIn19LG9uVW5NYXNrOmZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gZX0saW5wdXRtb2RlOlwiZW1haWxcIn0sbWFjOnttYXNrOlwiIyM6IyM6IyM6IyM6IyM6IyNcIn0sdmluOnttYXNrOlwiVnsxM305ezR9XCIsZGVmaW5pdGlvbnM6e1Y6e3ZhbGlkYXRvcjpcIltBLUhKLU5QUi1aYS1oai1ucHItelxcXFxkXVwiLGNhc2luZzpcInVwcGVyXCJ9fSxjbGVhckluY29tcGxldGU6ITAsYXV0b1VubWFzazohMH0sc3NuOnttYXNrOlwiOTk5LTk5LTk5OTlcIixwb3N0VmFsaWRhdGlvbjpmdW5jdGlvbihlLHQsaSxhLG4scyxsKXt2YXIgYz1vLmdldE1hc2tUZW1wbGF0ZS5jYWxsKHRoaXMsITAsci5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHRoaXMpLCEwLCEwKTtyZXR1cm4vXig/ITIxOS0wOS05OTk5fDA3OC0wNS0xMTIwKSg/ITY2NnwwMDB8OS57Mn0pLnszfS0oPyEwMCkuezJ9LSg/ITB7NH0pLns0fSQvLnRlc3QoYy5qb2luKFwiXCIpKX19fSl9LDIwNzpmdW5jdGlvbihlLHQsaSl7dmFyIGE9cyhpKDIzOTQpKSxuPXMoaSg3MTg0KSkscj1pKDg3MTEpLG89aSgyODM5KTtmdW5jdGlvbiBzKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgbD1hLmRlZmF1bHQuZGVwZW5kZW5jeUxpYjtmdW5jdGlvbiBjKGUsdCl7Zm9yKHZhciBpPVwiXCIsbj0wO248ZS5sZW5ndGg7bisrKWEuZGVmYXVsdC5wcm90b3R5cGUuZGVmaW5pdGlvbnNbZS5jaGFyQXQobildfHx0LmRlZmluaXRpb25zW2UuY2hhckF0KG4pXXx8dC5vcHRpb25hbG1hcmtlclswXT09PWUuY2hhckF0KG4pfHx0Lm9wdGlvbmFsbWFya2VyWzFdPT09ZS5jaGFyQXQobil8fHQucXVhbnRpZmllcm1hcmtlclswXT09PWUuY2hhckF0KG4pfHx0LnF1YW50aWZpZXJtYXJrZXJbMV09PT1lLmNoYXJBdChuKXx8dC5ncm91cG1hcmtlclswXT09PWUuY2hhckF0KG4pfHx0Lmdyb3VwbWFya2VyWzFdPT09ZS5jaGFyQXQobil8fHQuYWx0ZXJuYXRvcm1hcmtlcj09PWUuY2hhckF0KG4pP2krPVwiXFxcXFwiK2UuY2hhckF0KG4pOmkrPWUuY2hhckF0KG4pO3JldHVybiBpfWZ1bmN0aW9uIHUoZSx0LGksYSl7aWYoZS5sZW5ndGg+MCYmdD4wJiYoIWkuZGlnaXRzT3B0aW9uYWx8fGEpKXt2YXIgbj1lLmluZGV4T2YoaS5yYWRpeFBvaW50KSxyPSExO2kubmVnYXRpb25TeW1ib2wuYmFjaz09PWVbZS5sZW5ndGgtMV0mJihyPSEwLGUubGVuZ3RoLS0pLC0xPT09biYmKGUucHVzaChpLnJhZGl4UG9pbnQpLG49ZS5sZW5ndGgtMSk7Zm9yKHZhciBvPTE7bzw9dDtvKyspaXNGaW5pdGUoZVtuK29dKXx8KGVbbitvXT1cIjBcIil9cmV0dXJuIHImJmUucHVzaChpLm5lZ2F0aW9uU3ltYm9sLmJhY2spLGV9ZnVuY3Rpb24gZihlLHQpe3ZhciBpPTA7Zm9yKHZhciBhIGluXCIrXCI9PT1lJiYoaT1yLnNlZWtOZXh0LmNhbGwodGhpcyx0LnZhbGlkUG9zaXRpb25zLmxlbmd0aC0xKSksdC50ZXN0cylpZigoYT1wYXJzZUludChhKSk+PWkpZm9yKHZhciBuPTAsbz10LnRlc3RzW2FdLmxlbmd0aDtuPG87bisrKWlmKCh2b2lkIDA9PT10LnZhbGlkUG9zaXRpb25zW2FdfHxcIi1cIj09PWUpJiZ0LnRlc3RzW2FdW25dLm1hdGNoLmRlZj09PWUpcmV0dXJuIGErKHZvaWQgMCE9PXQudmFsaWRQb3NpdGlvbnNbYV0mJlwiLVwiIT09ZT8xOjApO3JldHVybiBpfWZ1bmN0aW9uIGQoZSx0KXtmb3IodmFyIGk9LTEsYT0wLG49dC52YWxpZFBvc2l0aW9ucy5sZW5ndGg7YTxuO2ErKyl7dmFyIHI9dC52YWxpZFBvc2l0aW9uc1thXTtpZihyJiZyLm1hdGNoLmRlZj09PWUpe2k9YTticmVha319cmV0dXJuIGl9ZnVuY3Rpb24gcChlLHQsaSxhLG4pe3ZhciByPXQuYnVmZmVyP3QuYnVmZmVyLmluZGV4T2Yobi5yYWRpeFBvaW50KTotMSxvPSgtMSE9PXJ8fGEmJm4uaml0TWFza2luZykmJm5ldyBSZWdFeHAobi5kZWZpbml0aW9uc1s5XS52YWxpZGF0b3IpLnRlc3QoZSk7cmV0dXJuIG4uX3JhZGl4RGFuY2UmJi0xIT09ciYmbyYmbnVsbD09dC52YWxpZFBvc2l0aW9uc1tyXT97aW5zZXJ0Ontwb3M6cj09PWk/cisxOnIsYzpuLnJhZGl4UG9pbnR9LHBvczppfTpvfWEuZGVmYXVsdC5leHRlbmRBbGlhc2VzKHtudW1lcmljOnttYXNrOmZ1bmN0aW9uKGUpe2UucmVwZWF0PTAsZS5ncm91cFNlcGFyYXRvcj09PWUucmFkaXhQb2ludCYmZS5kaWdpdHMmJlwiMFwiIT09ZS5kaWdpdHMmJihcIi5cIj09PWUucmFkaXhQb2ludD9lLmdyb3VwU2VwYXJhdG9yPVwiLFwiOlwiLFwiPT09ZS5yYWRpeFBvaW50P2UuZ3JvdXBTZXBhcmF0b3I9XCIuXCI6ZS5ncm91cFNlcGFyYXRvcj1cIlwiKSxcIiBcIj09PWUuZ3JvdXBTZXBhcmF0b3ImJihlLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI9dm9pZCAwKSxlLnBsYWNlaG9sZGVyLmxlbmd0aD4xJiYoZS5wbGFjZWhvbGRlcj1lLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSksXCJyYWRpeEZvY3VzXCI9PT1lLnBvc2l0aW9uQ2FyZXRPbkNsaWNrJiZcIlwiPT09ZS5wbGFjZWhvbGRlciYmKGUucG9zaXRpb25DYXJldE9uQ2xpY2s9XCJsdnBcIik7dmFyIHQ9XCIwXCIsaT1lLnJhZGl4UG9pbnQ7ITA9PT1lLm51bWVyaWNJbnB1dCYmdm9pZCAwPT09ZS5fX2ZpbmFuY2VJbnB1dD8odD1cIjFcIixlLnBvc2l0aW9uQ2FyZXRPbkNsaWNrPVwicmFkaXhGb2N1c1wiPT09ZS5wb3NpdGlvbkNhcmV0T25DbGljaz9cImx2cFwiOmUucG9zaXRpb25DYXJldE9uQ2xpY2ssZS5kaWdpdHNPcHRpb25hbD0hMSxpc05hTihlLmRpZ2l0cykmJihlLmRpZ2l0cz0yKSxlLl9yYWRpeERhbmNlPSExLGk9XCIsXCI9PT1lLnJhZGl4UG9pbnQ/XCI/XCI6XCIhXCIsXCJcIiE9PWUucmFkaXhQb2ludCYmdm9pZCAwPT09ZS5kZWZpbml0aW9uc1tpXSYmKGUuZGVmaW5pdGlvbnNbaV09e30sZS5kZWZpbml0aW9uc1tpXS52YWxpZGF0b3I9XCJbXCIrZS5yYWRpeFBvaW50K1wiXVwiLGUuZGVmaW5pdGlvbnNbaV0ucGxhY2Vob2xkZXI9ZS5yYWRpeFBvaW50LGUuZGVmaW5pdGlvbnNbaV0uc3RhdGljPSEwLGUuZGVmaW5pdGlvbnNbaV0uZ2VuZXJhdGVkPSEwKSk6KGUuX19maW5hbmNlSW5wdXQ9ITEsZS5udW1lcmljSW5wdXQ9ITApO3ZhciBhLHI9XCJbK11cIjtpZihyKz1jKGUucHJlZml4LGUpLFwiXCIhPT1lLmdyb3VwU2VwYXJhdG9yPyh2b2lkIDA9PT1lLmRlZmluaXRpb25zW2UuZ3JvdXBTZXBhcmF0b3JdJiYoZS5kZWZpbml0aW9uc1tlLmdyb3VwU2VwYXJhdG9yXT17fSxlLmRlZmluaXRpb25zW2UuZ3JvdXBTZXBhcmF0b3JdLnZhbGlkYXRvcj1cIltcIitlLmdyb3VwU2VwYXJhdG9yK1wiXVwiLGUuZGVmaW5pdGlvbnNbZS5ncm91cFNlcGFyYXRvcl0ucGxhY2Vob2xkZXI9ZS5ncm91cFNlcGFyYXRvcixlLmRlZmluaXRpb25zW2UuZ3JvdXBTZXBhcmF0b3JdLnN0YXRpYz0hMCxlLmRlZmluaXRpb25zW2UuZ3JvdXBTZXBhcmF0b3JdLmdlbmVyYXRlZD0hMCkscis9ZS5fbWFzayhlKSk6cis9XCI5eyt9XCIsdm9pZCAwIT09ZS5kaWdpdHMmJjAhPT1lLmRpZ2l0cyl7dmFyIG89ZS5kaWdpdHMudG9TdHJpbmcoKS5zcGxpdChcIixcIik7aXNGaW5pdGUob1swXSkmJm9bMV0mJmlzRmluaXRlKG9bMV0pP3IrPWkrdCtcIntcIitlLmRpZ2l0cytcIn1cIjooaXNOYU4oZS5kaWdpdHMpfHxwYXJzZUludChlLmRpZ2l0cyk+MCkmJihlLmRpZ2l0c09wdGlvbmFsfHxlLmppdE1hc2tpbmc/KGE9citpK3QrXCJ7MCxcIitlLmRpZ2l0cytcIn1cIixlLmtlZXBTdGF0aWM9ITApOnIrPWkrdCtcIntcIitlLmRpZ2l0cytcIn1cIil9ZWxzZSBlLmlucHV0bW9kZT1cIm51bWVyaWNcIjtyZXR1cm4gcis9YyhlLnN1ZmZpeCxlKSxyKz1cIlstXVwiLGEmJihyPVthK2MoZS5zdWZmaXgsZSkrXCJbLV1cIixyXSksZS5ncmVlZHk9ITEsZnVuY3Rpb24oZSl7dm9pZCAwPT09ZS5wYXJzZU1pbk1heE9wdGlvbnMmJihudWxsIT09ZS5taW4mJihlLm1pbj1lLm1pbi50b1N0cmluZygpLnJlcGxhY2UobmV3IFJlZ0V4cCgoMCxuLmRlZmF1bHQpKGUuZ3JvdXBTZXBhcmF0b3IpLFwiZ1wiKSxcIlwiKSxcIixcIj09PWUucmFkaXhQb2ludCYmKGUubWluPWUubWluLnJlcGxhY2UoZS5yYWRpeFBvaW50LFwiLlwiKSksZS5taW49aXNGaW5pdGUoZS5taW4pP3BhcnNlRmxvYXQoZS5taW4pOk5hTixpc05hTihlLm1pbikmJihlLm1pbj1OdW1iZXIuTUlOX1ZBTFVFKSksbnVsbCE9PWUubWF4JiYoZS5tYXg9ZS5tYXgudG9TdHJpbmcoKS5yZXBsYWNlKG5ldyBSZWdFeHAoKDAsbi5kZWZhdWx0KShlLmdyb3VwU2VwYXJhdG9yKSxcImdcIiksXCJcIiksXCIsXCI9PT1lLnJhZGl4UG9pbnQmJihlLm1heD1lLm1heC5yZXBsYWNlKGUucmFkaXhQb2ludCxcIi5cIikpLGUubWF4PWlzRmluaXRlKGUubWF4KT9wYXJzZUZsb2F0KGUubWF4KTpOYU4saXNOYU4oZS5tYXgpJiYoZS5tYXg9TnVtYmVyLk1BWF9WQUxVRSkpLGUucGFyc2VNaW5NYXhPcHRpb25zPVwiZG9uZVwiKX0oZSksXCJcIiE9PWUucmFkaXhQb2ludCYmZS5zdWJzdGl0dXRlUmFkaXhQb2ludCYmKGUuc3Vic3RpdHV0ZXNbXCIuXCI9PWUucmFkaXhQb2ludD9cIixcIjpcIi5cIl09ZS5yYWRpeFBvaW50KSxyfSxfbWFzazpmdW5jdGlvbihlKXtyZXR1cm5cIihcIitlLmdyb3VwU2VwYXJhdG9yK1wiOTk5KXsrfDF9XCJ9LGRpZ2l0czpcIipcIixkaWdpdHNPcHRpb25hbDohMCxlbmZvcmNlRGlnaXRzT25CbHVyOiExLHJhZGl4UG9pbnQ6XCIuXCIscG9zaXRpb25DYXJldE9uQ2xpY2s6XCJyYWRpeEZvY3VzXCIsX3JhZGl4RGFuY2U6ITAsZ3JvdXBTZXBhcmF0b3I6XCJcIixhbGxvd01pbnVzOiEwLG5lZ2F0aW9uU3ltYm9sOntmcm9udDpcIi1cIixiYWNrOlwiXCJ9LHByZWZpeDpcIlwiLHN1ZmZpeDpcIlwiLG1pbjpudWxsLG1heDpudWxsLFNldE1heE9uT3ZlcmZsb3c6ITEsc3RlcDoxLGlucHV0VHlwZTpcInRleHRcIix1bm1hc2tBc051bWJlcjohMSxyb3VuZGluZ0ZOOk1hdGgucm91bmQsaW5wdXRtb2RlOlwiZGVjaW1hbFwiLHNob3J0Y3V0czp7azpcIjEwMDBcIixtOlwiMTAwMDAwMFwifSxwbGFjZWhvbGRlcjpcIjBcIixncmVlZHk6ITEscmlnaHRBbGlnbjohMCxpbnNlcnRNb2RlOiEwLGF1dG9Vbm1hc2s6ITEsc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlcjpcIlwiLHVzZVByb3RvdHlwZURlZmluaXRpb25zOiExLHN0cmlwTGVhZGluZ1plcm9lczohMCxzdWJzdGl0dXRlUmFkaXhQb2ludDohMCxkZWZpbml0aW9uczp7MDp7dmFsaWRhdG9yOnB9LDE6e3ZhbGlkYXRvcjpwLGRlZmluaXRpb25TeW1ib2w6XCI5XCJ9LDk6e3ZhbGlkYXRvcjpcIlswLTlcXHVmZjEwLVxcdWZmMTlcXHUwNjYwLVxcdTA2NjlcXHUwNmYwLVxcdTA2ZjldXCIsZGVmaW5pdGlvblN5bWJvbDpcIipcIn0sXCIrXCI6e3ZhbGlkYXRvcjpmdW5jdGlvbihlLHQsaSxhLG4pe3JldHVybiBuLmFsbG93TWludXMmJihcIi1cIj09PWV8fGU9PT1uLm5lZ2F0aW9uU3ltYm9sLmZyb250KX19LFwiLVwiOnt2YWxpZGF0b3I6ZnVuY3Rpb24oZSx0LGksYSxuKXtyZXR1cm4gbi5hbGxvd01pbnVzJiZlPT09bi5uZWdhdGlvblN5bWJvbC5iYWNrfX19LHByZVZhbGlkYXRpb246ZnVuY3Rpb24oZSx0LGksYSxuLHIsbyxzKXtpZighMSE9PW4uX19maW5hbmNlSW5wdXQmJmk9PT1uLnJhZGl4UG9pbnQpcmV0dXJuITE7dmFyIGw9ZS5pbmRleE9mKG4ucmFkaXhQb2ludCksYz10O2lmKHQ9ZnVuY3Rpb24oZSx0LGksYSxuKXtyZXR1cm4gbi5fcmFkaXhEYW5jZSYmbi5udW1lcmljSW5wdXQmJnQhPT1uLm5lZ2F0aW9uU3ltYm9sLmJhY2smJmU8PWkmJihpPjB8fHQ9PW4ucmFkaXhQb2ludCkmJih2b2lkIDA9PT1hLnZhbGlkUG9zaXRpb25zW2UtMV18fGEudmFsaWRQb3NpdGlvbnNbZS0xXS5pbnB1dCE9PW4ubmVnYXRpb25TeW1ib2wuYmFjaykmJihlLT0xKSxlfSh0LGksbCxyLG4pLFwiLVwiPT09aXx8aT09PW4ubmVnYXRpb25TeW1ib2wuZnJvbnQpe2lmKCEwIT09bi5hbGxvd01pbnVzKXJldHVybiExO3ZhciB1PSExLHA9ZChcIitcIixyKSxoPWQoXCItXCIscik7cmV0dXJuLTEhPT1wJiYodT1bcCxoXSksITEhPT11P3tyZW1vdmU6dSxjYXJldDpjLW4ubmVnYXRpb25TeW1ib2wuYmFjay5sZW5ndGh9OntpbnNlcnQ6W3twb3M6Zi5jYWxsKHRoaXMsXCIrXCIsciksYzpuLm5lZ2F0aW9uU3ltYm9sLmZyb250LGZyb21Jc1ZhbGlkOiEwfSx7cG9zOmYuY2FsbCh0aGlzLFwiLVwiLHIpLGM6bi5uZWdhdGlvblN5bWJvbC5iYWNrLGZyb21Jc1ZhbGlkOnZvaWQgMH1dLGNhcmV0OmMrbi5uZWdhdGlvblN5bWJvbC5iYWNrLmxlbmd0aH19aWYoaT09PW4uZ3JvdXBTZXBhcmF0b3IpcmV0dXJue2NhcmV0OmN9O2lmKHMpcmV0dXJuITA7aWYoLTEhPT1sJiYhMD09PW4uX3JhZGl4RGFuY2UmJiExPT09YSYmaT09PW4ucmFkaXhQb2ludCYmdm9pZCAwIT09bi5kaWdpdHMmJihpc05hTihuLmRpZ2l0cyl8fHBhcnNlSW50KG4uZGlnaXRzKT4wKSYmbCE9PXQpcmV0dXJue2NhcmV0Om4uX3JhZGl4RGFuY2UmJnQ9PT1sLTE/bCsxOmx9O2lmKCExPT09bi5fX2ZpbmFuY2VJbnB1dClpZihhKXtpZihuLmRpZ2l0c09wdGlvbmFsKXJldHVybntyZXdyaXRlUG9zaXRpb246by5lbmR9O2lmKCFuLmRpZ2l0c09wdGlvbmFsKXtpZihvLmJlZ2luPmwmJm8uZW5kPD1sKXJldHVybiBpPT09bi5yYWRpeFBvaW50P3tpbnNlcnQ6e3BvczpsKzEsYzpcIjBcIixmcm9tSXNWYWxpZDohMH0scmV3cml0ZVBvc2l0aW9uOmx9OntyZXdyaXRlUG9zaXRpb246bCsxfTtpZihvLmJlZ2luPGwpcmV0dXJue3Jld3JpdGVQb3NpdGlvbjpvLmJlZ2luLTF9fX1lbHNlIGlmKCFuLnNob3dNYXNrT25Ib3ZlciYmIW4uc2hvd01hc2tPbkZvY3VzJiYhbi5kaWdpdHNPcHRpb25hbCYmbi5kaWdpdHM+MCYmXCJcIj09PXRoaXMuX192YWx1ZUdldC5jYWxsKHRoaXMuZWwpKXJldHVybntyZXdyaXRlUG9zaXRpb246bH07cmV0dXJue3Jld3JpdGVQb3NpdGlvbjp0fX0scG9zdFZhbGlkYXRpb246ZnVuY3Rpb24oZSx0LGksYSxuLHIsbyl7aWYoITE9PT1hKXJldHVybiBhO2lmKG8pcmV0dXJuITA7aWYobnVsbCE9PW4ubWlufHxudWxsIT09bi5tYXgpe3ZhciBzPW4ub25Vbk1hc2soZS5zbGljZSgpLnJldmVyc2UoKS5qb2luKFwiXCIpLHZvaWQgMCxsLmV4dGVuZCh7fSxuLHt1bm1hc2tBc051bWJlcjohMH0pKTtpZihudWxsIT09bi5taW4mJnM8bi5taW4mJihzLnRvU3RyaW5nKCkubGVuZ3RoPm4ubWluLnRvU3RyaW5nKCkubGVuZ3RofHxzPDApKXJldHVybiExO2lmKG51bGwhPT1uLm1heCYmcz5uLm1heClyZXR1cm4hIW4uU2V0TWF4T25PdmVyZmxvdyYme3JlZnJlc2hGcm9tQnVmZmVyOiEwLGJ1ZmZlcjp1KG4ubWF4LnRvU3RyaW5nKCkucmVwbGFjZShcIi5cIixuLnJhZGl4UG9pbnQpLnNwbGl0KFwiXCIpLG4uZGlnaXRzLG4pLnJldmVyc2UoKX19cmV0dXJuIGF9LG9uVW5NYXNrOmZ1bmN0aW9uKGUsdCxpKXtpZihcIlwiPT09dCYmITA9PT1pLm51bGxhYmxlKXJldHVybiB0O3ZhciBhPWUucmVwbGFjZShpLnByZWZpeCxcIlwiKTtyZXR1cm4gYT0oYT1hLnJlcGxhY2UoaS5zdWZmaXgsXCJcIikpLnJlcGxhY2UobmV3IFJlZ0V4cCgoMCxuLmRlZmF1bHQpKGkuZ3JvdXBTZXBhcmF0b3IpLFwiZ1wiKSxcIlwiKSxcIlwiIT09aS5wbGFjZWhvbGRlci5jaGFyQXQoMCkmJihhPWEucmVwbGFjZShuZXcgUmVnRXhwKGkucGxhY2Vob2xkZXIuY2hhckF0KDApLFwiZ1wiKSxcIjBcIikpLGkudW5tYXNrQXNOdW1iZXI/KFwiXCIhPT1pLnJhZGl4UG9pbnQmJi0xIT09YS5pbmRleE9mKGkucmFkaXhQb2ludCkmJihhPWEucmVwbGFjZShuLmRlZmF1bHQuY2FsbCh0aGlzLGkucmFkaXhQb2ludCksXCIuXCIpKSxhPShhPWEucmVwbGFjZShuZXcgUmVnRXhwKFwiXlwiKygwLG4uZGVmYXVsdCkoaS5uZWdhdGlvblN5bWJvbC5mcm9udCkpLFwiLVwiKSkucmVwbGFjZShuZXcgUmVnRXhwKCgwLG4uZGVmYXVsdCkoaS5uZWdhdGlvblN5bWJvbC5iYWNrKStcIiRcIiksXCJcIiksTnVtYmVyKGEpKTphfSxpc0NvbXBsZXRlOmZ1bmN0aW9uKGUsdCl7dmFyIGk9KHQubnVtZXJpY0lucHV0P2Uuc2xpY2UoKS5yZXZlcnNlKCk6ZSkuam9pbihcIlwiKTtyZXR1cm4gaT0oaT0oaT0oaT0oaT1pLnJlcGxhY2UobmV3IFJlZ0V4cChcIl5cIisoMCxuLmRlZmF1bHQpKHQubmVnYXRpb25TeW1ib2wuZnJvbnQpKSxcIi1cIikpLnJlcGxhY2UobmV3IFJlZ0V4cCgoMCxuLmRlZmF1bHQpKHQubmVnYXRpb25TeW1ib2wuYmFjaykrXCIkXCIpLFwiXCIpKS5yZXBsYWNlKHQucHJlZml4LFwiXCIpKS5yZXBsYWNlKHQuc3VmZml4LFwiXCIpKS5yZXBsYWNlKG5ldyBSZWdFeHAoKDAsbi5kZWZhdWx0KSh0Lmdyb3VwU2VwYXJhdG9yKStcIihbMC05XXszfSlcIixcImdcIiksXCIkMVwiKSxcIixcIj09PXQucmFkaXhQb2ludCYmKGk9aS5yZXBsYWNlKCgwLG4uZGVmYXVsdCkodC5yYWRpeFBvaW50KSxcIi5cIikpLGlzRmluaXRlKGkpfSxvbkJlZm9yZU1hc2s6ZnVuY3Rpb24oZSx0KXt2YXIgaT10LnJhZGl4UG9pbnR8fFwiLFwiO2lzRmluaXRlKHQuZGlnaXRzKSYmKHQuZGlnaXRzPXBhcnNlSW50KHQuZGlnaXRzKSksXCJudW1iZXJcIiE9dHlwZW9mIGUmJlwibnVtYmVyXCIhPT10LmlucHV0VHlwZXx8XCJcIj09PWl8fChlPWUudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLGkpKTt2YXIgYT1cIi1cIj09PWUuY2hhckF0KDApfHxlLmNoYXJBdCgwKT09PXQubmVnYXRpb25TeW1ib2wuZnJvbnQscj1lLnNwbGl0KGkpLG89clswXS5yZXBsYWNlKC9bXlxcLTAtOV0vZyxcIlwiKSxzPXIubGVuZ3RoPjE/clsxXS5yZXBsYWNlKC9bXjAtOV0vZyxcIlwiKTpcIlwiLGw9ci5sZW5ndGg+MTtlPW8rKFwiXCIhPT1zP2krczpzKTt2YXIgYz0wO2lmKFwiXCIhPT1pJiYoYz10LmRpZ2l0c09wdGlvbmFsP3QuZGlnaXRzPHMubGVuZ3RoP3QuZGlnaXRzOnMubGVuZ3RoOnQuZGlnaXRzLFwiXCIhPT1zfHwhdC5kaWdpdHNPcHRpb25hbCkpe3ZhciBmPU1hdGgucG93KDEwLGN8fDEpO2U9ZS5yZXBsYWNlKCgwLG4uZGVmYXVsdCkoaSksXCIuXCIpLGlzTmFOKHBhcnNlRmxvYXQoZSkpfHwoZT0odC5yb3VuZGluZ0ZOKHBhcnNlRmxvYXQoZSkqZikvZikudG9GaXhlZChjKSksZT1lLnRvU3RyaW5nKCkucmVwbGFjZShcIi5cIixpKX1pZigwPT09dC5kaWdpdHMmJi0xIT09ZS5pbmRleE9mKGkpJiYoZT1lLnN1YnN0cmluZygwLGUuaW5kZXhPZihpKSkpLG51bGwhPT10Lm1pbnx8bnVsbCE9PXQubWF4KXt2YXIgZD1lLnRvU3RyaW5nKCkucmVwbGFjZShpLFwiLlwiKTtudWxsIT09dC5taW4mJmQ8dC5taW4/ZT10Lm1pbi50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsaSk6bnVsbCE9PXQubWF4JiZkPnQubWF4JiYoZT10Lm1heC50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsaSkpfXJldHVybiBhJiZcIi1cIiE9PWUuY2hhckF0KDApJiYoZT1cIi1cIitlKSx1KGUudG9TdHJpbmcoKS5zcGxpdChcIlwiKSxjLHQsbCkuam9pbihcIlwiKX0sb25CZWZvcmVXcml0ZTpmdW5jdGlvbihlLHQsaSxhKXtmdW5jdGlvbiByKGUsdCl7aWYoITEhPT1hLl9fZmluYW5jZUlucHV0fHx0KXt2YXIgaT1lLmluZGV4T2YoYS5yYWRpeFBvaW50KTstMSE9PWkmJmUuc3BsaWNlKGksMSl9aWYoXCJcIiE9PWEuZ3JvdXBTZXBhcmF0b3IpZm9yKDstMSE9PShpPWUuaW5kZXhPZihhLmdyb3VwU2VwYXJhdG9yKSk7KWUuc3BsaWNlKGksMSk7cmV0dXJuIGV9dmFyIG8scztpZihhLnN0cmlwTGVhZGluZ1plcm9lcyYmKHM9ZnVuY3Rpb24oZSx0KXt2YXIgaT1uZXcgUmVnRXhwKFwiKF5cIisoXCJcIiE9PXQubmVnYXRpb25TeW1ib2wuZnJvbnQ/KDAsbi5kZWZhdWx0KSh0Lm5lZ2F0aW9uU3ltYm9sLmZyb250KStcIj9cIjpcIlwiKSsoMCxuLmRlZmF1bHQpKHQucHJlZml4KStcIikoLiopKFwiKygwLG4uZGVmYXVsdCkodC5zdWZmaXgpKyhcIlwiIT10Lm5lZ2F0aW9uU3ltYm9sLmJhY2s/KDAsbi5kZWZhdWx0KSh0Lm5lZ2F0aW9uU3ltYm9sLmJhY2spK1wiP1wiOlwiXCIpK1wiJClcIikuZXhlYyhlLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIikpLGE9aT9pWzJdOlwiXCIscj0hMTtyZXR1cm4gYSYmKGE9YS5zcGxpdCh0LnJhZGl4UG9pbnQuY2hhckF0KDApKVswXSxyPW5ldyBSZWdFeHAoXCJeWzBcIit0Lmdyb3VwU2VwYXJhdG9yK1wiXSpcIikuZXhlYyhhKSksISghcnx8IShyWzBdLmxlbmd0aD4xfHxyWzBdLmxlbmd0aD4wJiZyWzBdLmxlbmd0aDxhLmxlbmd0aCkpJiZyfSh0LGEpKSlmb3IodmFyIGM9dC5qb2luKFwiXCIpLmxhc3RJbmRleE9mKHNbMF0uc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIikpLShzWzBdPT1zLmlucHV0PzA6MSksZj1zWzBdPT1zLmlucHV0PzE6MCxkPXNbMF0ubGVuZ3RoLWY7ZD4wO2QtLSlkZWxldGUgdGhpcy5tYXNrc2V0LnZhbGlkUG9zaXRpb25zW2MrZF0sZGVsZXRlIHRbYytkXTtpZihlKXN3aXRjaChlLnR5cGUpe2Nhc2VcImJsdXJcIjpjYXNlXCJjaGVja3ZhbFwiOmlmKG51bGwhPT1hLm1pbil7dmFyIHA9YS5vblVuTWFzayh0LnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIiksdm9pZCAwLGwuZXh0ZW5kKHt9LGEse3VubWFza0FzTnVtYmVyOiEwfSkpO2lmKG51bGwhPT1hLm1pbiYmcDxhLm1pbilyZXR1cm57cmVmcmVzaEZyb21CdWZmZXI6ITAsYnVmZmVyOnUoYS5taW4udG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLGEucmFkaXhQb2ludCkuc3BsaXQoXCJcIiksYS5kaWdpdHMsYSkucmV2ZXJzZSgpfX1pZih0W3QubGVuZ3RoLTFdPT09YS5uZWdhdGlvblN5bWJvbC5mcm9udCl7dmFyIGg9bmV3IFJlZ0V4cChcIiheXCIrKFwiXCIhPWEubmVnYXRpb25TeW1ib2wuZnJvbnQ/KDAsbi5kZWZhdWx0KShhLm5lZ2F0aW9uU3ltYm9sLmZyb250KStcIj9cIjpcIlwiKSsoMCxuLmRlZmF1bHQpKGEucHJlZml4KStcIikoLiopKFwiKygwLG4uZGVmYXVsdCkoYS5zdWZmaXgpKyhcIlwiIT1hLm5lZ2F0aW9uU3ltYm9sLmJhY2s/KDAsbi5kZWZhdWx0KShhLm5lZ2F0aW9uU3ltYm9sLmJhY2spK1wiP1wiOlwiXCIpK1wiJClcIikuZXhlYyhyKHQuc2xpY2UoKSwhMCkucmV2ZXJzZSgpLmpvaW4oXCJcIikpOzA9PShoP2hbMl06XCJcIikmJihvPXtyZWZyZXNoRnJvbUJ1ZmZlcjohMCxidWZmZXI6WzBdfSl9ZWxzZSBpZihcIlwiIT09YS5yYWRpeFBvaW50KXt0LmluZGV4T2YoYS5yYWRpeFBvaW50KT09PWEuc3VmZml4Lmxlbmd0aCYmKG8mJm8uYnVmZmVyP28uYnVmZmVyLnNwbGljZSgwLDErYS5zdWZmaXgubGVuZ3RoKToodC5zcGxpY2UoMCwxK2Euc3VmZml4Lmxlbmd0aCksbz17cmVmcmVzaEZyb21CdWZmZXI6ITAsYnVmZmVyOnIodCl9KSl9aWYoYS5lbmZvcmNlRGlnaXRzT25CbHVyKXt2YXIgdj0obz1vfHx7fSkmJm8uYnVmZmVyfHx0LnNsaWNlKCkucmV2ZXJzZSgpO28ucmVmcmVzaEZyb21CdWZmZXI9ITAsby5idWZmZXI9dSh2LGEuZGlnaXRzLGEsITApLnJldmVyc2UoKX19cmV0dXJuIG99LG9uS2V5RG93bjpmdW5jdGlvbihlLHQsaSxhKXt2YXIgbixyPWwodGhpcyk7aWYoMyE9ZS5sb2NhdGlvbil7dmFyIHMsYz1lLmtleTtpZigocz1hLnNob3J0Y3V0cyYmYS5zaG9ydGN1dHNbY10pJiZzLmxlbmd0aD4xKXJldHVybiB0aGlzLmlucHV0bWFzay5fX3ZhbHVlU2V0LmNhbGwodGhpcyxwYXJzZUZsb2F0KHRoaXMuaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKSkqcGFyc2VJbnQocykpLHIudHJpZ2dlcihcInNldHZhbHVlXCIpLCExfWlmKGUuY3RybEtleSlzd2l0Y2goZS5rZXkpe2Nhc2Ugby5rZXlzLkFycm93VXA6cmV0dXJuIHRoaXMuaW5wdXRtYXNrLl9fdmFsdWVTZXQuY2FsbCh0aGlzLHBhcnNlRmxvYXQodGhpcy5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpKStwYXJzZUludChhLnN0ZXApKSxyLnRyaWdnZXIoXCJzZXR2YWx1ZVwiKSwhMTtjYXNlIG8ua2V5cy5BcnJvd0Rvd246cmV0dXJuIHRoaXMuaW5wdXRtYXNrLl9fdmFsdWVTZXQuY2FsbCh0aGlzLHBhcnNlRmxvYXQodGhpcy5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpKS1wYXJzZUludChhLnN0ZXApKSxyLnRyaWdnZXIoXCJzZXR2YWx1ZVwiKSwhMX1pZighZS5zaGlmdEtleSYmKGUua2V5PT09by5rZXlzLkRlbGV0ZXx8ZS5rZXk9PT1vLmtleXMuQmFja3NwYWNlfHxlLmtleT09PW8ua2V5cy5CQUNLU1BBQ0VfU0FGQVJJKSYmaS5iZWdpbiE9PXQubGVuZ3RoKXtpZih0W2Uua2V5PT09by5rZXlzLkRlbGV0ZT9pLmJlZ2luLTE6aS5lbmRdPT09YS5uZWdhdGlvblN5bWJvbC5mcm9udClyZXR1cm4gbj10LnNsaWNlKCkucmV2ZXJzZSgpLFwiXCIhPT1hLm5lZ2F0aW9uU3ltYm9sLmZyb250JiZuLnNoaWZ0KCksXCJcIiE9PWEubmVnYXRpb25TeW1ib2wuYmFjayYmbi5wb3AoKSxyLnRyaWdnZXIoXCJzZXR2YWx1ZVwiLFtuLmpvaW4oXCJcIiksaS5iZWdpbl0pLCExO2lmKCEwPT09YS5fcmFkaXhEYW5jZSl7dmFyIGY9dC5pbmRleE9mKGEucmFkaXhQb2ludCk7aWYoYS5kaWdpdHNPcHRpb25hbCl7aWYoMD09PWYpcmV0dXJuKG49dC5zbGljZSgpLnJldmVyc2UoKSkucG9wKCksci50cmlnZ2VyKFwic2V0dmFsdWVcIixbbi5qb2luKFwiXCIpLGkuYmVnaW4+PW4ubGVuZ3RoP24ubGVuZ3RoOmkuYmVnaW5dKSwhMX1lbHNlIGlmKC0xIT09ZiYmKGkuYmVnaW48Znx8aS5lbmQ8Znx8ZS5rZXk9PT1vLmtleXMuRGVsZXRlJiYoaS5iZWdpbj09PWZ8fGkuYmVnaW4tMT09PWYpKSl7dmFyIGQ9dm9pZCAwO3JldHVybiBpLmJlZ2luPT09aS5lbmQmJihlLmtleT09PW8ua2V5cy5CYWNrc3BhY2V8fGUua2V5PT09by5rZXlzLkJBQ0tTUEFDRV9TQUZBUkk/aS5iZWdpbisrOmUua2V5PT09by5rZXlzLkRlbGV0ZSYmaS5iZWdpbi0xPT09ZiYmKGQ9bC5leHRlbmQoe30saSksaS5iZWdpbi0tLGkuZW5kLS0pKSwobj10LnNsaWNlKCkucmV2ZXJzZSgpKS5zcGxpY2Uobi5sZW5ndGgtaS5iZWdpbixpLmJlZ2luLWkuZW5kKzEpLG49dShuLGEuZGlnaXRzLGEpLmpvaW4oXCJcIiksZCYmKGk9ZCksci50cmlnZ2VyKFwic2V0dmFsdWVcIixbbixpLmJlZ2luPj1uLmxlbmd0aD9mKzE6aS5iZWdpbl0pLCExfX19fX0sY3VycmVuY3k6e3ByZWZpeDpcIlwiLGdyb3VwU2VwYXJhdG9yOlwiLFwiLGFsaWFzOlwibnVtZXJpY1wiLGRpZ2l0czoyLGRpZ2l0c09wdGlvbmFsOiExfSxkZWNpbWFsOnthbGlhczpcIm51bWVyaWNcIn0saW50ZWdlcjp7YWxpYXM6XCJudW1lcmljXCIsaW5wdXRtb2RlOlwibnVtZXJpY1wiLGRpZ2l0czowfSxwZXJjZW50YWdlOnthbGlhczpcIm51bWVyaWNcIixtaW46MCxtYXg6MTAwLHN1ZmZpeDpcIiAlXCIsZGlnaXRzOjAsYWxsb3dNaW51czohMX0saW5kaWFubnM6e2FsaWFzOlwibnVtZXJpY1wiLF9tYXNrOmZ1bmN0aW9uKGUpe3JldHVyblwiKFwiK2UuZ3JvdXBTZXBhcmF0b3IrXCI5OSl7KnwxfShcIitlLmdyb3VwU2VwYXJhdG9yK1wiOTk5KXsxfDF9XCJ9LGdyb3VwU2VwYXJhdG9yOlwiLFwiLHJhZGl4UG9pbnQ6XCIuXCIscGxhY2Vob2xkZXI6XCIwXCIsZGlnaXRzOjIsZGlnaXRzT3B0aW9uYWw6ITF9fSl9LDkzODA6ZnVuY3Rpb24oZSx0LGkpe3ZhciBhO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD12b2lkIDA7dmFyIG49KChhPWkoODc0MSkpJiZhLl9fZXNNb2R1bGU/YTp7ZGVmYXVsdDphfSkuZGVmYXVsdD93aW5kb3c6e307dC5kZWZhdWx0PW59LDc3NjA6ZnVuY3Rpb24oZSx0LGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuSGFuZGxlTmF0aXZlUGxhY2Vob2xkZXI9ZnVuY3Rpb24oZSx0KXt2YXIgaT1lP2UuaW5wdXRtYXNrOnRoaXM7aWYocy5pZSl7aWYoZS5pbnB1dG1hc2suX3ZhbHVlR2V0KCkhPT10JiYoZS5wbGFjZWhvbGRlciE9PXR8fFwiXCI9PT1lLnBsYWNlaG9sZGVyKSl7dmFyIGE9ci5nZXRCdWZmZXIuY2FsbChpKS5zbGljZSgpLG49ZS5pbnB1dG1hc2suX3ZhbHVlR2V0KCk7aWYobiE9PXQpe3ZhciBvPXIuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpKTstMT09PW8mJm49PT1yLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwoaSkuam9pbihcIlwiKT9hPVtdOi0xIT09byYmdS5jYWxsKGksYSksZChlLGEpfX19ZWxzZSBlLnBsYWNlaG9sZGVyIT09dCYmKGUucGxhY2Vob2xkZXI9dCxcIlwiPT09ZS5wbGFjZWhvbGRlciYmZS5yZW1vdmVBdHRyaWJ1dGUoXCJwbGFjZWhvbGRlclwiKSl9LHQuYXBwbHlJbnB1dFZhbHVlPWMsdC5jaGVja1ZhbD1mLHQuY2xlYXJPcHRpb25hbFRhaWw9dSx0LnVubWFza2VkdmFsdWU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZT9lLmlucHV0bWFzazp0aGlzLGk9dC5vcHRzLGE9dC5tYXNrc2V0O2lmKGUpe2lmKHZvaWQgMD09PWUuaW5wdXRtYXNrKXJldHVybiBlLnZhbHVlO2UuaW5wdXRtYXNrJiZlLmlucHV0bWFzay5yZWZyZXNoVmFsdWUmJmMoZSxlLmlucHV0bWFzay5fdmFsdWVHZXQoITApKX1mb3IodmFyIG49W10sbz1hLnZhbGlkUG9zaXRpb25zLHM9MCxsPW8ubGVuZ3RoO3M8bDtzKyspb1tzXSYmb1tzXS5tYXRjaCYmKDEhPW9bc10ubWF0Y2guc3RhdGljfHxBcnJheS5pc0FycmF5KGEubWV0YWRhdGEpJiYhMCE9PW9bc10uZ2VuZXJhdGVkSW5wdXQpJiZuLnB1c2gob1tzXS5pbnB1dCk7dmFyIHU9MD09PW4ubGVuZ3RoP1wiXCI6KHQuaXNSVEw/bi5yZXZlcnNlKCk6bikuam9pbihcIlwiKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBpLm9uVW5NYXNrKXt2YXIgZj0odC5pc1JUTD9yLmdldEJ1ZmZlci5jYWxsKHQpLnNsaWNlKCkucmV2ZXJzZSgpOnIuZ2V0QnVmZmVyLmNhbGwodCkpLmpvaW4oXCJcIik7dT1pLm9uVW5NYXNrLmNhbGwodCxmLHUsaSl9cmV0dXJuIHV9LHQud3JpdGVCdWZmZXI9ZDt2YXIgYT1pKDI4MzkpLG49aSg0NzEzKSxyPWkoODcxMSksbz1pKDcyMTUpLHM9aSg5ODQ1KSxsPWkoNjAzMCk7ZnVuY3Rpb24gYyhlLHQpe3ZhciBpPWU/ZS5pbnB1dG1hc2s6dGhpcyxhPWkub3B0cztlLmlucHV0bWFzay5yZWZyZXNoVmFsdWU9ITEsXCJmdW5jdGlvblwiPT10eXBlb2YgYS5vbkJlZm9yZU1hc2smJih0PWEub25CZWZvcmVNYXNrLmNhbGwoaSx0LGEpfHx0KSxmKGUsITAsITEsdD10LnRvU3RyaW5nKCkuc3BsaXQoXCJcIikpLGkudW5kb1ZhbHVlPWkuX3ZhbHVlR2V0KCEwKSwoYS5jbGVhck1hc2tPbkxvc3RGb2N1c3x8YS5jbGVhckluY29tcGxldGUpJiZlLmlucHV0bWFzay5fdmFsdWVHZXQoKT09PXIuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbChpKS5qb2luKFwiXCIpJiYtMT09PXIuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChpKSYmZS5pbnB1dG1hc2suX3ZhbHVlU2V0KFwiXCIpfWZ1bmN0aW9uIHUoZSl7ZS5sZW5ndGg9MDtmb3IodmFyIHQsaT1uLmdldE1hc2tUZW1wbGF0ZS5jYWxsKHRoaXMsITAsMCwhMCx2b2lkIDAsITApO3ZvaWQgMCE9PSh0PWkuc2hpZnQoKSk7KWUucHVzaCh0KTtyZXR1cm4gZX1mdW5jdGlvbiBmKGUsdCxpLGEscyl7dmFyIGM9ZT9lLmlucHV0bWFzazp0aGlzLHU9Yy5tYXNrc2V0LGY9Yy5vcHRzLHA9Yy5kZXBlbmRlbmN5TGliLGg9YS5zbGljZSgpLHY9XCJcIixtPS0xLGc9dm9pZCAwLGs9Zi5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyO2Yuc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcj1cIlwiLHIucmVzZXRNYXNrU2V0LmNhbGwoYyksdS50ZXN0cz17fSxtPWYucmFkaXhQb2ludD9yLmRldGVybWluZU5ld0NhcmV0UG9zaXRpb24uY2FsbChjLHtiZWdpbjowLGVuZDowfSwhMSwhMT09PWYuX19maW5hbmNlSW5wdXQ/XCJyYWRpeEZvY3VzXCI6dm9pZCAwKS5iZWdpbjowLHUucD1tLGMuY2FyZXRQb3M9e2JlZ2luOm19O3ZhciB5PVtdLGI9Yy5jYXJldFBvcztpZihoLmZvckVhY2goKGZ1bmN0aW9uKGUsdCl7aWYodm9pZCAwIT09ZSl7dmFyIGE9bmV3IHAuRXZlbnQoXCJfY2hlY2t2YWxcIik7YS5rZXk9ZSx2Kz1lO3ZhciBvPXIuZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChjLHZvaWQgMCwhMCk7IWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPW4uZ2V0TWFza1RlbXBsYXRlLmNhbGwoYywhMCwwKS5zbGljZShlLHIuc2Vla05leHQuY2FsbChjLGUsITEsITEpKS5qb2luKFwiXCIpLnJlcGxhY2UoLycvZyxcIlwiKSxhPWkuaW5kZXhPZih0KTthPjAmJlwiIFwiPT09aVthLTFdOylhLS07dmFyIG89MD09PWEmJiFyLmlzTWFzay5jYWxsKGMsZSkmJihuLmdldFRlc3QuY2FsbChjLGUpLm1hdGNoLm5hdGl2ZURlZj09PXQuY2hhckF0KDApfHwhMD09PW4uZ2V0VGVzdC5jYWxsKGMsZSkubWF0Y2guc3RhdGljJiZuLmdldFRlc3QuY2FsbChjLGUpLm1hdGNoLm5hdGl2ZURlZj09PVwiJ1wiK3QuY2hhckF0KDApfHxcIiBcIj09PW4uZ2V0VGVzdC5jYWxsKGMsZSkubWF0Y2gubmF0aXZlRGVmJiYobi5nZXRUZXN0LmNhbGwoYyxlKzEpLm1hdGNoLm5hdGl2ZURlZj09PXQuY2hhckF0KDApfHwhMD09PW4uZ2V0VGVzdC5jYWxsKGMsZSsxKS5tYXRjaC5zdGF0aWMmJm4uZ2V0VGVzdC5jYWxsKGMsZSsxKS5tYXRjaC5uYXRpdmVEZWY9PT1cIidcIit0LmNoYXJBdCgwKSkpO2lmKCFvJiZhPjAmJiFyLmlzTWFzay5jYWxsKGMsZSwhMSwhMCkpe3ZhciBzPXIuc2Vla05leHQuY2FsbChjLGUpO2MuY2FyZXRQb3MuYmVnaW48cyYmKGMuY2FyZXRQb3M9e2JlZ2luOnN9KX1yZXR1cm4gb30obSx2KT8oZz1sLkV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGMsYSwhMCwhMSxpLGMuY2FyZXRQb3MuYmVnaW4pKSYmKG09Yy5jYXJldFBvcy5iZWdpbisxLHY9XCJcIik6Zz1sLkV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGMsYSwhMCwhMSxpLG8rMSksZz8odm9pZCAwIT09Zy5wb3MmJnUudmFsaWRQb3NpdGlvbnNbZy5wb3NdJiYhMD09PXUudmFsaWRQb3NpdGlvbnNbZy5wb3NdLm1hdGNoLnN0YXRpYyYmdm9pZCAwPT09dS52YWxpZFBvc2l0aW9uc1tnLnBvc10uYWx0ZXJuYXRpb24mJih5LnB1c2goZy5wb3MpLGMuaXNSVEx8fChnLmZvcndhcmRQb3NpdGlvbj1nLnBvcysxKSksZC5jYWxsKGMsdm9pZCAwLHIuZ2V0QnVmZmVyLmNhbGwoYyksZy5mb3J3YXJkUG9zaXRpb24sYSwhMSksYy5jYXJldFBvcz17YmVnaW46Zy5mb3J3YXJkUG9zaXRpb24sZW5kOmcuZm9yd2FyZFBvc2l0aW9ufSxiPWMuY2FyZXRQb3MpOnZvaWQgMD09PXUudmFsaWRQb3NpdGlvbnNbdF0mJmhbdF09PT1uLmdldFBsYWNlaG9sZGVyLmNhbGwoYyx0KSYmci5pc01hc2suY2FsbChjLHQsITApP2MuY2FyZXRQb3MuYmVnaW4rKzpjLmNhcmV0UG9zPWJ9fSkpLHkubGVuZ3RoPjApe3ZhciB4LFAsdz1yLnNlZWtOZXh0LmNhbGwoYywtMSx2b2lkIDAsITEpO2lmKCFvLmlzQ29tcGxldGUuY2FsbChjLHIuZ2V0QnVmZmVyLmNhbGwoYykpJiZ5Lmxlbmd0aDw9d3x8by5pc0NvbXBsZXRlLmNhbGwoYyxyLmdldEJ1ZmZlci5jYWxsKGMpKSYmeS5sZW5ndGg+MCYmeS5sZW5ndGghPT13JiYwPT09eVswXSlmb3IodmFyIFM9dzt2b2lkIDAhPT0oeD15LnNoaWZ0KCkpOyl7dmFyIF89bmV3IHAuRXZlbnQoXCJfY2hlY2t2YWxcIik7aWYoKFA9dS52YWxpZFBvc2l0aW9uc1t4XSkuZ2VuZXJhdGVkSW5wdXQ9ITAsXy5rZXk9UC5pbnB1dCwoZz1sLkV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGMsXywhMCwhMSxpLFMpKSYmdm9pZCAwIT09Zy5wb3MmJmcucG9zIT09eCYmdS52YWxpZFBvc2l0aW9uc1tnLnBvc10mJiEwPT09dS52YWxpZFBvc2l0aW9uc1tnLnBvc10ubWF0Y2guc3RhdGljKXkucHVzaChnLnBvcyk7ZWxzZSBpZighZylicmVhaztTKyt9fXQmJmQuY2FsbChjLGUsci5nZXRCdWZmZXIuY2FsbChjKSxnP2cuZm9yd2FyZFBvc2l0aW9uOmMuY2FyZXRQb3MuYmVnaW4sc3x8bmV3IHAuRXZlbnQoXCJjaGVja3ZhbFwiKSxzJiYoXCJpbnB1dFwiPT09cy50eXBlJiZjLnVuZG9WYWx1ZSE9PXIuZ2V0QnVmZmVyLmNhbGwoYykuam9pbihcIlwiKXx8XCJwYXN0ZVwiPT09cy50eXBlKSksZi5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyPWt9ZnVuY3Rpb24gZChlLHQsaSxuLHMpe3ZhciBsPWU/ZS5pbnB1dG1hc2s6dGhpcyxjPWwub3B0cyx1PWwuZGVwZW5kZW5jeUxpYjtpZihuJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBjLm9uQmVmb3JlV3JpdGUpe3ZhciBmPWMub25CZWZvcmVXcml0ZS5jYWxsKGwsbix0LGksYyk7aWYoZil7aWYoZi5yZWZyZXNoRnJvbUJ1ZmZlcil7dmFyIGQ9Zi5yZWZyZXNoRnJvbUJ1ZmZlcjtvLnJlZnJlc2hGcm9tQnVmZmVyLmNhbGwobCwhMD09PWQ/ZDpkLnN0YXJ0LGQuZW5kLGYuYnVmZmVyfHx0KSx0PXIuZ2V0QnVmZmVyLmNhbGwobCwhMCl9dm9pZCAwIT09aSYmKGk9dm9pZCAwIT09Zi5jYXJldD9mLmNhcmV0OmkpfX1pZih2b2lkIDAhPT1lJiYoZS5pbnB1dG1hc2suX3ZhbHVlU2V0KHQuam9pbihcIlwiKSksdm9pZCAwPT09aXx8dm9pZCAwIT09biYmXCJibHVyXCI9PT1uLnR5cGV8fHIuY2FyZXQuY2FsbChsLGUsaSx2b2lkIDAsdm9pZCAwLHZvaWQgMCE9PW4mJlwia2V5ZG93blwiPT09bi50eXBlJiYobi5rZXk9PT1hLmtleXMuRGVsZXRlfHxuLmtleT09PWEua2V5cy5CYWNrc3BhY2UpKSwhMD09PXMpKXt2YXIgcD11KGUpLGg9ZS5pbnB1dG1hc2suX3ZhbHVlR2V0KCk7ZS5pbnB1dG1hc2suc2tpcElucHV0RXZlbnQ9ITAscC50cmlnZ2VyKFwiaW5wdXRcIiksc2V0VGltZW91dCgoZnVuY3Rpb24oKXtoPT09ci5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKGwpLmpvaW4oXCJcIik/cC50cmlnZ2VyKFwiY2xlYXJlZFwiKTohMD09PW8uaXNDb21wbGV0ZS5jYWxsKGwsdCkmJnAudHJpZ2dlcihcImNvbXBsZXRlXCIpfSksMCl9fX0sMjM5NDpmdW5jdGlvbihlLHQsaSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PXZvaWQgMDt2YXIgYT1pKDE1Nyksbj1tKGkoNDk2MykpLHI9bShpKDkzODApKSxvPWkoMjM5MSkscz1pKDQ3MTMpLGw9aSg4NzExKSxjPWkoNzIxNSksdT1pKDc3NjApLGY9aSg5NzE2KSxkPW0oaSg3MzkyKSkscD1tKGkoMzk3NikpLGg9bShpKDg3NDEpKTtmdW5jdGlvbiB2KGUpe3JldHVybiB2PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LHYoZSl9ZnVuY3Rpb24gbShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGc9ci5kZWZhdWx0LmRvY3VtZW50LGs9XCJfaW5wdXRtYXNrX29wdHNcIjtmdW5jdGlvbiB5KGUsdCxpKXtpZihoLmRlZmF1bHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHkpKXJldHVybiBuZXcgeShlLHQsaSk7dGhpcy5kZXBlbmRlbmN5TGliPW4uZGVmYXVsdCx0aGlzLmVsPXZvaWQgMCx0aGlzLmV2ZW50cz17fSx0aGlzLm1hc2tzZXQ9dm9pZCAwLCEwIT09aSYmKFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk/dD1lOih0PXR8fHt9LGUmJih0LmFsaWFzPWUpKSx0aGlzLm9wdHM9bi5kZWZhdWx0LmV4dGVuZCghMCx7fSx0aGlzLmRlZmF1bHRzLHQpLHRoaXMubm9NYXNrc0NhY2hlPXQmJnZvaWQgMCE9PXQuZGVmaW5pdGlvbnMsdGhpcy51c2VyT3B0aW9ucz10fHx7fSxiKHRoaXMub3B0cy5hbGlhcyx0LHRoaXMub3B0cykpLHRoaXMucmVmcmVzaFZhbHVlPSExLHRoaXMudW5kb1ZhbHVlPXZvaWQgMCx0aGlzLiRlbD12b2lkIDAsdGhpcy5za2lwSW5wdXRFdmVudD0hMSx0aGlzLnZhbGlkYXRpb25FdmVudD0hMSx0aGlzLmlnbm9yYWJsZT0hMSx0aGlzLm1heExlbmd0aCx0aGlzLm1vdXNlRW50ZXI9ITEsdGhpcy5jbGlja2VkPTAsdGhpcy5vcmlnaW5hbFBsYWNlaG9sZGVyPXZvaWQgMCx0aGlzLmlzQ29tcG9zaW5nPSExfX1mdW5jdGlvbiBiKGUsdCxpKXt2YXIgYT15LnByb3RvdHlwZS5hbGlhc2VzW2VdO3JldHVybiBhPyhhLmFsaWFzJiZiKGEuYWxpYXMsdm9pZCAwLGkpLG4uZGVmYXVsdC5leHRlbmQoITAsaSxhKSxuLmRlZmF1bHQuZXh0ZW5kKCEwLGksdCksITApOihudWxsPT09aS5tYXNrJiYoaS5tYXNrPWUpLCExKX15LnByb3RvdHlwZT17ZGF0YUF0dHJpYnV0ZTpcImRhdGEtaW5wdXRtYXNrXCIsZGVmYXVsdHM6cC5kZWZhdWx0LGRlZmluaXRpb25zOmQuZGVmYXVsdCxhbGlhc2VzOnt9LG1hc2tzQ2FjaGU6e30sZ2V0IGlzUlRMKCl7cmV0dXJuIHRoaXMub3B0cy5pc1JUTHx8dGhpcy5vcHRzLm51bWVyaWNJbnB1dH0sbWFzazpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1nLmdldEVsZW1lbnRCeUlkKGUpfHxnLnF1ZXJ5U2VsZWN0b3JBbGwoZSkpLChlPWUubm9kZU5hbWU/W2VdOkFycmF5LmlzQXJyYXkoZSk/ZTpbXS5zbGljZS5jYWxsKGUpKS5mb3JFYWNoKChmdW5jdGlvbihlLGkpe3ZhciBzPW4uZGVmYXVsdC5leHRlbmQoITAse30sdC5vcHRzKTtpZihmdW5jdGlvbihlLHQsaSxhKXtmdW5jdGlvbiBvKHQsbil7dmFyIG89XCJcIj09PWE/dDphK1wiLVwiK3Q7bnVsbCE9PShuPXZvaWQgMCE9PW4/bjplLmdldEF0dHJpYnV0ZShvKSkmJihcInN0cmluZ1wiPT10eXBlb2YgbiYmKDA9PT10LmluZGV4T2YoXCJvblwiKT9uPXIuZGVmYXVsdFtuXTpcImZhbHNlXCI9PT1uP249ITE6XCJ0cnVlXCI9PT1uJiYobj0hMCkpLGlbdF09bil9aWYoITA9PT10LmltcG9ydERhdGFBdHRyaWJ1dGVzKXt2YXIgcyxsLGMsdSxmPWUuZ2V0QXR0cmlidXRlKGEpO2lmKGYmJlwiXCIhPT1mJiYoZj1mLnJlcGxhY2UoLycvZywnXCInKSxsPUpTT04ucGFyc2UoXCJ7XCIrZitcIn1cIikpLGwpZm9yKHUgaW4gYz12b2lkIDAsbClpZihcImFsaWFzXCI9PT11LnRvTG93ZXJDYXNlKCkpe2M9bFt1XTticmVha31mb3IocyBpbiBvKFwiYWxpYXNcIixjKSxpLmFsaWFzJiZiKGkuYWxpYXMsaSx0KSx0KXtpZihsKWZvcih1IGluIGM9dm9pZCAwLGwpaWYodS50b0xvd2VyQ2FzZSgpPT09cy50b0xvd2VyQ2FzZSgpKXtjPWxbdV07YnJlYWt9byhzLGMpfX1uLmRlZmF1bHQuZXh0ZW5kKCEwLHQsaSksKFwicnRsXCI9PT1lLmRpcnx8dC5yaWdodEFsaWduKSYmKGUuc3R5bGUudGV4dEFsaWduPVwicmlnaHRcIik7KFwicnRsXCI9PT1lLmRpcnx8dC5udW1lcmljSW5wdXQpJiYoZS5kaXI9XCJsdHJcIixlLnJlbW92ZUF0dHJpYnV0ZShcImRpclwiKSx0LmlzUlRMPSEwKTtyZXR1cm4gT2JqZWN0LmtleXMoaSkubGVuZ3RofShlLHMsbi5kZWZhdWx0LmV4dGVuZCghMCx7fSx0LnVzZXJPcHRpb25zKSx0LmRhdGFBdHRyaWJ1dGUpKXt2YXIgbD0oMCxvLmdlbmVyYXRlTWFza1NldCkocyx0Lm5vTWFza3NDYWNoZSk7dm9pZCAwIT09bCYmKHZvaWQgMCE9PWUuaW5wdXRtYXNrJiYoZS5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrPSEwLGUuaW5wdXRtYXNrLnJlbW92ZSgpKSxlLmlucHV0bWFzaz1uZXcgeSh2b2lkIDAsdm9pZCAwLCEwKSxlLmlucHV0bWFzay5vcHRzPXMsZS5pbnB1dG1hc2subm9NYXNrc0NhY2hlPXQubm9NYXNrc0NhY2hlLGUuaW5wdXRtYXNrLnVzZXJPcHRpb25zPW4uZGVmYXVsdC5leHRlbmQoITAse30sdC51c2VyT3B0aW9ucyksZS5pbnB1dG1hc2suZWw9ZSxlLmlucHV0bWFzay4kZWw9KDAsbi5kZWZhdWx0KShlKSxlLmlucHV0bWFzay5tYXNrc2V0PWwsbi5kZWZhdWx0LmRhdGEoZSxrLHQudXNlck9wdGlvbnMpLGEubWFzay5jYWxsKGUuaW5wdXRtYXNrKSl9fSkpLGUmJmVbMF0mJmVbMF0uaW5wdXRtYXNrfHx0aGlzfSxvcHRpb246ZnVuY3Rpb24oZSx0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT90aGlzLm9wdHNbZV06XCJvYmplY3RcIj09PXYoZSk/KG4uZGVmYXVsdC5leHRlbmQodGhpcy51c2VyT3B0aW9ucyxlKSx0aGlzLmVsJiYhMCE9PXQmJnRoaXMubWFzayh0aGlzLmVsKSx0aGlzKTp2b2lkIDB9LHVubWFza2VkdmFsdWU6ZnVuY3Rpb24oZSl7aWYodGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsby5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSksdm9pZCAwPT09dGhpcy5lbHx8dm9pZCAwIT09ZSl7dmFyIHQ9KFwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub3B0cy5vbkJlZm9yZU1hc2smJnRoaXMub3B0cy5vbkJlZm9yZU1hc2suY2FsbCh0aGlzLGUsdGhpcy5vcHRzKXx8ZSkuc3BsaXQoXCJcIik7dS5jaGVja1ZhbC5jYWxsKHRoaXMsdm9pZCAwLCExLCExLHQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub3B0cy5vbkJlZm9yZVdyaXRlJiZ0aGlzLm9wdHMub25CZWZvcmVXcml0ZS5jYWxsKHRoaXMsdm9pZCAwLGwuZ2V0QnVmZmVyLmNhbGwodGhpcyksMCx0aGlzLm9wdHMpfXJldHVybiB1LnVubWFza2VkdmFsdWUuY2FsbCh0aGlzLHRoaXMuZWwpfSxyZW1vdmU6ZnVuY3Rpb24oKXtpZih0aGlzLmVsKXtuLmRlZmF1bHQuZGF0YSh0aGlzLmVsLGssbnVsbCk7dmFyIGU9dGhpcy5vcHRzLmF1dG9Vbm1hc2s/KDAsdS51bm1hc2tlZHZhbHVlKSh0aGlzLmVsKTp0aGlzLl92YWx1ZUdldCh0aGlzLm9wdHMuYXV0b1VubWFzayk7ZSE9PWwuZ2V0QnVmZmVyVGVtcGxhdGUuY2FsbCh0aGlzKS5qb2luKFwiXCIpP3RoaXMuX3ZhbHVlU2V0KGUsdGhpcy5vcHRzLmF1dG9Vbm1hc2spOnRoaXMuX3ZhbHVlU2V0KFwiXCIpLGYuRXZlbnRSdWxlci5vZmYodGhpcy5lbCksT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciYmT2JqZWN0LmdldFByb3RvdHlwZU9mP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMuZWwpLFwidmFsdWVcIikmJnRoaXMuX192YWx1ZUdldCYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMuZWwsXCJ2YWx1ZVwiLHtnZXQ6dGhpcy5fX3ZhbHVlR2V0LHNldDp0aGlzLl9fdmFsdWVTZXQsY29uZmlndXJhYmxlOiEwfSk6Zy5fX2xvb2t1cEdldHRlcl9fJiZ0aGlzLmVsLl9fbG9va3VwR2V0dGVyX18oXCJ2YWx1ZVwiKSYmdGhpcy5fX3ZhbHVlR2V0JiYodGhpcy5lbC5fX2RlZmluZUdldHRlcl9fKFwidmFsdWVcIix0aGlzLl9fdmFsdWVHZXQpLHRoaXMuZWwuX19kZWZpbmVTZXR0ZXJfXyhcInZhbHVlXCIsdGhpcy5fX3ZhbHVlU2V0KSksdGhpcy5lbC5pbnB1dG1hc2s9dm9pZCAwfXJldHVybiB0aGlzLmVsfSxnZXRlbXB0eW1hc2s6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsby5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSksKHRoaXMuaXNSVEw/bC5nZXRCdWZmZXJUZW1wbGF0ZS5jYWxsKHRoaXMpLnJldmVyc2UoKTpsLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwodGhpcykpLmpvaW4oXCJcIil9LGhhc01hc2tlZFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMub3B0cy5hdXRvVW5tYXNrfSxpc0NvbXBsZXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFza3NldD10aGlzLm1hc2tzZXR8fCgwLG8uZ2VuZXJhdGVNYXNrU2V0KSh0aGlzLm9wdHMsdGhpcy5ub01hc2tzQ2FjaGUpLGMuaXNDb21wbGV0ZS5jYWxsKHRoaXMsbC5nZXRCdWZmZXIuY2FsbCh0aGlzKSl9LGdldG1ldGFkYXRhOmZ1bmN0aW9uKCl7aWYodGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsby5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSksQXJyYXkuaXNBcnJheSh0aGlzLm1hc2tzZXQubWV0YWRhdGEpKXt2YXIgZT1zLmdldE1hc2tUZW1wbGF0ZS5jYWxsKHRoaXMsITAsMCwhMSkuam9pbihcIlwiKTtyZXR1cm4gdGhpcy5tYXNrc2V0Lm1ldGFkYXRhLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hc2shPT1lfHwoZT10LCExKX0pKSxlfXJldHVybiB0aGlzLm1hc2tzZXQubWV0YWRhdGF9LGlzVmFsaWQ6ZnVuY3Rpb24oZSl7aWYodGhpcy5tYXNrc2V0PXRoaXMubWFza3NldHx8KDAsby5nZW5lcmF0ZU1hc2tTZXQpKHRoaXMub3B0cyx0aGlzLm5vTWFza3NDYWNoZSksZSl7dmFyIHQ9KFwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub3B0cy5vbkJlZm9yZU1hc2smJnRoaXMub3B0cy5vbkJlZm9yZU1hc2suY2FsbCh0aGlzLGUsdGhpcy5vcHRzKXx8ZSkuc3BsaXQoXCJcIik7dS5jaGVja1ZhbC5jYWxsKHRoaXMsdm9pZCAwLCEwLCExLHQpfWVsc2UgZT10aGlzLmlzUlRMP2wuZ2V0QnVmZmVyLmNhbGwodGhpcykuc2xpY2UoKS5yZXZlcnNlKCkuam9pbihcIlwiKTpsLmdldEJ1ZmZlci5jYWxsKHRoaXMpLmpvaW4oXCJcIik7Zm9yKHZhciBpPWwuZ2V0QnVmZmVyLmNhbGwodGhpcyksYT1sLmRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uLmNhbGwodGhpcyksbj1pLmxlbmd0aC0xO24+YSYmIWwuaXNNYXNrLmNhbGwodGhpcyxuKTtuLS0pO3JldHVybiBpLnNwbGljZShhLG4rMS1hKSxjLmlzQ29tcGxldGUuY2FsbCh0aGlzLGkpJiZlPT09KHRoaXMuaXNSVEw/bC5nZXRCdWZmZXIuY2FsbCh0aGlzKS5zbGljZSgpLnJldmVyc2UoKS5qb2luKFwiXCIpOmwuZ2V0QnVmZmVyLmNhbGwodGhpcykuam9pbihcIlwiKSl9LGZvcm1hdDpmdW5jdGlvbihlLHQpe3RoaXMubWFza3NldD10aGlzLm1hc2tzZXR8fCgwLG8uZ2VuZXJhdGVNYXNrU2V0KSh0aGlzLm9wdHMsdGhpcy5ub01hc2tzQ2FjaGUpO3ZhciBpPShcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLm9wdHMub25CZWZvcmVNYXNrJiZ0aGlzLm9wdHMub25CZWZvcmVNYXNrLmNhbGwodGhpcyxlLHRoaXMub3B0cyl8fGUpLnNwbGl0KFwiXCIpO3UuY2hlY2tWYWwuY2FsbCh0aGlzLHZvaWQgMCwhMCwhMSxpKTt2YXIgYT10aGlzLmlzUlRMP2wuZ2V0QnVmZmVyLmNhbGwodGhpcykuc2xpY2UoKS5yZXZlcnNlKCkuam9pbihcIlwiKTpsLmdldEJ1ZmZlci5jYWxsKHRoaXMpLmpvaW4oXCJcIik7cmV0dXJuIHQ/e3ZhbHVlOmEsbWV0YWRhdGE6dGhpcy5nZXRtZXRhZGF0YSgpfTphfSxzZXRWYWx1ZTpmdW5jdGlvbihlKXt0aGlzLmVsJiYoMCxuLmRlZmF1bHQpKHRoaXMuZWwpLnRyaWdnZXIoXCJzZXR2YWx1ZVwiLFtlXSl9LGFuYWx5c2VNYXNrOm8uYW5hbHlzZU1hc2t9LHkuZXh0ZW5kRGVmYXVsdHM9ZnVuY3Rpb24oZSl7bi5kZWZhdWx0LmV4dGVuZCghMCx5LnByb3RvdHlwZS5kZWZhdWx0cyxlKX0seS5leHRlbmREZWZpbml0aW9ucz1mdW5jdGlvbihlKXtuLmRlZmF1bHQuZXh0ZW5kKCEwLHkucHJvdG90eXBlLmRlZmluaXRpb25zLGUpfSx5LmV4dGVuZEFsaWFzZXM9ZnVuY3Rpb24oZSl7bi5kZWZhdWx0LmV4dGVuZCghMCx5LnByb3RvdHlwZS5hbGlhc2VzLGUpfSx5LmZvcm1hdD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIHkodCkuZm9ybWF0KGUsaSl9LHkudW5tYXNrPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHkodCkudW5tYXNrZWR2YWx1ZShlKX0seS5pc1ZhbGlkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHkodCkuaXNWYWxpZChlKX0seS5yZW1vdmU9ZnVuY3Rpb24oZSl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWcuZ2V0RWxlbWVudEJ5SWQoZSl8fGcucXVlcnlTZWxlY3RvckFsbChlKSksKGU9ZS5ub2RlTmFtZT9bZV06ZSkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5pbnB1dG1hc2smJmUuaW5wdXRtYXNrLnJlbW92ZSgpfSkpfSx5LnNldFZhbHVlPWZ1bmN0aW9uKGUsdCl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWcuZ2V0RWxlbWVudEJ5SWQoZSl8fGcucXVlcnlTZWxlY3RvckFsbChlKSksKGU9ZS5ub2RlTmFtZT9bZV06ZSkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5pbnB1dG1hc2s/ZS5pbnB1dG1hc2suc2V0VmFsdWUodCk6KDAsbi5kZWZhdWx0KShlKS50cmlnZ2VyKFwic2V0dmFsdWVcIixbdF0pfSkpfSx5LmRlcGVuZGVuY3lMaWI9bi5kZWZhdWx0LHIuZGVmYXVsdC5JbnB1dG1hc2s9eTt2YXIgeD15O3QuZGVmYXVsdD14fSw1Mjk2OmZ1bmN0aW9uKGUsdCxpKXtmdW5jdGlvbiBhKGUpe3JldHVybiBhPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LGEoZSl9dmFyIG49aChpKDkzODApKSxyPWgoaSgyMzk0KSksbz1oKGkoODc0MSkpO2Z1bmN0aW9uIHMoZSx0KXtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIG49dFtpXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsKHI9bi5rZXksbz12b2lkIDAsbz1mdW5jdGlvbihlLHQpe2lmKFwib2JqZWN0XCIhPT1hKGUpfHxudWxsPT09ZSlyZXR1cm4gZTt2YXIgaT1lW1N5bWJvbC50b1ByaW1pdGl2ZV07aWYodm9pZCAwIT09aSl7dmFyIG49aS5jYWxsKGUsdHx8XCJkZWZhdWx0XCIpO2lmKFwib2JqZWN0XCIhPT1hKG4pKXJldHVybiBuO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKX1yZXR1cm4oXCJzdHJpbmdcIj09PXQ/U3RyaW5nOk51bWJlcikoZSl9KHIsXCJzdHJpbmdcIiksXCJzeW1ib2xcIj09PWEobyk/bzpTdHJpbmcobykpLG4pfXZhciByLG99ZnVuY3Rpb24gbChlLHQpe2lmKHQmJihcIm9iamVjdFwiPT09YSh0KXx8XCJmdW5jdGlvblwiPT10eXBlb2YgdCkpcmV0dXJuIHQ7aWYodm9pZCAwIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiBlfShlKX1mdW5jdGlvbiBjKGUpe3ZhciB0PVwiZnVuY3Rpb25cIj09dHlwZW9mIE1hcD9uZXcgTWFwOnZvaWQgMDtyZXR1cm4gYz1mdW5jdGlvbihlKXtpZihudWxsPT09ZXx8KGk9ZSwtMT09PUZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwoaSkuaW5kZXhPZihcIltuYXRpdmUgY29kZV1cIikpKXJldHVybiBlO3ZhciBpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO2lmKHZvaWQgMCE9PXQpe2lmKHQuaGFzKGUpKXJldHVybiB0LmdldChlKTt0LnNldChlLGEpfWZ1bmN0aW9uIGEoKXtyZXR1cm4gdShlLGFyZ3VtZW50cyxwKHRoaXMpLmNvbnN0cnVjdG9yKX1yZXR1cm4gYS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmEsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZChhLGUpfSxjKGUpfWZ1bmN0aW9uIHUoZSx0LGkpe3JldHVybiB1PWYoKT9SZWZsZWN0LmNvbnN0cnVjdC5iaW5kKCk6ZnVuY3Rpb24oZSx0LGkpe3ZhciBhPVtudWxsXTthLnB1c2guYXBwbHkoYSx0KTt2YXIgbj1uZXcoRnVuY3Rpb24uYmluZC5hcHBseShlLGEpKTtyZXR1cm4gaSYmZChuLGkucHJvdG90eXBlKSxufSx1LmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBmKCl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIFJlZmxlY3R8fCFSZWZsZWN0LmNvbnN0cnVjdClyZXR1cm4hMTtpZihSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIFByb3h5KXJldHVybiEwO3RyeXtyZXR1cm4gQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sW10sKGZ1bmN0aW9uKCl7fSkpKSwhMH1jYXRjaChlKXtyZXR1cm4hMX19ZnVuY3Rpb24gZChlLHQpe3JldHVybiBkPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuX19wcm90b19fPXQsZX0sZChlLHQpfWZ1bmN0aW9uIHAoZSl7cmV0dXJuIHA9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSl9LHAoZSl9ZnVuY3Rpb24gaChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHY9bi5kZWZhdWx0LmRvY3VtZW50O2lmKG8uZGVmYXVsdCYmdiYmdi5oZWFkJiZ2LmhlYWQuYXR0YWNoU2hhZG93JiZuLmRlZmF1bHQuY3VzdG9tRWxlbWVudHMmJnZvaWQgMD09PW4uZGVmYXVsdC5jdXN0b21FbGVtZW50cy5nZXQoXCJpbnB1dC1tYXNrXCIpKXt2YXIgbT1mdW5jdGlvbihlKXshZnVuY3Rpb24oZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdCYmZChlLHQpfSh1LGUpO3ZhciB0LGksYSxuLG8sYz0odD11LGk9ZigpLGZ1bmN0aW9uKCl7dmFyIGUsYT1wKHQpO2lmKGkpe3ZhciBuPXAodGhpcykuY29uc3RydWN0b3I7ZT1SZWZsZWN0LmNvbnN0cnVjdChhLGFyZ3VtZW50cyxuKX1lbHNlIGU9YS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGwodGhpcyxlKX0pO2Z1bmN0aW9uIHUoKXt2YXIgZTshZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHUpO3ZhciB0PShlPWMuY2FsbCh0aGlzKSkuZ2V0QXR0cmlidXRlTmFtZXMoKSxpPWUuYXR0YWNoU2hhZG93KHttb2RlOlwiY2xvc2VkXCJ9KSxhPXYuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO2Zvcih2YXIgbiBpbiBhLnR5cGU9XCJ0ZXh0XCIsaS5hcHBlbmRDaGlsZChhKSx0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pJiZhLnNldEF0dHJpYnV0ZSh0W25dLGUuZ2V0QXR0cmlidXRlKHRbbl0pKTt2YXIgbz1uZXcgci5kZWZhdWx0O3JldHVybiBvLmRhdGFBdHRyaWJ1dGU9XCJcIixvLm1hc2soYSksYS5pbnB1dG1hc2suc2hhZG93Um9vdD1pLGV9cmV0dXJuIGE9dSxuJiZzKGEucHJvdG90eXBlLG4pLG8mJnMoYSxvKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGF9KGMoSFRNTEVsZW1lbnQpKTtuLmRlZmF1bHQuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwiaW5wdXQtbWFza1wiLG0pfX0sMjgzOTpmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIGkoZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7dmFyIGk9bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9aSl7dmFyIGEsbixyLG8scz1bXSxsPSEwLGM9ITE7dHJ5e2lmKHI9KGk9aS5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QoaSkhPT1pKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KGE9ci5jYWxsKGkpKS5kb25lKSYmKHMucHVzaChhLnZhbHVlKSxzLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG49ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9aS5yZXR1cm4mJihvPWkucmV0dXJuKCksT2JqZWN0KG8pIT09bykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBufX1yZXR1cm4gc319KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBhKGUsdCk7dmFyIGk9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO1wiT2JqZWN0XCI9PT1pJiZlLmNvbnN0cnVjdG9yJiYoaT1lLmNvbnN0cnVjdG9yLm5hbWUpO2lmKFwiTWFwXCI9PT1pfHxcIlNldFwiPT09aSlyZXR1cm4gQXJyYXkuZnJvbShlKTtpZihcIkFyZ3VtZW50c1wiPT09aXx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QoaSkpcmV0dXJuIGEoZSx0KX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIGEoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIGk9MCxhPW5ldyBBcnJheSh0KTtpPHQ7aSsrKWFbaV09ZVtpXTtyZXR1cm4gYX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmtleXM9dC5rZXlDb2RlPXZvaWQgMCx0LnRvS2V5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHJbZV18fCh0P1N0cmluZy5mcm9tQ2hhckNvZGUoZSk6U3RyaW5nLmZyb21DaGFyQ29kZShlKS50b0xvd2VyQ2FzZSgpKX0sdC50b0tleUNvZGU9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV19O3ZhciBuPXtBbHRHcmFwaDoxOCxBcnJvd0Rvd246NDAsQXJyb3dMZWZ0OjM3LEFycm93UmlnaHQ6MzksQXJyb3dVcDozOCxCYWNrc3BhY2U6OCxCQUNLU1BBQ0VfU0FGQVJJOjEyNyxDYXBzTG9jazoyMCxEZWxldGU6NDYsRW5kOjM1LEVudGVyOjEzLEVzY2FwZToyNyxIb21lOjM2LEluc2VydDo0NSxQYWdlRG93bjozNCxQYWdlVXA6MzMsU3BhY2U6MzIsVGFiOjksYzo2Nyx4Ojg4LHo6OTAsU2hpZnQ6MTYsQ29udHJvbDoxNyxBbHQ6MTgsUGF1c2U6MTksTWV0YV9MRUZUOjkxLE1ldGFfUklHSFQ6OTIsQ29udGV4dE1lbnU6OTMsUHJvY2VzczoyMjksVW5pZGVudGlmaWVkOjIyOSxGMToxMTIsRjI6MTEzLEYzOjExNCxGNDoxMTUsRjU6MTE2LEY2OjExNyxGNzoxMTgsRjg6MTE5LEY5OjEyMCxGMTA6MTIxLEYxMToxMjIsRjEyOjEyM307dC5rZXlDb2RlPW47dmFyIHI9T2JqZWN0LmVudHJpZXMobikucmVkdWNlKChmdW5jdGlvbihlLHQpe3ZhciBhPWkodCwyKSxuPWFbMF0scj1hWzFdO3JldHVybiBlW3JdPXZvaWQgMD09PWVbcl0/bjplW3JdLGV9KSx7fSksbz1PYmplY3QuZW50cmllcyhuKS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7dmFyIGE9aSh0LDIpLG49YVswXTthWzFdO3JldHVybiBlW25dPVwiU3BhY2VcIj09PW4/XCIgXCI6bixlfSkse30pO3Qua2V5cz1vfSwyMzkxOmZ1bmN0aW9uKGUsdCxpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmFuYWx5c2VNYXNrPWZ1bmN0aW9uKGUsdCxpKXt2YXIgYSxvLHMsbCxjLHUsZj0vKD86Wz8qK118XFx7WzAtOSsqXSsoPzosWzAtOSsqXSopPyg/OlxcfFswLTkrKl0qKT9cXH0pfFteLj8qK14ke1tdKCl8XFxcXF0rfC4vZyxkPS9cXFtcXF4/XT8oPzpbXlxcXFxcXF1dK3xcXFxcW1xcU1xcc10/KSpdP3xcXFxcKD86MCg/OlswLTNdWzAtN117MCwyfXxbNC03XVswLTddPyk/fFsxLTldWzAtOV0qfHhbMC05QS1GYS1mXXsyfXx1WzAtOUEtRmEtZl17NH18Y1tBLVphLXpdfFtcXFNcXHNdPyl8XFwoKD86XFw/Wzo9IV0/KT98KD86Wz8qK118XFx7WzAtOV0rKD86LFswLTldKik/XFx9KVxcPz98W14uPyorXiR7WygpfFxcXFxdK3wuL2cscD0hMSxoPW5ldyBuLmRlZmF1bHQsdj1bXSxtPVtdLGc9ITE7ZnVuY3Rpb24gayhlLGEsbil7bj12b2lkIDAhPT1uP246ZS5tYXRjaGVzLmxlbmd0aDt2YXIgbz1lLm1hdGNoZXNbbi0xXTtpZih0KXtpZigwPT09YS5pbmRleE9mKFwiW1wiKXx8cCYmL1xcXFxkfFxcXFxzfFxcXFx3fFxcXFxwL2kudGVzdChhKXx8XCIuXCI9PT1hKXt2YXIgcz1pLmNhc2luZz9cImlcIjpcIlwiOy9eXFxcXHBcXHsuKn0kL2kudGVzdChhKSYmKHMrPVwidVwiKSxlLm1hdGNoZXMuc3BsaWNlKG4rKywwLHtmbjpuZXcgUmVnRXhwKGEscyksc3RhdGljOiExLG9wdGlvbmFsaXR5OiExLG5ld0Jsb2NrTWFya2VyOnZvaWQgMD09PW8/XCJtYXN0ZXJcIjpvLmRlZiE9PWEsY2FzaW5nOm51bGwsZGVmOmEscGxhY2Vob2xkZXI6dm9pZCAwLG5hdGl2ZURlZjphfSl9ZWxzZSBwJiYoYT1hW2EubGVuZ3RoLTFdKSxhLnNwbGl0KFwiXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQsYSl7bz1lLm1hdGNoZXNbbi0xXSxlLm1hdGNoZXMuc3BsaWNlKG4rKywwLHtmbjovW2Etel0vaS50ZXN0KGkuc3RhdGljRGVmaW5pdGlvblN5bWJvbHx8dCk/bmV3IFJlZ0V4cChcIltcIisoaS5zdGF0aWNEZWZpbml0aW9uU3ltYm9sfHx0KStcIl1cIixpLmNhc2luZz9cImlcIjpcIlwiKTpudWxsLHN0YXRpYzohMCxvcHRpb25hbGl0eTohMSxuZXdCbG9ja01hcmtlcjp2b2lkIDA9PT1vP1wibWFzdGVyXCI6by5kZWYhPT10JiYhMCE9PW8uc3RhdGljLGNhc2luZzpudWxsLGRlZjppLnN0YXRpY0RlZmluaXRpb25TeW1ib2x8fHQscGxhY2Vob2xkZXI6dm9pZCAwIT09aS5zdGF0aWNEZWZpbml0aW9uU3ltYm9sP3Q6dm9pZCAwLG5hdGl2ZURlZjoocD9cIidcIjpcIlwiKSt0fSl9KSk7cD0hMX1lbHNle3ZhciBsPWkuZGVmaW5pdGlvbnMmJmkuZGVmaW5pdGlvbnNbYV18fGkudXNlUHJvdG90eXBlRGVmaW5pdGlvbnMmJnIuZGVmYXVsdC5wcm90b3R5cGUuZGVmaW5pdGlvbnNbYV07bCYmIXA/ZS5tYXRjaGVzLnNwbGljZShuKyssMCx7Zm46bC52YWxpZGF0b3I/XCJzdHJpbmdcIj09dHlwZW9mIGwudmFsaWRhdG9yP25ldyBSZWdFeHAobC52YWxpZGF0b3IsaS5jYXNpbmc/XCJpXCI6XCJcIik6bmV3IGZ1bmN0aW9uKCl7dGhpcy50ZXN0PWwudmFsaWRhdG9yfTpuZXcgUmVnRXhwKFwiLlwiKSxzdGF0aWM6bC5zdGF0aWN8fCExLG9wdGlvbmFsaXR5Omwub3B0aW9uYWx8fCExLGRlZk9wdGlvbmFsaXR5Omwub3B0aW9uYWx8fCExLG5ld0Jsb2NrTWFya2VyOnZvaWQgMD09PW98fGwub3B0aW9uYWw/XCJtYXN0ZXJcIjpvLmRlZiE9PShsLmRlZmluaXRpb25TeW1ib2x8fGEpLGNhc2luZzpsLmNhc2luZyxkZWY6bC5kZWZpbml0aW9uU3ltYm9sfHxhLHBsYWNlaG9sZGVyOmwucGxhY2Vob2xkZXIsbmF0aXZlRGVmOmEsZ2VuZXJhdGVkOmwuZ2VuZXJhdGVkfSk6KGUubWF0Y2hlcy5zcGxpY2UobisrLDAse2ZuOi9bYS16XS9pLnRlc3QoaS5zdGF0aWNEZWZpbml0aW9uU3ltYm9sfHxhKT9uZXcgUmVnRXhwKFwiW1wiKyhpLnN0YXRpY0RlZmluaXRpb25TeW1ib2x8fGEpK1wiXVwiLGkuY2FzaW5nP1wiaVwiOlwiXCIpOm51bGwsc3RhdGljOiEwLG9wdGlvbmFsaXR5OiExLG5ld0Jsb2NrTWFya2VyOnZvaWQgMD09PW8/XCJtYXN0ZXJcIjpvLmRlZiE9PWEmJiEwIT09by5zdGF0aWMsY2FzaW5nOm51bGwsZGVmOmkuc3RhdGljRGVmaW5pdGlvblN5bWJvbHx8YSxwbGFjZWhvbGRlcjp2b2lkIDAhPT1pLnN0YXRpY0RlZmluaXRpb25TeW1ib2w/YTp2b2lkIDAsbmF0aXZlRGVmOihwP1wiJ1wiOlwiXCIpK2F9KSxwPSExKX19ZnVuY3Rpb24geSgpe2lmKHYubGVuZ3RoPjApe2lmKGsobD12W3YubGVuZ3RoLTFdLG8pLGwuaXNBbHRlcm5hdG9yKXtjPXYucG9wKCk7Zm9yKHZhciBlPTA7ZTxjLm1hdGNoZXMubGVuZ3RoO2UrKyljLm1hdGNoZXNbZV0uaXNHcm91cCYmKGMubWF0Y2hlc1tlXS5pc0dyb3VwPSExKTt2Lmxlbmd0aD4wPyhsPXZbdi5sZW5ndGgtMV0pLm1hdGNoZXMucHVzaChjKTpoLm1hdGNoZXMucHVzaChjKX19ZWxzZSBrKGgsbyl9ZnVuY3Rpb24gYihlKXt2YXIgdD1uZXcgbi5kZWZhdWx0KCEwKTtyZXR1cm4gdC5vcGVuR3JvdXA9ITEsdC5tYXRjaGVzPWUsdH1mdW5jdGlvbiB4KCl7aWYoKHM9di5wb3AoKSkub3Blbkdyb3VwPSExLHZvaWQgMCE9PXMpaWYodi5sZW5ndGg+MCl7aWYoKGw9dlt2Lmxlbmd0aC0xXSkubWF0Y2hlcy5wdXNoKHMpLGwuaXNBbHRlcm5hdG9yKXtmb3IodmFyIGU9KGM9di5wb3AoKSkubWF0Y2hlc1swXS5tYXRjaGVzP2MubWF0Y2hlc1swXS5tYXRjaGVzLmxlbmd0aDoxLHQ9MDt0PGMubWF0Y2hlcy5sZW5ndGg7dCsrKWMubWF0Y2hlc1t0XS5pc0dyb3VwPSExLGMubWF0Y2hlc1t0XS5hbHRlcm5hdG9yR3JvdXA9ITEsbnVsbD09PWkua2VlcFN0YXRpYyYmZTwoYy5tYXRjaGVzW3RdLm1hdGNoZXM/Yy5tYXRjaGVzW3RdLm1hdGNoZXMubGVuZ3RoOjEpJiYoaS5rZWVwU3RhdGljPSEwKSxlPWMubWF0Y2hlc1t0XS5tYXRjaGVzP2MubWF0Y2hlc1t0XS5tYXRjaGVzLmxlbmd0aDoxO3YubGVuZ3RoPjA/KGw9dlt2Lmxlbmd0aC0xXSkubWF0Y2hlcy5wdXNoKGMpOmgubWF0Y2hlcy5wdXNoKGMpfX1lbHNlIGgubWF0Y2hlcy5wdXNoKHMpO2Vsc2UgeSgpfWZ1bmN0aW9uIFAoZSl7dmFyIHQ9ZS5wb3AoKTtyZXR1cm4gdC5pc1F1YW50aWZpZXImJih0PWIoW2UucG9wKCksdF0pKSx0fXQmJihpLm9wdGlvbmFsbWFya2VyWzBdPXZvaWQgMCxpLm9wdGlvbmFsbWFya2VyWzFdPXZvaWQgMCk7Zm9yKDthPXQ/ZC5leGVjKGUpOmYuZXhlYyhlKTspe2lmKG89YVswXSx0KXtzd2l0Y2goby5jaGFyQXQoMCkpe2Nhc2VcIj9cIjpvPVwiezAsMX1cIjticmVhaztjYXNlXCIrXCI6Y2FzZVwiKlwiOm89XCJ7XCIrbytcIn1cIjticmVhaztjYXNlXCJ8XCI6aWYoMD09PXYubGVuZ3RoKXt2YXIgdz1iKGgubWF0Y2hlcyk7dy5vcGVuR3JvdXA9ITAsdi5wdXNoKHcpLGgubWF0Y2hlcz1bXSxnPSEwfX1zd2l0Y2gobyl7Y2FzZVwiXFxcXGRcIjpvPVwiWzAtOV1cIjticmVhaztjYXNlXCJcXFxccFwiOm8rPWQuZXhlYyhlKVswXSxvKz1kLmV4ZWMoZSlbMF19fWlmKHApeSgpO2Vsc2Ugc3dpdGNoKG8uY2hhckF0KDApKXtjYXNlXCIkXCI6Y2FzZVwiXlwiOnR8fHkoKTticmVhaztjYXNlIGkuZXNjYXBlQ2hhcjpwPSEwLHQmJnkoKTticmVhaztjYXNlIGkub3B0aW9uYWxtYXJrZXJbMV06Y2FzZSBpLmdyb3VwbWFya2VyWzFdOngoKTticmVhaztjYXNlIGkub3B0aW9uYWxtYXJrZXJbMF06di5wdXNoKG5ldyBuLmRlZmF1bHQoITEsITApKTticmVhaztjYXNlIGkuZ3JvdXBtYXJrZXJbMF06di5wdXNoKG5ldyBuLmRlZmF1bHQoITApKTticmVhaztjYXNlIGkucXVhbnRpZmllcm1hcmtlclswXTp2YXIgUz1uZXcgbi5kZWZhdWx0KCExLCExLCEwKSxfPShvPW8ucmVwbGFjZSgvW3t9P10vZyxcIlwiKSkuc3BsaXQoXCJ8XCIpLE09X1swXS5zcGxpdChcIixcIiksTz1pc05hTihNWzBdKT9NWzBdOnBhcnNlSW50KE1bMF0pLEU9MT09PU0ubGVuZ3RoP086aXNOYU4oTVsxXSk/TVsxXTpwYXJzZUludChNWzFdKSxUPWlzTmFOKF9bMV0pP19bMV06cGFyc2VJbnQoX1sxXSk7XCIqXCIhPT1PJiZcIitcIiE9PU98fChPPVwiKlwiPT09RT8wOjEpLFMucXVhbnRpZmllcj17bWluOk8sbWF4OkUsaml0OlR9O3ZhciBqPXYubGVuZ3RoPjA/dlt2Lmxlbmd0aC0xXS5tYXRjaGVzOmgubWF0Y2hlczsoYT1qLnBvcCgpKS5pc0dyb3VwfHwoYT1iKFthXSkpLGoucHVzaChhKSxqLnB1c2goUyk7YnJlYWs7Y2FzZSBpLmFsdGVybmF0b3JtYXJrZXI6aWYodi5sZW5ndGg+MCl7dmFyIEQ9KGw9dlt2Lmxlbmd0aC0xXSkubWF0Y2hlc1tsLm1hdGNoZXMubGVuZ3RoLTFdO3U9bC5vcGVuR3JvdXAmJih2b2lkIDA9PT1ELm1hdGNoZXN8fCExPT09RC5pc0dyb3VwJiYhMT09PUQuaXNBbHRlcm5hdG9yKT92LnBvcCgpOlAobC5tYXRjaGVzKX1lbHNlIHU9UChoLm1hdGNoZXMpO2lmKHUuaXNBbHRlcm5hdG9yKXYucHVzaCh1KTtlbHNlIGlmKHUuYWx0ZXJuYXRvckdyb3VwPyhjPXYucG9wKCksdS5hbHRlcm5hdG9yR3JvdXA9ITEpOmM9bmV3IG4uZGVmYXVsdCghMSwhMSwhMSwhMCksYy5tYXRjaGVzLnB1c2godSksdi5wdXNoKGMpLHUub3Blbkdyb3VwKXt1Lm9wZW5Hcm91cD0hMTt2YXIgQT1uZXcgbi5kZWZhdWx0KCEwKTtBLmFsdGVybmF0b3JHcm91cD0hMCx2LnB1c2goQSl9YnJlYWs7ZGVmYXVsdDp5KCl9fWcmJngoKTtmb3IoO3YubGVuZ3RoPjA7KXM9di5wb3AoKSxoLm1hdGNoZXMucHVzaChzKTtoLm1hdGNoZXMubGVuZ3RoPjAmJighZnVuY3Rpb24gZShhKXthJiZhLm1hdGNoZXMmJmEubWF0Y2hlcy5mb3JFYWNoKChmdW5jdGlvbihuLHIpe3ZhciBvPWEubWF0Y2hlc1tyKzFdOyh2b2lkIDA9PT1vfHx2b2lkIDA9PT1vLm1hdGNoZXN8fCExPT09by5pc1F1YW50aWZpZXIpJiZuJiZuLmlzR3JvdXAmJihuLmlzR3JvdXA9ITEsdHx8KGsobixpLmdyb3VwbWFya2VyWzBdLDApLCEwIT09bi5vcGVuR3JvdXAmJmsobixpLmdyb3VwbWFya2VyWzFdKSkpLGUobil9KSl9KGgpLG0ucHVzaChoKSk7KGkubnVtZXJpY0lucHV0fHxpLmlzUlRMKSYmZnVuY3Rpb24gZSh0KXtmb3IodmFyIGEgaW4gdC5tYXRjaGVzPXQubWF0Y2hlcy5yZXZlcnNlKCksdC5tYXRjaGVzKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0Lm1hdGNoZXMsYSkpe3ZhciBuPXBhcnNlSW50KGEpO2lmKHQubWF0Y2hlc1thXS5pc1F1YW50aWZpZXImJnQubWF0Y2hlc1tuKzFdJiZ0Lm1hdGNoZXNbbisxXS5pc0dyb3VwKXt2YXIgcj10Lm1hdGNoZXNbYV07dC5tYXRjaGVzLnNwbGljZShhLDEpLHQubWF0Y2hlcy5zcGxpY2UobisxLDAscil9dm9pZCAwIT09dC5tYXRjaGVzW2FdLm1hdGNoZXM/dC5tYXRjaGVzW2FdPWUodC5tYXRjaGVzW2FdKTp0Lm1hdGNoZXNbYV09KChvPXQubWF0Y2hlc1thXSk9PT1pLm9wdGlvbmFsbWFya2VyWzBdP289aS5vcHRpb25hbG1hcmtlclsxXTpvPT09aS5vcHRpb25hbG1hcmtlclsxXT9vPWkub3B0aW9uYWxtYXJrZXJbMF06bz09PWkuZ3JvdXBtYXJrZXJbMF0/bz1pLmdyb3VwbWFya2VyWzFdOm89PT1pLmdyb3VwbWFya2VyWzFdJiYobz1pLmdyb3VwbWFya2VyWzBdKSxvKX12YXIgbztyZXR1cm4gdH0obVswXSk7cmV0dXJuIG19LHQuZ2VuZXJhdGVNYXNrU2V0PWZ1bmN0aW9uKGUsdCl7dmFyIGk7ZnVuY3Rpb24gbihlLGksbil7dmFyIHMsbCxjPSExO3JldHVybiBudWxsIT09ZSYmXCJcIiE9PWV8fCgoYz1udWxsIT09bi5yZWdleCk/ZT0oZT1uLnJlZ2V4KS5yZXBsYWNlKC9eKFxcXikoLiopKFxcJCkkLyxcIiQyXCIpOihjPSEwLGU9XCIuKlwiKSksMT09PWUubGVuZ3RoJiYhMT09PW4uZ3JlZWR5JiYwIT09bi5yZXBlYXQmJihuLnBsYWNlaG9sZGVyPVwiXCIpLGU9ZnVuY3Rpb24oZSx0KXt2YXIgaT10LnJlcGVhdCxhPXQuZ3JvdXBtYXJrZXIsbj10LnF1YW50aWZpZXJtYXJrZXIscj10LmtlZXBTdGF0aWM7aWYoaT4wfHxcIipcIj09PWl8fFwiK1wiPT09aSl7dmFyIHM9XCIqXCI9PT1pPzA6XCIrXCI9PT1pPzE6aTtlPWFbMF0rZSthWzFdK25bMF0rcytcIixcIitpK25bMV19aWYoITA9PT1yKXt2YXIgbD1lLm1hdGNoKG5ldyBSZWdFeHAoXCIoLilcXFxcWyhbXlxcXFxdXSopXFxcXF1cIixcImdcIikpO2wmJmwuZm9yRWFjaCgoZnVuY3Rpb24odCxpKXt2YXIgYT10LnNwbGl0KFwiW1wiKSxuPWFbMF0scj1hWzFdLnJlcGxhY2UoXCJdXCIsXCJcIik7ZT1lLnJlcGxhY2UobmV3IFJlZ0V4cChcIlwiLmNvbmNhdCgoMCxvLmRlZmF1bHQpKG4pLFwiXFxcXFtcIikuY29uY2F0KCgwLG8uZGVmYXVsdCkociksXCJcXFxcXVwiKSksbi5jaGFyQXQoMCk9PT1yLmNoYXJBdCgwKT9cIihcIi5jb25jYXQobixcInxcIikuY29uY2F0KG4pLmNvbmNhdChyLFwiKVwiKTpcIlwiLmNvbmNhdChuLFwiW1wiKS5jb25jYXQocixcIl1cIikpfSkpfXJldHVybiBlfShlLG4pLGw9Yz9cInJlZ2V4X1wiK24ucmVnZXg6bi5udW1lcmljSW5wdXQ/ZS5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKTplLG51bGwhPT1uLmtlZXBTdGF0aWMmJihsPVwia3NfXCIrbi5rZWVwU3RhdGljK2wpLHZvaWQgMD09PXIuZGVmYXVsdC5wcm90b3R5cGUubWFza3NDYWNoZVtsXXx8ITA9PT10PyhzPXttYXNrOmUsbWFza1Rva2VuOnIuZGVmYXVsdC5wcm90b3R5cGUuYW5hbHlzZU1hc2soZSxjLG4pLHZhbGlkUG9zaXRpb25zOltdLF9idWZmZXI6dm9pZCAwLGJ1ZmZlcjp2b2lkIDAsdGVzdHM6e30sZXhjbHVkZXM6e30sbWV0YWRhdGE6aSxtYXNrTGVuZ3RoOnZvaWQgMCxqaXRPZmZzZXQ6e319LCEwIT09dCYmKHIuZGVmYXVsdC5wcm90b3R5cGUubWFza3NDYWNoZVtsXT1zLHM9YS5kZWZhdWx0LmV4dGVuZCghMCx7fSxyLmRlZmF1bHQucHJvdG90eXBlLm1hc2tzQ2FjaGVbbF0pKSk6cz1hLmRlZmF1bHQuZXh0ZW5kKCEwLHt9LHIuZGVmYXVsdC5wcm90b3R5cGUubWFza3NDYWNoZVtsXSksc31cImZ1bmN0aW9uXCI9PXR5cGVvZiBlLm1hc2smJihlLm1hc2s9ZS5tYXNrKGUpKTtpZihBcnJheS5pc0FycmF5KGUubWFzaykpe2lmKGUubWFzay5sZW5ndGg+MSl7bnVsbD09PWUua2VlcFN0YXRpYyYmKGUua2VlcFN0YXRpYz0hMCk7dmFyIHM9ZS5ncm91cG1hcmtlclswXTtyZXR1cm4oZS5pc1JUTD9lLm1hc2sucmV2ZXJzZSgpOmUubWFzaykuZm9yRWFjaCgoZnVuY3Rpb24odCl7cy5sZW5ndGg+MSYmKHMrPWUuYWx0ZXJuYXRvcm1hcmtlciksdm9pZCAwIT09dC5tYXNrJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0Lm1hc2s/cys9dC5tYXNrOnMrPXR9KSksbihzKz1lLmdyb3VwbWFya2VyWzFdLGUubWFzayxlKX1lLm1hc2s9ZS5tYXNrLnBvcCgpfWk9ZS5tYXNrJiZ2b2lkIDAhPT1lLm1hc2subWFzayYmXCJmdW5jdGlvblwiIT10eXBlb2YgZS5tYXNrLm1hc2s/bihlLm1hc2subWFzayxlLm1hc2ssZSk6bihlLm1hc2ssZS5tYXNrLGUpO251bGw9PT1lLmtlZXBTdGF0aWMmJihlLmtlZXBTdGF0aWM9ITEpO3JldHVybiBpfTt2YXIgYT1zKGkoNDk2MykpLG49cyhpKDk2OTUpKSxyPXMoaSgyMzk0KSksbz1zKGkoNzE4NCkpO2Z1bmN0aW9uIHMoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fX0sMTU3OmZ1bmN0aW9uKGUsdCxpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0Lm1hc2s9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5vcHRzLGk9dGhpcy5lbCx1PXRoaXMuZGVwZW5kZW5jeUxpYjtvLkV2ZW50UnVsZXIub2ZmKGkpO3ZhciBmPWZ1bmN0aW9uKHQsaSl7XCJ0ZXh0YXJlYVwiIT09dC50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJmkuaWdub3JhYmxlcy5wdXNoKGEua2V5cy5FbnRlcik7dmFyIHM9dC5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpLGw9XCJpbnB1dFwiPT09dC50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJmkuc3VwcG9ydHNJbnB1dFR5cGUuaW5jbHVkZXMocyl8fHQuaXNDb250ZW50RWRpdGFibGV8fFwidGV4dGFyZWFcIj09PXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO2lmKCFsKWlmKFwiaW5wdXRcIj09PXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7Yy5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIscyksbD1cInRleHRcIj09PWMudHlwZSxjPW51bGx9ZWxzZSBsPVwicGFydGlhbFwiO3JldHVybiExIT09bD9mdW5jdGlvbih0KXt2YXIgYSxzO2Z1bmN0aW9uIGwoKXtyZXR1cm4gdGhpcy5pbnB1dG1hc2s/dGhpcy5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrP3RoaXMuaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKTotMSE9PW4uZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChlKXx8ITAhPT1pLm51bGxhYmxlPyh0aGlzLmlucHV0bWFzay5zaGFkb3dSb290fHx0aGlzLm93bmVyRG9jdW1lbnQpLmFjdGl2ZUVsZW1lbnQ9PT10aGlzJiZpLmNsZWFyTWFza09uTG9zdEZvY3VzPyhlLmlzUlRMP3IuY2xlYXJPcHRpb25hbFRhaWwuY2FsbChlLG4uZ2V0QnVmZmVyLmNhbGwoZSkuc2xpY2UoKSkucmV2ZXJzZSgpOnIuY2xlYXJPcHRpb25hbFRhaWwuY2FsbChlLG4uZ2V0QnVmZmVyLmNhbGwoZSkuc2xpY2UoKSkpLmpvaW4oXCJcIik6YS5jYWxsKHRoaXMpOlwiXCI6YS5jYWxsKHRoaXMpfWZ1bmN0aW9uIGMoZSl7cy5jYWxsKHRoaXMsZSksdGhpcy5pbnB1dG1hc2smJigwLHIuYXBwbHlJbnB1dFZhbHVlKSh0aGlzLGUpfWlmKCF0LmlucHV0bWFzay5fX3ZhbHVlR2V0KXtpZighMCE9PWkubm9WYWx1ZVBhdGNoaW5nKXtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKXt2YXIgZj1PYmplY3QuZ2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPYmplY3QuZ2V0UHJvdG90eXBlT2YodCksXCJ2YWx1ZVwiKTp2b2lkIDA7ZiYmZi5nZXQmJmYuc2V0PyhhPWYuZ2V0LHM9Zi5zZXQsT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJ2YWx1ZVwiLHtnZXQ6bCxzZXQ6Yyxjb25maWd1cmFibGU6ITB9KSk6XCJpbnB1dFwiIT09dC50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJihhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGV4dENvbnRlbnR9LHM9ZnVuY3Rpb24oZSl7dGhpcy50ZXh0Q29udGVudD1lfSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcInZhbHVlXCIse2dldDpsLHNldDpjLGNvbmZpZ3VyYWJsZTohMH0pKX1lbHNlIGRvY3VtZW50Ll9fbG9va3VwR2V0dGVyX18mJnQuX19sb29rdXBHZXR0ZXJfXyhcInZhbHVlXCIpJiYoYT10Ll9fbG9va3VwR2V0dGVyX18oXCJ2YWx1ZVwiKSxzPXQuX19sb29rdXBTZXR0ZXJfXyhcInZhbHVlXCIpLHQuX19kZWZpbmVHZXR0ZXJfXyhcInZhbHVlXCIsbCksdC5fX2RlZmluZVNldHRlcl9fKFwidmFsdWVcIixjKSk7dC5pbnB1dG1hc2suX192YWx1ZUdldD1hLHQuaW5wdXRtYXNrLl9fdmFsdWVTZXQ9c310LmlucHV0bWFzay5fdmFsdWVHZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGUuaXNSVEwmJiEwIT09dD9hLmNhbGwodGhpcy5lbCkuc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIik6YS5jYWxsKHRoaXMuZWwpfSx0LmlucHV0bWFzay5fdmFsdWVTZXQ9ZnVuY3Rpb24odCxpKXtzLmNhbGwodGhpcy5lbCxudWxsPT10P1wiXCI6ITAhPT1pJiZlLmlzUlRMP3Quc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIik6dCl9LHZvaWQgMD09PWEmJihhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWV9LHM9ZnVuY3Rpb24oZSl7dGhpcy52YWx1ZT1lfSxmdW5jdGlvbih0KXtpZih1LnZhbEhvb2tzJiYodm9pZCAwPT09dS52YWxIb29rc1t0XXx8ITAhPT11LnZhbEhvb2tzW3RdLmlucHV0bWFza3BhdGNoKSl7dmFyIGE9dS52YWxIb29rc1t0XSYmdS52YWxIb29rc1t0XS5nZXQ/dS52YWxIb29rc1t0XS5nZXQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUudmFsdWV9LG89dS52YWxIb29rc1t0XSYmdS52YWxIb29rc1t0XS5zZXQ/dS52YWxIb29rc1t0XS5zZXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS52YWx1ZT10LGV9O3UudmFsSG9va3NbdF09e2dldDpmdW5jdGlvbih0KXtpZih0LmlucHV0bWFzayl7aWYodC5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrKXJldHVybiB0LmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCk7dmFyIHI9YSh0KTtyZXR1cm4tMSE9PW4uZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChlLHZvaWQgMCx2b2lkIDAsdC5pbnB1dG1hc2subWFza3NldC52YWxpZFBvc2l0aW9ucyl8fCEwIT09aS5udWxsYWJsZT9yOlwiXCJ9cmV0dXJuIGEodCl9LHNldDpmdW5jdGlvbihlLHQpe3ZhciBpPW8oZSx0KTtyZXR1cm4gZS5pbnB1dG1hc2smJigwLHIuYXBwbHlJbnB1dFZhbHVlKShlLHQpLGl9LGlucHV0bWFza3BhdGNoOiEwfX19KHQudHlwZSksZnVuY3Rpb24oZSl7by5FdmVudFJ1bGVyLm9uKGUsXCJtb3VzZWVudGVyXCIsKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuaW5wdXRtYXNrLl92YWx1ZUdldCghMCk7dCE9KGUuaW5wdXRtYXNrLmlzUlRMP24uZ2V0QnVmZmVyLmNhbGwoZS5pbnB1dG1hc2spLnNsaWNlKCkucmV2ZXJzZSgpOm4uZ2V0QnVmZmVyLmNhbGwoZS5pbnB1dG1hc2spKS5qb2luKFwiXCIpJiYoMCxyLmFwcGx5SW5wdXRWYWx1ZSkoZSx0KX0pKX0odCkpfX0odCk6dC5pbnB1dG1hc2s9dm9pZCAwLGx9KGksdCk7aWYoITEhPT1mKXtlLm9yaWdpbmFsUGxhY2Vob2xkZXI9aS5wbGFjZWhvbGRlcixlLm1heExlbmd0aD12b2lkIDAhPT1pP2kubWF4TGVuZ3RoOnZvaWQgMCwtMT09PWUubWF4TGVuZ3RoJiYoZS5tYXhMZW5ndGg9dm9pZCAwKSxcImlucHV0TW9kZVwiaW4gaSYmbnVsbD09PWkuZ2V0QXR0cmlidXRlKFwiaW5wdXRtb2RlXCIpJiYoaS5pbnB1dE1vZGU9dC5pbnB1dG1vZGUsaS5zZXRBdHRyaWJ1dGUoXCJpbnB1dG1vZGVcIix0LmlucHV0bW9kZSkpLCEwPT09ZiYmKHQuc2hvd01hc2tPbkZvY3VzPXQuc2hvd01hc2tPbkZvY3VzJiYtMT09PVtcImNjLW51bWJlclwiLFwiY2MtZXhwXCJdLmluZGV4T2YoaS5hdXRvY29tcGxldGUpLHMuaXBob25lJiYodC5pbnNlcnRNb2RlVmlzdWFsPSExLGkuc2V0QXR0cmlidXRlKFwiYXV0b2NvcnJlY3RcIixcIm9mZlwiKSksby5FdmVudFJ1bGVyLm9uKGksXCJzdWJtaXRcIixjLkV2ZW50SGFuZGxlcnMuc3VibWl0RXZlbnQpLG8uRXZlbnRSdWxlci5vbihpLFwicmVzZXRcIixjLkV2ZW50SGFuZGxlcnMucmVzZXRFdmVudCksby5FdmVudFJ1bGVyLm9uKGksXCJibHVyXCIsYy5FdmVudEhhbmRsZXJzLmJsdXJFdmVudCksby5FdmVudFJ1bGVyLm9uKGksXCJmb2N1c1wiLGMuRXZlbnRIYW5kbGVycy5mb2N1c0V2ZW50KSxvLkV2ZW50UnVsZXIub24oaSxcImludmFsaWRcIixjLkV2ZW50SGFuZGxlcnMuaW52YWxpZEV2ZW50KSxvLkV2ZW50UnVsZXIub24oaSxcImNsaWNrXCIsYy5FdmVudEhhbmRsZXJzLmNsaWNrRXZlbnQpLG8uRXZlbnRSdWxlci5vbihpLFwibW91c2VsZWF2ZVwiLGMuRXZlbnRIYW5kbGVycy5tb3VzZWxlYXZlRXZlbnQpLG8uRXZlbnRSdWxlci5vbihpLFwibW91c2VlbnRlclwiLGMuRXZlbnRIYW5kbGVycy5tb3VzZWVudGVyRXZlbnQpLG8uRXZlbnRSdWxlci5vbihpLFwicGFzdGVcIixjLkV2ZW50SGFuZGxlcnMucGFzdGVFdmVudCksby5FdmVudFJ1bGVyLm9uKGksXCJjdXRcIixjLkV2ZW50SGFuZGxlcnMuY3V0RXZlbnQpLG8uRXZlbnRSdWxlci5vbihpLFwiY29tcGxldGVcIix0Lm9uY29tcGxldGUpLG8uRXZlbnRSdWxlci5vbihpLFwiaW5jb21wbGV0ZVwiLHQub25pbmNvbXBsZXRlKSxvLkV2ZW50UnVsZXIub24oaSxcImNsZWFyZWRcIix0Lm9uY2xlYXJlZCksITAhPT10LmlucHV0RXZlbnRPbmx5JiZvLkV2ZW50UnVsZXIub24oaSxcImtleWRvd25cIixjLkV2ZW50SGFuZGxlcnMua2V5RXZlbnQpLChzLm1vYmlsZXx8dC5pbnB1dEV2ZW50T25seSkmJmkucmVtb3ZlQXR0cmlidXRlKFwibWF4TGVuZ3RoXCIpLG8uRXZlbnRSdWxlci5vbihpLFwiaW5wdXRcIixjLkV2ZW50SGFuZGxlcnMuaW5wdXRGYWxsQmFja0V2ZW50KSksby5FdmVudFJ1bGVyLm9uKGksXCJzZXR2YWx1ZVwiLGMuRXZlbnRIYW5kbGVycy5zZXRWYWx1ZUV2ZW50KSxuLmdldEJ1ZmZlclRlbXBsYXRlLmNhbGwoZSkuam9pbihcIlwiKSxlLnVuZG9WYWx1ZT1lLl92YWx1ZUdldCghMCk7dmFyIGQ9KGkuaW5wdXRtYXNrLnNoYWRvd1Jvb3R8fGkub3duZXJEb2N1bWVudCkuYWN0aXZlRWxlbWVudDtpZihcIlwiIT09aS5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKXx8ITE9PT10LmNsZWFyTWFza09uTG9zdEZvY3VzfHxkPT09aSl7KDAsci5hcHBseUlucHV0VmFsdWUpKGksaS5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSx0KTt2YXIgcD1uLmdldEJ1ZmZlci5jYWxsKGUpLnNsaWNlKCk7ITE9PT1sLmlzQ29tcGxldGUuY2FsbChlLHApJiZ0LmNsZWFySW5jb21wbGV0ZSYmbi5yZXNldE1hc2tTZXQuY2FsbChlKSx0LmNsZWFyTWFza09uTG9zdEZvY3VzJiZkIT09aSYmKC0xPT09bi5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGUpP3A9W106ci5jbGVhck9wdGlvbmFsVGFpbC5jYWxsKGUscCkpLCghMT09PXQuY2xlYXJNYXNrT25Mb3N0Rm9jdXN8fHQuc2hvd01hc2tPbkZvY3VzJiZkPT09aXx8XCJcIiE9PWkuaW5wdXRtYXNrLl92YWx1ZUdldCghMCkpJiYoMCxyLndyaXRlQnVmZmVyKShpLHApLGQ9PT1pJiZuLmNhcmV0LmNhbGwoZSxpLG4uc2Vla05leHQuY2FsbChlLG4uZ2V0TGFzdFZhbGlkUG9zaXRpb24uY2FsbChlKSkpfX19O3ZhciBhPWkoMjgzOSksbj1pKDg3MTEpLHI9aSg3NzYwKSxvPWkoOTcxNikscz1pKDk4NDUpLGw9aSg3MjE1KSxjPWkoNjAzMCl9LDk2OTU6ZnVuY3Rpb24oZSx0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0LGksYSl7dGhpcy5tYXRjaGVzPVtdLHRoaXMub3Blbkdyb3VwPWV8fCExLHRoaXMuYWx0ZXJuYXRvckdyb3VwPSExLHRoaXMuaXNHcm91cD1lfHwhMSx0aGlzLmlzT3B0aW9uYWw9dHx8ITEsdGhpcy5pc1F1YW50aWZpZXI9aXx8ITEsdGhpcy5pc0FsdGVybmF0b3I9YXx8ITEsdGhpcy5xdWFudGlmaWVyPXttaW46MSxtYXg6MX19fSwzMTk0OmZ1bmN0aW9uKCl7QXJyYXkucHJvdG90eXBlLmluY2x1ZGVzfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoQXJyYXkucHJvdG90eXBlLFwiaW5jbHVkZXNcIix7dmFsdWU6ZnVuY3Rpb24oZSx0KXtpZihudWxsPT10aGlzKXRocm93IG5ldyBUeXBlRXJyb3IoJ1widGhpc1wiIGlzIG51bGwgb3Igbm90IGRlZmluZWQnKTt2YXIgaT1PYmplY3QodGhpcyksYT1pLmxlbmd0aD4+PjA7aWYoMD09PWEpcmV0dXJuITE7Zm9yKHZhciBuPTB8dCxyPU1hdGgubWF4KG4+PTA/bjphLU1hdGguYWJzKG4pLDApO3I8YTspe2lmKGlbcl09PT1lKXJldHVybiEwO3IrK31yZXR1cm4hMX19KX0sOTMwMjpmdW5jdGlvbigpe3ZhciBlPUZ1bmN0aW9uLmJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLEFycmF5LnByb3RvdHlwZS5yZWR1Y2UpLHQ9RnVuY3Rpb24uYmluZC5jYWxsKEZ1bmN0aW9uLmNhbGwsT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSksaT1GdW5jdGlvbi5iaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCxBcnJheS5wcm90b3R5cGUuY29uY2F0KSxhPU9iamVjdC5rZXlzO09iamVjdC5lbnRyaWVzfHwoT2JqZWN0LmVudHJpZXM9ZnVuY3Rpb24obil7cmV0dXJuIGUoYShuKSwoZnVuY3Rpb24oZSxhKXtyZXR1cm4gaShlLFwic3RyaW5nXCI9PXR5cGVvZiBhJiZ0KG4sYSk/W1thLG5bYV1dXTpbXSl9KSxbXSl9KX0sNzE0OTpmdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7cmV0dXJuIGU9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0sZSh0KX1cImZ1bmN0aW9uXCIhPXR5cGVvZiBPYmplY3QuZ2V0UHJvdG90eXBlT2YmJihPYmplY3QuZ2V0UHJvdG90eXBlT2Y9XCJvYmplY3RcIj09PWUoXCJ0ZXN0XCIuX19wcm90b19fKT9mdW5jdGlvbihlKXtyZXR1cm4gZS5fX3Byb3RvX199OmZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbnN0cnVjdG9yLnByb3RvdHlwZX0pfSw0MDEzOmZ1bmN0aW9uKCl7U3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlc3x8KFN0cmluZy5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgdCYmKHQ9MCksISh0K2UubGVuZ3RoPnRoaXMubGVuZ3RoKSYmLTEhPT10aGlzLmluZGV4T2YoZSx0KX0pfSw4NzExOmZ1bmN0aW9uKGUsdCxpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmNhcmV0PWZ1bmN0aW9uKGUsdCxpLGEsbil7dmFyIHIsbz10aGlzLHM9dGhpcy5vcHRzO2lmKHZvaWQgMD09PXQpcmV0dXJuXCJzZWxlY3Rpb25TdGFydFwiaW4gZSYmXCJzZWxlY3Rpb25FbmRcImluIGU/KHQ9ZS5zZWxlY3Rpb25TdGFydCxpPWUuc2VsZWN0aW9uRW5kKTp3aW5kb3cuZ2V0U2VsZWN0aW9uPyhyPXdpbmRvdy5nZXRTZWxlY3Rpb24oKS5nZXRSYW5nZUF0KDApKS5jb21tb25BbmNlc3RvckNvbnRhaW5lci5wYXJlbnROb2RlIT09ZSYmci5jb21tb25BbmNlc3RvckNvbnRhaW5lciE9PWV8fCh0PXIuc3RhcnRPZmZzZXQsaT1yLmVuZE9mZnNldCk6ZG9jdW1lbnQuc2VsZWN0aW9uJiZkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UmJihyPWRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpLHQ9MC1yLmR1cGxpY2F0ZSgpLm1vdmVTdGFydChcImNoYXJhY3RlclwiLC1lLmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGgpLGk9dCtyLnRleHQubGVuZ3RoKSx7YmVnaW46YT90OmMuY2FsbChvLHQpLGVuZDphP2k6Yy5jYWxsKG8saSl9O2lmKEFycmF5LmlzQXJyYXkodCkmJihpPW8uaXNSVEw/dFswXTp0WzFdLHQ9by5pc1JUTD90WzFdOnRbMF0pLHZvaWQgMCE9PXQuYmVnaW4mJihpPW8uaXNSVEw/dC5iZWdpbjp0LmVuZCx0PW8uaXNSVEw/dC5lbmQ6dC5iZWdpbiksXCJudW1iZXJcIj09dHlwZW9mIHQpe3Q9YT90OmMuY2FsbChvLHQpLGk9XCJudW1iZXJcIj09dHlwZW9mKGk9YT9pOmMuY2FsbChvLGkpKT9pOnQ7dmFyIGw9cGFyc2VJbnQoKChlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0Q29tcHV0ZWRTdHlsZT8oZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldENvbXB1dGVkU3R5bGUoZSxudWxsKTplLmN1cnJlbnRTdHlsZSkuZm9udFNpemUpKmk7aWYoZS5zY3JvbGxMZWZ0PWw+ZS5zY3JvbGxXaWR0aD9sOjAsZS5pbnB1dG1hc2suY2FyZXRQb3M9e2JlZ2luOnQsZW5kOml9LHMuaW5zZXJ0TW9kZVZpc3VhbCYmITE9PT1zLmluc2VydE1vZGUmJnQ9PT1pJiYobnx8aSsrKSxlPT09KGUuaW5wdXRtYXNrLnNoYWRvd1Jvb3R8fGUub3duZXJEb2N1bWVudCkuYWN0aXZlRWxlbWVudClpZihcInNldFNlbGVjdGlvblJhbmdlXCJpbiBlKWUuc2V0U2VsZWN0aW9uUmFuZ2UodCxpKTtlbHNlIGlmKHdpbmRvdy5nZXRTZWxlY3Rpb24pe2lmKHI9ZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKSx2b2lkIDA9PT1lLmZpcnN0Q2hpbGR8fG51bGw9PT1lLmZpcnN0Q2hpbGQpe3ZhciB1PWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO2UuYXBwZW5kQ2hpbGQodSl9ci5zZXRTdGFydChlLmZpcnN0Q2hpbGQsdDxlLmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGg/dDplLmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGgpLHIuc2V0RW5kKGUuZmlyc3RDaGlsZCxpPGUuaW5wdXRtYXNrLl92YWx1ZUdldCgpLmxlbmd0aD9pOmUuaW5wdXRtYXNrLl92YWx1ZUdldCgpLmxlbmd0aCksci5jb2xsYXBzZSghMCk7dmFyIGY9d2luZG93LmdldFNlbGVjdGlvbigpO2YucmVtb3ZlQWxsUmFuZ2VzKCksZi5hZGRSYW5nZShyKX1lbHNlIGUuY3JlYXRlVGV4dFJhbmdlJiYoKHI9ZS5jcmVhdGVUZXh0UmFuZ2UoKSkuY29sbGFwc2UoITApLHIubW92ZUVuZChcImNoYXJhY3RlclwiLGkpLHIubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsdCksci5zZWxlY3QoKSl9fSx0LmRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uPWZ1bmN0aW9uKGUpe3ZhciB0LGkscj10aGlzLHM9ci5tYXNrc2V0LGw9ci5kZXBlbmRlbmN5TGliLGM9YS5nZXRNYXNrVGVtcGxhdGUuY2FsbChyLCEwLG8uY2FsbChyKSwhMCwhMCksdT1jLmxlbmd0aCxmPW8uY2FsbChyKSxkPXt9LHA9cy52YWxpZFBvc2l0aW9uc1tmXSxoPXZvaWQgMCE9PXA/cC5sb2NhdG9yLnNsaWNlKCk6dm9pZCAwO2Zvcih0PWYrMTt0PGMubGVuZ3RoO3QrKylpPWEuZ2V0VGVzdFRlbXBsYXRlLmNhbGwocix0LGgsdC0xKSxoPWkubG9jYXRvci5zbGljZSgpLGRbdF09bC5leHRlbmQoITAse30saSk7dmFyIHY9cCYmdm9pZCAwIT09cC5hbHRlcm5hdGlvbj9wLmxvY2F0b3JbcC5hbHRlcm5hdGlvbl06dm9pZCAwO2Zvcih0PXUtMTt0PmYmJigoKGk9ZFt0XSkubWF0Y2gub3B0aW9uYWxpdHl8fGkubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyJiZpLm1hdGNoLm5ld0Jsb2NrTWFya2VyfHx2JiYodiE9PWRbdF0ubG9jYXRvcltwLmFsdGVybmF0aW9uXSYmMSE9aS5tYXRjaC5zdGF0aWN8fCEwPT09aS5tYXRjaC5zdGF0aWMmJmkubG9jYXRvcltwLmFsdGVybmF0aW9uXSYmbi5jaGVja0FsdGVybmF0aW9uTWF0Y2guY2FsbChyLGkubG9jYXRvcltwLmFsdGVybmF0aW9uXS50b1N0cmluZygpLnNwbGl0KFwiLFwiKSx2LnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpKSYmXCJcIiE9PWEuZ2V0VGVzdHMuY2FsbChyLHQpWzBdLmRlZikpJiZjW3RdPT09YS5nZXRQbGFjZWhvbGRlci5jYWxsKHIsdCxpLm1hdGNoKSk7dC0tKXUtLTtyZXR1cm4gZT97bDp1LGRlZjpkW3VdP2RbdV0ubWF0Y2g6dm9pZCAwfTp1fSx0LmRldGVybWluZU5ld0NhcmV0UG9zaXRpb249ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXRoaXMsYz1uLm1hc2tzZXQsdT1uLm9wdHM7dCYmKG4uaXNSVEw/ZS5lbmQ9ZS5iZWdpbjplLmJlZ2luPWUuZW5kKTtpZihlLmJlZ2luPT09ZS5lbmQpe3N3aXRjaChpPWl8fHUucG9zaXRpb25DYXJldE9uQ2xpY2spe2Nhc2VcIm5vbmVcIjpicmVhaztjYXNlXCJzZWxlY3RcIjplPXtiZWdpbjowLGVuZDpyLmNhbGwobikubGVuZ3RofTticmVhaztjYXNlXCJpZ25vcmVcIjplLmVuZD1lLmJlZ2luPWwuY2FsbChuLG8uY2FsbChuKSk7YnJlYWs7Y2FzZVwicmFkaXhGb2N1c1wiOmlmKG4uY2xpY2tlZD4xJiYwPT1jLnZhbGlkUG9zaXRpb25zLmxlbmd0aClicmVhaztpZihmdW5jdGlvbihlKXtpZihcIlwiIT09dS5yYWRpeFBvaW50JiYwIT09dS5kaWdpdHMpe3ZhciB0PWMudmFsaWRQb3NpdGlvbnM7aWYodm9pZCAwPT09dFtlXXx8dFtlXS5pbnB1dD09PWEuZ2V0UGxhY2Vob2xkZXIuY2FsbChuLGUpKXtpZihlPGwuY2FsbChuLC0xKSlyZXR1cm4hMDt2YXIgaT1yLmNhbGwobikuaW5kZXhPZih1LnJhZGl4UG9pbnQpO2lmKC0xIT09aSl7Zm9yKHZhciBvPTAscz10Lmxlbmd0aDtvPHM7bysrKWlmKHRbb10mJmk8byYmdFtvXS5pbnB1dCE9PWEuZ2V0UGxhY2Vob2xkZXIuY2FsbChuLG8pKXJldHVybiExO3JldHVybiEwfX19cmV0dXJuITF9KGUuYmVnaW4pKXt2YXIgZj1yLmNhbGwobikuam9pbihcIlwiKS5pbmRleE9mKHUucmFkaXhQb2ludCk7ZS5lbmQ9ZS5iZWdpbj11Lm51bWVyaWNJbnB1dD9sLmNhbGwobixmKTpmO2JyZWFrfWRlZmF1bHQ6dmFyIGQ9ZS5iZWdpbixwPW8uY2FsbChuLGQsITApLGg9bC5jYWxsKG4sLTEhPT1wfHxzLmNhbGwobiwwKT9wOi0xKTtpZihkPD1oKWUuZW5kPWUuYmVnaW49cy5jYWxsKG4sZCwhMSwhMCk/ZDpsLmNhbGwobixkKTtlbHNle3ZhciB2PWMudmFsaWRQb3NpdGlvbnNbcF0sbT1hLmdldFRlc3RUZW1wbGF0ZS5jYWxsKG4saCx2P3YubWF0Y2gubG9jYXRvcjp2b2lkIDAsdiksZz1hLmdldFBsYWNlaG9sZGVyLmNhbGwobixoLG0ubWF0Y2gpO2lmKFwiXCIhPT1nJiZyLmNhbGwobilbaF0hPT1nJiYhMCE9PW0ubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyJiYhMCE9PW0ubWF0Y2gubmV3QmxvY2tNYXJrZXJ8fCFzLmNhbGwobixoLHUua2VlcFN0YXRpYywhMCkmJm0ubWF0Y2guZGVmPT09Zyl7dmFyIGs9bC5jYWxsKG4saCk7KGQ+PWt8fGQ9PT1oKSYmKGg9ayl9ZS5lbmQ9ZS5iZWdpbj1ofX1yZXR1cm4gZX19LHQuZ2V0QnVmZmVyPXIsdC5nZXRCdWZmZXJUZW1wbGF0ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMubWFza3NldDt2b2lkIDA9PT1lLl9idWZmZXImJihlLl9idWZmZXI9YS5nZXRNYXNrVGVtcGxhdGUuY2FsbCh0aGlzLCExLDEpLHZvaWQgMD09PWUuYnVmZmVyJiYoZS5idWZmZXI9ZS5fYnVmZmVyLnNsaWNlKCkpKTtyZXR1cm4gZS5fYnVmZmVyfSx0LmdldExhc3RWYWxpZFBvc2l0aW9uPW8sdC5pc01hc2s9cyx0LnJlc2V0TWFza1NldD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm1hc2tzZXQ7dC5idWZmZXI9dm9pZCAwLCEwIT09ZSYmKHQudmFsaWRQb3NpdGlvbnM9W10sdC5wPTApfSx0LnNlZWtOZXh0PWwsdC5zZWVrUHJldmlvdXM9ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLG49ZS0xO2lmKGU8PTApcmV0dXJuIDA7Zm9yKDtuPjAmJighMD09PXQmJighMCE9PWEuZ2V0VGVzdC5jYWxsKGksbikubWF0Y2gubmV3QmxvY2tNYXJrZXJ8fCFzLmNhbGwoaSxuLHZvaWQgMCwhMCkpfHwhMCE9PXQmJiFzLmNhbGwoaSxuLHZvaWQgMCwhMCkpOyluLS07cmV0dXJuIG59LHQudHJhbnNsYXRlUG9zaXRpb249Yzt2YXIgYT1pKDQ3MTMpLG49aSg3MjE1KTtmdW5jdGlvbiByKGUpe3ZhciB0PXRoaXMsaT10Lm1hc2tzZXQ7cmV0dXJuIHZvaWQgMCE9PWkuYnVmZmVyJiYhMCE9PWV8fChpLmJ1ZmZlcj1hLmdldE1hc2tUZW1wbGF0ZS5jYWxsKHQsITAsby5jYWxsKHQpLCEwKSx2b2lkIDA9PT1pLl9idWZmZXImJihpLl9idWZmZXI9aS5idWZmZXIuc2xpY2UoKSkpLGkuYnVmZmVyfWZ1bmN0aW9uIG8oZSx0LGkpe3ZhciBhPXRoaXMubWFza3NldCxuPS0xLHI9LTEsbz1pfHxhLnZhbGlkUG9zaXRpb25zO3ZvaWQgMD09PWUmJihlPS0xKTtmb3IodmFyIHM9MCxsPW8ubGVuZ3RoO3M8bDtzKyspb1tzXSYmKHR8fCEwIT09b1tzXS5nZW5lcmF0ZWRJbnB1dCkmJihzPD1lJiYobj1zKSxzPj1lJiYocj1zKSk7cmV0dXJuLTE9PT1ufHxuPT1lP3I6LTE9PXJ8fGUtbjxyLWU/bjpyfWZ1bmN0aW9uIHMoZSx0LGkpe3ZhciBuPXRoaXMscj10aGlzLm1hc2tzZXQsbz1hLmdldFRlc3RUZW1wbGF0ZS5jYWxsKG4sZSkubWF0Y2g7aWYoXCJcIj09PW8uZGVmJiYobz1hLmdldFRlc3QuY2FsbChuLGUpLm1hdGNoKSwhMCE9PW8uc3RhdGljKXJldHVybiBvLmZuO2lmKCEwPT09aSYmdm9pZCAwIT09ci52YWxpZFBvc2l0aW9uc1tlXSYmITAhPT1yLnZhbGlkUG9zaXRpb25zW2VdLmdlbmVyYXRlZElucHV0KXJldHVybiEwO2lmKCEwIT09dCYmZT4tMSl7aWYoaSl7dmFyIHM9YS5nZXRUZXN0cy5jYWxsKG4sZSk7cmV0dXJuIHMubGVuZ3RoPjErKFwiXCI9PT1zW3MubGVuZ3RoLTFdLm1hdGNoLmRlZj8xOjApfXZhciBsPWEuZGV0ZXJtaW5lVGVzdFRlbXBsYXRlLmNhbGwobixlLGEuZ2V0VGVzdHMuY2FsbChuLGUpKSxjPWEuZ2V0UGxhY2Vob2xkZXIuY2FsbChuLGUsbC5tYXRjaCk7cmV0dXJuIGwubWF0Y2guZGVmIT09Y31yZXR1cm4hMX1mdW5jdGlvbiBsKGUsdCxpKXt2YXIgbj10aGlzO3ZvaWQgMD09PWkmJihpPSEwKTtmb3IodmFyIHI9ZSsxO1wiXCIhPT1hLmdldFRlc3QuY2FsbChuLHIpLm1hdGNoLmRlZiYmKCEwPT09dCYmKCEwIT09YS5nZXRUZXN0LmNhbGwobixyKS5tYXRjaC5uZXdCbG9ja01hcmtlcnx8IXMuY2FsbChuLHIsdm9pZCAwLCEwKSl8fCEwIT09dCYmIXMuY2FsbChuLHIsdm9pZCAwLGkpKTspcisrO3JldHVybiByfWZ1bmN0aW9uIGMoZSl7dmFyIHQ9dGhpcy5vcHRzLGk9dGhpcy5lbDtyZXR1cm4hdGhpcy5pc1JUTHx8XCJudW1iZXJcIiE9dHlwZW9mIGV8fHQuZ3JlZWR5JiZcIlwiPT09dC5wbGFjZWhvbGRlcnx8IWl8fChlPXRoaXMuX3ZhbHVlR2V0KCkubGVuZ3RoLWUpPDAmJihlPTApLGV9fSw0NzEzOmZ1bmN0aW9uKGUsdCxpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRldGVybWluZVRlc3RUZW1wbGF0ZT1jLHQuZ2V0RGVjaXNpb25UYWtlcj1vLHQuZ2V0TWFza1RlbXBsYXRlPWZ1bmN0aW9uKGUsdCxpLGEsbil7dmFyIHI9dGhpcyxvPXRoaXMub3B0cyx1PXRoaXMubWFza3NldCxmPW8uZ3JlZWR5O24mJm8uZ3JlZWR5JiYoby5ncmVlZHk9ITEsci5tYXNrc2V0LnRlc3RzPXt9KTt0PXR8fDA7dmFyIHAsaCx2LG0sZz1bXSxrPTA7ZG97aWYoITA9PT1lJiZ1LnZhbGlkUG9zaXRpb25zW2tdKXY9biYmdS52YWxpZFBvc2l0aW9uc1trXS5tYXRjaC5vcHRpb25hbGl0eSYmdm9pZCAwPT09dS52YWxpZFBvc2l0aW9uc1trKzFdJiYoITA9PT11LnZhbGlkUG9zaXRpb25zW2tdLmdlbmVyYXRlZElucHV0fHx1LnZhbGlkUG9zaXRpb25zW2tdLmlucHV0PT1vLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXImJms+MCk/Yy5jYWxsKHIsayxkLmNhbGwocixrLHAsay0xKSk6dS52YWxpZFBvc2l0aW9uc1trXSxoPXYubWF0Y2gscD12LmxvY2F0b3Iuc2xpY2UoKSxnLnB1c2goITA9PT1pP3YuaW5wdXQ6ITE9PT1pP2gubmF0aXZlRGVmOnMuY2FsbChyLGssaCkpO2Vsc2V7dj1sLmNhbGwocixrLHAsay0xKSxoPXYubWF0Y2gscD12LmxvY2F0b3Iuc2xpY2UoKTt2YXIgeT0hMCE9PWEmJighMSE9PW8uaml0TWFza2luZz9vLmppdE1hc2tpbmc6aC5qaXQpOyhtPShtJiZoLnN0YXRpYyYmaC5kZWYhPT1vLmdyb3VwU2VwYXJhdG9yJiZudWxsPT09aC5mbnx8dS52YWxpZFBvc2l0aW9uc1trLTFdJiZoLnN0YXRpYyYmaC5kZWYhPT1vLmdyb3VwU2VwYXJhdG9yJiZudWxsPT09aC5mbikmJnUudGVzdHNba10mJjE9PT11LnRlc3RzW2tdLmxlbmd0aCl8fCExPT09eXx8dm9pZCAwPT09eXx8XCJudW1iZXJcIj09dHlwZW9mIHkmJmlzRmluaXRlKHkpJiZ5Pms/Zy5wdXNoKCExPT09aT9oLm5hdGl2ZURlZjpzLmNhbGwocixnLmxlbmd0aCxoKSk6bT0hMX1rKyt9d2hpbGUoITAhPT1oLnN0YXRpY3x8XCJcIiE9PWguZGVmfHx0PmspO1wiXCI9PT1nW2cubGVuZ3RoLTFdJiZnLnBvcCgpOyExPT09aSYmdm9pZCAwIT09dS5tYXNrTGVuZ3RofHwodS5tYXNrTGVuZ3RoPWstMSk7cmV0dXJuIG8uZ3JlZWR5PWYsZ30sdC5nZXRQbGFjZWhvbGRlcj1zLHQuZ2V0VGVzdD11LHQuZ2V0VGVzdFRlbXBsYXRlPWwsdC5nZXRUZXN0cz1kLHQuaXNTdWJzZXRPZj1mO3ZhciBhLG49KGE9aSgyMzk0KSkmJmEuX19lc01vZHVsZT9hOntkZWZhdWx0OmF9O2Z1bmN0aW9uIHIoZSx0KXt2YXIgaT0obnVsbCE9ZS5hbHRlcm5hdGlvbj9lLm1sb2NbbyhlKV06ZS5sb2NhdG9yKS5qb2luKFwiXCIpO2lmKFwiXCIhPT1pKWZvcig7aS5sZW5ndGg8dDspaSs9XCIwXCI7cmV0dXJuIGl9ZnVuY3Rpb24gbyhlKXt2YXIgdD1lLmxvY2F0b3JbZS5hbHRlcm5hdGlvbl07cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJnQubGVuZ3RoPjAmJih0PXQuc3BsaXQoXCIsXCIpWzBdKSx2b2lkIDAhPT10P3QudG9TdHJpbmcoKTpcIlwifWZ1bmN0aW9uIHMoZSx0LGkpe3ZhciBhPXRoaXMub3B0cyxuPXRoaXMubWFza3NldDtpZih2b2lkIDAhPT0odD10fHx1LmNhbGwodGhpcyxlKS5tYXRjaCkucGxhY2Vob2xkZXJ8fCEwPT09aSlyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnBsYWNlaG9sZGVyP3QucGxhY2Vob2xkZXIoYSk6dC5wbGFjZWhvbGRlcjtpZighMD09PXQuc3RhdGljKXtpZihlPi0xJiZ2b2lkIDA9PT1uLnZhbGlkUG9zaXRpb25zW2VdKXt2YXIgcixvPWQuY2FsbCh0aGlzLGUpLHM9W107aWYoby5sZW5ndGg+MSsoXCJcIj09PW9bby5sZW5ndGgtMV0ubWF0Y2guZGVmPzE6MCkpZm9yKHZhciBsPTA7bDxvLmxlbmd0aDtsKyspaWYoXCJcIiE9PW9bbF0ubWF0Y2guZGVmJiYhMCE9PW9bbF0ubWF0Y2gub3B0aW9uYWxpdHkmJiEwIT09b1tsXS5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXImJighMD09PW9bbF0ubWF0Y2guc3RhdGljfHx2b2lkIDA9PT1yfHwhMSE9PW9bbF0ubWF0Y2guZm4udGVzdChyLm1hdGNoLmRlZixuLGUsITAsYSkpJiYocy5wdXNoKG9bbF0pLCEwPT09b1tsXS5tYXRjaC5zdGF0aWMmJihyPW9bbF0pLHMubGVuZ3RoPjEmJi9bMC05YS1iQS1aXS8udGVzdChzWzBdLm1hdGNoLmRlZikpKXJldHVybiBhLnBsYWNlaG9sZGVyLmNoYXJBdChlJWEucGxhY2Vob2xkZXIubGVuZ3RoKX1yZXR1cm4gdC5kZWZ9cmV0dXJuIGEucGxhY2Vob2xkZXIuY2hhckF0KGUlYS5wbGFjZWhvbGRlci5sZW5ndGgpfWZ1bmN0aW9uIGwoZSx0LGkpe3JldHVybiB0aGlzLm1hc2tzZXQudmFsaWRQb3NpdGlvbnNbZV18fGMuY2FsbCh0aGlzLGUsZC5jYWxsKHRoaXMsZSx0P3Quc2xpY2UoKTp0LGkpKX1mdW5jdGlvbiBjKGUsdCl7dmFyIGk9dGhpcy5vcHRzLGE9MCxuPWZ1bmN0aW9uKGUsdCl7dmFyIGk9MCxhPSExO3QuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5tYXRjaC5vcHRpb25hbGl0eSYmKDAhPT1pJiZpIT09ZS5tYXRjaC5vcHRpb25hbGl0eSYmKGE9ITApLCgwPT09aXx8aT5lLm1hdGNoLm9wdGlvbmFsaXR5KSYmKGk9ZS5tYXRjaC5vcHRpb25hbGl0eSkpfSkpLGkmJigwPT1lfHwxPT10Lmxlbmd0aD9pPTA6YXx8KGk9MCkpO3JldHVybiBpfShlLHQpO2U9ZT4wP2UtMTowO3ZhciBvLHMsbCxjPXIodS5jYWxsKHRoaXMsZSkpO2kuZ3JlZWR5JiZ0Lmxlbmd0aD4xJiZcIlwiPT09dFt0Lmxlbmd0aC0xXS5tYXRjaC5kZWYmJihhPTEpO2Zvcih2YXIgZj0wO2Y8dC5sZW5ndGgtYTtmKyspe3ZhciBkPXRbZl07bz1yKGQsYy5sZW5ndGgpO3ZhciBwPU1hdGguYWJzKG8tYyk7KHZvaWQgMD09PXN8fFwiXCIhPT1vJiZwPHN8fGwmJiFpLmdyZWVkeSYmbC5tYXRjaC5vcHRpb25hbGl0eSYmbC5tYXRjaC5vcHRpb25hbGl0eS1uPjAmJlwibWFzdGVyXCI9PT1sLm1hdGNoLm5ld0Jsb2NrTWFya2VyJiYoIWQubWF0Y2gub3B0aW9uYWxpdHl8fGQubWF0Y2gub3B0aW9uYWxpdHktbjwxfHwhZC5tYXRjaC5uZXdCbG9ja01hcmtlcil8fGwmJiFpLmdyZWVkeSYmbC5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXImJiFkLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcikmJihzPXAsbD1kKX1yZXR1cm4gbH1mdW5jdGlvbiB1KGUsdCl7dmFyIGk9dGhpcy5tYXNrc2V0O3JldHVybiBpLnZhbGlkUG9zaXRpb25zW2VdP2kudmFsaWRQb3NpdGlvbnNbZV06KHR8fGQuY2FsbCh0aGlzLGUpKVswXX1mdW5jdGlvbiBmKGUsdCxpKXtmdW5jdGlvbiBhKGUpe2Zvcih2YXIgdCxpPVtdLGE9LTEsbj0wLHI9ZS5sZW5ndGg7bjxyO24rKylpZihcIi1cIj09PWUuY2hhckF0KG4pKWZvcih0PWUuY2hhckNvZGVBdChuKzEpOysrYTx0OylpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhKSk7ZWxzZSBhPWUuY2hhckNvZGVBdChuKSxpLnB1c2goZS5jaGFyQXQobikpO3JldHVybiBpLmpvaW4oXCJcIil9cmV0dXJuIGUubWF0Y2guZGVmPT09dC5tYXRjaC5uYXRpdmVEZWZ8fCEoIShpLnJlZ2V4fHxlLm1hdGNoLmZuIGluc3RhbmNlb2YgUmVnRXhwJiZ0Lm1hdGNoLmZuIGluc3RhbmNlb2YgUmVnRXhwKXx8ITA9PT1lLm1hdGNoLnN0YXRpY3x8ITA9PT10Lm1hdGNoLnN0YXRpYykmJi0xIT09YSh0Lm1hdGNoLmZuLnRvU3RyaW5nKCkucmVwbGFjZSgvW1tcXF0vXS9nLFwiXCIpKS5pbmRleE9mKGEoZS5tYXRjaC5mbi50b1N0cmluZygpLnJlcGxhY2UoL1tbXFxdL10vZyxcIlwiKSkpfWZ1bmN0aW9uIGQoZSx0LGkpe3ZhciBhLHIsbz10aGlzLHM9dGhpcy5kZXBlbmRlbmN5TGliLGw9dGhpcy5tYXNrc2V0LHU9dGhpcy5vcHRzLGQ9dGhpcy5lbCxwPWwubWFza1Rva2VuLGg9dD9pOjAsdj10P3Quc2xpY2UoKTpbMF0sbT1bXSxnPSExLGs9dD90LmpvaW4oXCJcIik6XCJcIjtmdW5jdGlvbiB5KHQsaSxyLG8pe2Z1bmN0aW9uIHMocixvLGMpe2Z1bmN0aW9uIHAoZSx0KXt2YXIgaT0wPT09dC5tYXRjaGVzLmluZGV4T2YoZSk7cmV0dXJuIGl8fHQubWF0Y2hlcy5ldmVyeSgoZnVuY3Rpb24oYSxuKXtyZXR1cm4hMD09PWEuaXNRdWFudGlmaWVyP2k9cChlLHQubWF0Y2hlc1tuLTFdKTpPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxcIm1hdGNoZXNcIikmJihpPXAoZSxhKSksIWl9KSksaX1mdW5jdGlvbiB2KGUsdCxpKXt2YXIgYSxuO2lmKChsLnRlc3RzW2VdfHxsLnZhbGlkUG9zaXRpb25zW2VdKSYmKGwudGVzdHNbZV18fFtsLnZhbGlkUG9zaXRpb25zW2VdXSkuZXZlcnkoKGZ1bmN0aW9uKGUscil7aWYoZS5tbG9jW3RdKXJldHVybiBhPWUsITE7dmFyIG89dm9pZCAwIT09aT9pOmUuYWx0ZXJuYXRpb24scz12b2lkIDAhPT1lLmxvY2F0b3Jbb10/ZS5sb2NhdG9yW29dLnRvU3RyaW5nKCkuaW5kZXhPZih0KTotMTtyZXR1cm4odm9pZCAwPT09bnx8czxuKSYmLTEhPT1zJiYoYT1lLG49cyksITB9KSksYSl7dmFyIHI9YS5sb2NhdG9yW2EuYWx0ZXJuYXRpb25dO3JldHVybihhLm1sb2NbdF18fGEubWxvY1tyXXx8YS5sb2NhdG9yKS5zbGljZSgodm9pZCAwIT09aT9pOmEuYWx0ZXJuYXRpb24pKzEpfXJldHVybiB2b2lkIDAhPT1pP3YoZSx0KTp2b2lkIDB9ZnVuY3Rpb24geChlLHQpe3ZhciBpPWUuYWx0ZXJuYXRpb24sYT12b2lkIDA9PT10fHxpPT09dC5hbHRlcm5hdGlvbiYmLTE9PT1lLmxvY2F0b3JbaV0udG9TdHJpbmcoKS5pbmRleE9mKHQubG9jYXRvcltpXSk7aWYoIWEmJmk+dC5hbHRlcm5hdGlvbilmb3IodmFyIG49dC5hbHRlcm5hdGlvbjtuPGk7bisrKWlmKGUubG9jYXRvcltuXSE9PXQubG9jYXRvcltuXSl7aT1uLGE9ITA7YnJlYWt9aWYoYSl7ZS5tbG9jPWUubWxvY3x8e307dmFyIHI9ZS5sb2NhdG9yW2ldO2lmKHZvaWQgMCE9PXIpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiByJiYocj1yLnNwbGl0KFwiLFwiKVswXSksdm9pZCAwPT09ZS5tbG9jW3JdJiYoZS5tbG9jW3JdPWUubG9jYXRvci5zbGljZSgpKSx2b2lkIDAhPT10KXtmb3IodmFyIG8gaW4gdC5tbG9jKVwic3RyaW5nXCI9PXR5cGVvZiBvJiYobz1vLnNwbGl0KFwiLFwiKVswXSksdm9pZCAwPT09ZS5tbG9jW29dJiYoZS5tbG9jW29dPXQubWxvY1tvXSk7ZS5sb2NhdG9yW2ldPU9iamVjdC5rZXlzKGUubWxvYykuam9pbihcIixcIil9cmV0dXJuITB9ZS5hbHRlcm5hdGlvbj12b2lkIDB9cmV0dXJuITF9ZnVuY3Rpb24gUChlLHQpe2lmKGUubG9jYXRvci5sZW5ndGghPT10LmxvY2F0b3IubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgaT1lLmFsdGVybmF0aW9uKzE7aTxlLmxvY2F0b3IubGVuZ3RoO2krKylpZihlLmxvY2F0b3JbaV0hPT10LmxvY2F0b3JbaV0pcmV0dXJuITE7cmV0dXJuITB9aWYoaD5lK3UuX21heFRlc3RQb3MpdGhyb3dcIklucHV0bWFzazogVGhlcmUgaXMgcHJvYmFibHkgYW4gZXJyb3IgaW4geW91ciBtYXNrIGRlZmluaXRpb24gb3IgaW4gdGhlIGNvZGUuIENyZWF0ZSBhbiBpc3N1ZSBvbiBnaXRodWIgd2l0aCBhbiBleGFtcGxlIG9mIHRoZSBtYXNrIHlvdSBhcmUgdXNpbmcuIFwiK2wubWFzaztpZihoPT09ZSYmdm9pZCAwPT09ci5tYXRjaGVzKXtpZihtLnB1c2goe21hdGNoOnIsbG9jYXRvcjpvLnJldmVyc2UoKSxjZDprLG1sb2M6e319KSwhci5vcHRpb25hbGl0eXx8dm9pZCAwIT09Y3x8ISh1LmRlZmluaXRpb25zJiZ1LmRlZmluaXRpb25zW3IubmF0aXZlRGVmXSYmdS5kZWZpbml0aW9uc1tyLm5hdGl2ZURlZl0ub3B0aW9uYWx8fG4uZGVmYXVsdC5wcm90b3R5cGUuZGVmaW5pdGlvbnNbci5uYXRpdmVEZWZdJiZuLmRlZmF1bHQucHJvdG90eXBlLmRlZmluaXRpb25zW3IubmF0aXZlRGVmXS5vcHRpb25hbCkpcmV0dXJuITA7Zz0hMCxoPWV9ZWxzZSBpZih2b2lkIDAhPT1yLm1hdGNoZXMpe2lmKHIuaXNHcm91cCYmYyE9PXIpcmV0dXJuIGZ1bmN0aW9uKCl7aWYocj1zKHQubWF0Y2hlc1t0Lm1hdGNoZXMuaW5kZXhPZihyKSsxXSxvLGMpKXJldHVybiEwfSgpO2lmKHIuaXNPcHRpb25hbClyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD1yLG49bS5sZW5ndGg7aWYocj15KHIsaSxvLGMpLG0ubGVuZ3RoPjApe2lmKG0uZm9yRWFjaCgoZnVuY3Rpb24oZSx0KXt0Pj1uJiYoZS5tYXRjaC5vcHRpb25hbGl0eT1lLm1hdGNoLm9wdGlvbmFsaXR5P2UubWF0Y2gub3B0aW9uYWxpdHkrMToxKX0pKSxhPW1bbS5sZW5ndGgtMV0ubWF0Y2gsdm9pZCAwIT09Y3x8IXAoYSx0KSlyZXR1cm4gcjtnPSEwLGg9ZX19KCk7aWYoci5pc0FsdGVybmF0b3IpcmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGEsbixwLGs9cix5PVtdLGI9bS5zbGljZSgpLHc9by5sZW5ndGgsUz0hMSxfPWkubGVuZ3RoPjA/aS5zaGlmdCgpOi0xO2lmKC0xPT09X3x8XCJzdHJpbmdcIj09dHlwZW9mIF8pe3ZhciBNLE89aCxFPWkuc2xpY2UoKSxUPVtdO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBfKVQ9Xy5zcGxpdChcIixcIik7ZWxzZSBmb3IoTT0wO008ay5tYXRjaGVzLmxlbmd0aDtNKyspVC5wdXNoKE0udG9TdHJpbmcoKSk7aWYodm9pZCAwIT09bC5leGNsdWRlc1tlXSl7Zm9yKHZhciBqPVQuc2xpY2UoKSxEPTAsQT1sLmV4Y2x1ZGVzW2VdLmxlbmd0aDtEPEE7RCsrKXt2YXIgQj1sLmV4Y2x1ZGVzW2VdW0RdLnRvU3RyaW5nKCkuc3BsaXQoXCI6XCIpO28ubGVuZ3RoPT1CWzFdJiZULnNwbGljZShULmluZGV4T2YoQlswXSksMSl9MD09PVQubGVuZ3RoJiYoZGVsZXRlIGwuZXhjbHVkZXNbZV0sVD1qKX0oITA9PT11LmtlZXBTdGF0aWN8fGlzRmluaXRlKHBhcnNlSW50KHUua2VlcFN0YXRpYykpJiZPPj11LmtlZXBTdGF0aWMpJiYoVD1ULnNsaWNlKDAsMSkpO2Zvcih2YXIgQz0wO0M8VC5sZW5ndGg7QysrKXtNPXBhcnNlSW50KFRbQ10pLG09W10saT1cInN0cmluZ1wiPT10eXBlb2YgXyYmdihoLE0sdyl8fEUuc2xpY2UoKTt2YXIgUj1rLm1hdGNoZXNbTV07aWYoUiYmcyhSLFtNXS5jb25jYXQobyksYykpcj0hMDtlbHNlIGlmKDA9PT1DJiYoUz0hMCksUiYmUi5tYXRjaGVzJiZSLm1hdGNoZXMubGVuZ3RoPmsubWF0Y2hlc1swXS5tYXRjaGVzLmxlbmd0aClicmVhazthPW0uc2xpY2UoKSxoPU8sbT1bXTtmb3IodmFyIEw9MDtMPGEubGVuZ3RoO0wrKyl7dmFyIEY9YVtMXSxJPSExO0YubWF0Y2guaml0PUYubWF0Y2guaml0fHxTLEYuYWx0ZXJuYXRpb249Ri5hbHRlcm5hdGlvbnx8dyx4KEYpO2Zvcih2YXIgTj0wO048eS5sZW5ndGg7TisrKXt2YXIgVj15W05dO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBffHx2b2lkIDAhPT1GLmFsdGVybmF0aW9uJiZULmluY2x1ZGVzKEYubG9jYXRvcltGLmFsdGVybmF0aW9uXS50b1N0cmluZygpKSl7aWYoRi5tYXRjaC5uYXRpdmVEZWY9PT1WLm1hdGNoLm5hdGl2ZURlZil7ST0hMCx4KFYsRik7YnJlYWt9aWYoZihGLFYsdSkpe3goRixWKSYmKEk9ITAseS5zcGxpY2UoeS5pbmRleE9mKFYpLDAsRikpO2JyZWFrfWlmKGYoVixGLHUpKXt4KFYsRik7YnJlYWt9aWYocD1WLCEwPT09KG49RikubWF0Y2guc3RhdGljJiYhMCE9PXAubWF0Y2guc3RhdGljJiZwLm1hdGNoLmZuLnRlc3Qobi5tYXRjaC5kZWYsbCxlLCExLHUsITEpKXtQKEYsVil8fHZvaWQgMCE9PWQuaW5wdXRtYXNrLnVzZXJPcHRpb25zLmtlZXBTdGF0aWM/eChGLFYpJiYoST0hMCx5LnNwbGljZSh5LmluZGV4T2YoViksMCxGKSk6dS5rZWVwU3RhdGljPSEwO2JyZWFrfX19SXx8eS5wdXNoKEYpfX1tPWIuY29uY2F0KHkpLGg9ZSxnPW0ubGVuZ3RoPjAscj15Lmxlbmd0aD4wLGk9RS5zbGljZSgpfWVsc2Ugcj1zKGsubWF0Y2hlc1tfXXx8dC5tYXRjaGVzW19dLFtfXS5jb25jYXQobyksYyk7aWYocilyZXR1cm4hMH0oKTtpZihyLmlzUXVhbnRpZmllciYmYyE9PXQubWF0Y2hlc1t0Lm1hdGNoZXMuaW5kZXhPZihyKS0xXSlyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIG49cixjPSExLGY9aS5sZW5ndGg+MD9pLnNoaWZ0KCk6MDtmPChpc05hTihuLnF1YW50aWZpZXIubWF4KT9mKzE6bi5xdWFudGlmaWVyLm1heCkmJmg8PWU7ZisrKXt2YXIgZD10Lm1hdGNoZXNbdC5tYXRjaGVzLmluZGV4T2YobiktMV07aWYocj1zKGQsW2ZdLmNvbmNhdChvKSxkKSl7aWYobS5mb3JFYWNoKChmdW5jdGlvbih0LGkpeyhhPWIoZCx0Lm1hdGNoKT90Lm1hdGNoOm1bbS5sZW5ndGgtMV0ubWF0Y2gpLm9wdGlvbmFsUXVhbnRpZmllcj1mPj1uLnF1YW50aWZpZXIubWluLGEuaml0PShmKzEpKihkLm1hdGNoZXMuaW5kZXhPZihhKSsxKT5uLnF1YW50aWZpZXIuaml0LGEub3B0aW9uYWxRdWFudGlmaWVyJiZwKGEsZCkmJihnPSEwLGg9ZSx1LmdyZWVkeSYmbnVsbD09bC52YWxpZFBvc2l0aW9uc1tlLTFdJiZmPm4ucXVhbnRpZmllci5taW4mJi0xIT1bXCIqXCIsXCIrXCJdLmluZGV4T2Yobi5xdWFudGlmaWVyLm1heCkmJihtLnBvcCgpLGs9dm9pZCAwKSxjPSEwLHI9ITEpLCFjJiZhLmppdCYmKGwuaml0T2Zmc2V0W2VdPWQubWF0Y2hlcy5sZW5ndGgtZC5tYXRjaGVzLmluZGV4T2YoYSkpfSkpLGMpYnJlYWs7cmV0dXJuITB9fX0oKTtpZihyPXkocixpLG8sYykpcmV0dXJuITB9ZWxzZSBoKyt9Zm9yKHZhciBjPWkubGVuZ3RoPjA/aS5zaGlmdCgpOjA7Yzx0Lm1hdGNoZXMubGVuZ3RoO2MrKylpZighMCE9PXQubWF0Y2hlc1tjXS5pc1F1YW50aWZpZXIpe3ZhciBwPXModC5tYXRjaGVzW2NdLFtjXS5jb25jYXQociksbyk7aWYocCYmaD09PWUpcmV0dXJuIHA7aWYoaD5lKWJyZWFrfX1mdW5jdGlvbiBiKGUsdCl7dmFyIGk9LTEhPWUubWF0Y2hlcy5pbmRleE9mKHQpO3JldHVybiBpfHxlLm1hdGNoZXMuZm9yRWFjaCgoZnVuY3Rpb24oZSxhKXt2b2lkIDA9PT1lLm1hdGNoZXN8fGl8fChpPWIoZSx0KSl9KSksaX1pZihlPi0xKXtpZih2b2lkIDA9PT10KXtmb3IodmFyIHgsUD1lLTE7dm9pZCAwPT09KHg9bC52YWxpZFBvc2l0aW9uc1tQXXx8bC50ZXN0c1tQXSkmJlA+LTE7KVAtLTt2b2lkIDAhPT14JiZQPi0xJiYodj1mdW5jdGlvbihlLHQpe3ZhciBpLGE9W107cmV0dXJuIEFycmF5LmlzQXJyYXkodCl8fCh0PVt0XSksdC5sZW5ndGg+MCYmKHZvaWQgMD09PXRbMF0uYWx0ZXJuYXRpb258fCEwPT09dS5rZWVwU3RhdGljPzA9PT0oYT1jLmNhbGwobyxlLHQuc2xpY2UoKSkubG9jYXRvci5zbGljZSgpKS5sZW5ndGgmJihhPXRbMF0ubG9jYXRvci5zbGljZSgpKTp0LmZvckVhY2goKGZ1bmN0aW9uKGUpe1wiXCIhPT1lLmRlZiYmKDA9PT1hLmxlbmd0aD8oaT1lLmFsdGVybmF0aW9uLGE9ZS5sb2NhdG9yLnNsaWNlKCkpOmUubG9jYXRvcltpXSYmLTE9PT1hW2ldLnRvU3RyaW5nKCkuaW5kZXhPZihlLmxvY2F0b3JbaV0pJiYoYVtpXSs9XCIsXCIrZS5sb2NhdG9yW2ldKSl9KSkpLGF9KFAseCksaz12LmpvaW4oXCJcIiksaD1QKX1pZihsLnRlc3RzW2VdJiZsLnRlc3RzW2VdWzBdLmNkPT09aylyZXR1cm4gbC50ZXN0c1tlXTtmb3IodmFyIHc9di5zaGlmdCgpO3c8cC5sZW5ndGg7dysrKXtpZih5KHBbd10sdixbd10pJiZoPT09ZXx8aD5lKWJyZWFrfX1yZXR1cm4oMD09PW0ubGVuZ3RofHxnKSYmbS5wdXNoKHttYXRjaDp7Zm46bnVsbCxzdGF0aWM6ITAsb3B0aW9uYWxpdHk6ITEsY2FzaW5nOm51bGwsZGVmOlwiXCIscGxhY2Vob2xkZXI6XCJcIn0sbG9jYXRvcjpbXSxtbG9jOnt9LGNkOmt9KSx2b2lkIDAhPT10JiZsLnRlc3RzW2VdP3I9cy5leHRlbmQoITAsW10sbSk6KGwudGVzdHNbZV09cy5leHRlbmQoITAsW10sbSkscj1sLnRlc3RzW2VdKSxtLmZvckVhY2goKGZ1bmN0aW9uKGUpe2UubWF0Y2gub3B0aW9uYWxpdHk9ZS5tYXRjaC5kZWZPcHRpb25hbGl0eXx8ITF9KSkscn19LDcyMTU6ZnVuY3Rpb24oZSx0LGkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuYWx0ZXJuYXRlPXMsdC5jaGVja0FsdGVybmF0aW9uTWF0Y2g9ZnVuY3Rpb24oZSx0LGkpe2Zvcih2YXIgYSxuPXRoaXMub3B0cy5ncmVlZHk/dDp0LnNsaWNlKDAsMSkscj0hMSxvPXZvaWQgMCE9PWk/aS5zcGxpdChcIixcIik6W10scz0wO3M8by5sZW5ndGg7cysrKS0xIT09KGE9ZS5pbmRleE9mKG9bc10pKSYmZS5zcGxpY2UoYSwxKTtmb3IodmFyIGw9MDtsPGUubGVuZ3RoO2wrKylpZihuLmluY2x1ZGVzKGVbbF0pKXtyPSEwO2JyZWFrfXJldHVybiByfSx0LmhhbmRsZVJlbW92ZT1mdW5jdGlvbihlLHQsaSxvLGwpe3ZhciBjPXRoaXMsdT10aGlzLm1hc2tzZXQsZj10aGlzLm9wdHM7aWYoKGYubnVtZXJpY0lucHV0fHxjLmlzUlRMKSYmKHQ9PT1uLmtleXMuQmFja3NwYWNlP3Q9bi5rZXlzLkRlbGV0ZTp0PT09bi5rZXlzLkRlbGV0ZSYmKHQ9bi5rZXlzLkJhY2tzcGFjZSksYy5pc1JUTCkpe3ZhciBkPWkuZW5kO2kuZW5kPWkuYmVnaW4saS5iZWdpbj1kfXZhciBwLGg9ci5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKGMsdm9pZCAwLCEwKTtpLmVuZD49ci5nZXRCdWZmZXIuY2FsbChjKS5sZW5ndGgmJmg+PWkuZW5kJiYoaS5lbmQ9aCsxKTt0PT09bi5rZXlzLkJhY2tzcGFjZT9pLmVuZC1pLmJlZ2luPDEmJihpLmJlZ2luPXIuc2Vla1ByZXZpb3VzLmNhbGwoYyxpLmJlZ2luKSk6dD09PW4ua2V5cy5EZWxldGUmJmkuYmVnaW49PT1pLmVuZCYmKGkuZW5kPXIuaXNNYXNrLmNhbGwoYyxpLmVuZCwhMCwhMCk/aS5lbmQrMTpyLnNlZWtOZXh0LmNhbGwoYyxpLmVuZCkrMSk7aWYoITEhPT0ocD12LmNhbGwoYyxpKSkpe2lmKCEwIT09byYmITEhPT1mLmtlZXBTdGF0aWN8fG51bGwhPT1mLnJlZ2V4JiYtMSE9PWEuZ2V0VGVzdC5jYWxsKGMsaS5iZWdpbikubWF0Y2guZGVmLmluZGV4T2YoXCJ8XCIpKXt2YXIgbT1zLmNhbGwoYywhMCk7aWYobSl7dmFyIGc9dm9pZCAwIT09bS5jYXJldD9tLmNhcmV0Om0ucG9zP3Iuc2Vla05leHQuY2FsbChjLG0ucG9zLmJlZ2luP20ucG9zLmJlZ2luOm0ucG9zKTpyLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwoYywtMSwhMCk7KHQhPT1uLmtleXMuRGVsZXRlfHxpLmJlZ2luPmcpJiZpLmJlZ2lufX0hMCE9PW8mJih1LnA9dD09PW4ua2V5cy5EZWxldGU/aS5iZWdpbitwOmkuYmVnaW4sdS5wPXIuZGV0ZXJtaW5lTmV3Q2FyZXRQb3NpdGlvbi5jYWxsKGMse2JlZ2luOnUucCxlbmQ6dS5wfSwhMSwhMT09PWYuaW5zZXJ0TW9kZSYmdD09PW4ua2V5cy5CYWNrc3BhY2U/XCJub25lXCI6dm9pZCAwKS5iZWdpbil9fSx0LmlzQ29tcGxldGU9Yyx0LmlzU2VsZWN0aW9uPXUsdC5pc1ZhbGlkPWYsdC5yZWZyZXNoRnJvbUJ1ZmZlcj1wLHQucmV2YWxpZGF0ZU1hc2s9djt2YXIgYT1pKDQ3MTMpLG49aSgyODM5KSxyPWkoODcxMSksbz1pKDYwMzApO2Z1bmN0aW9uIHMoZSx0LGksbixvLGwpe3ZhciBjLHUsZCxwLGgsdixtLGcsayx5LGIseD10aGlzLFA9dGhpcy5kZXBlbmRlbmN5TGliLHc9dGhpcy5vcHRzLFM9eC5tYXNrc2V0LF89UC5leHRlbmQoITAsW10sUy52YWxpZFBvc2l0aW9ucyksTT1QLmV4dGVuZCghMCx7fSxTLnRlc3RzKSxPPSExLEU9ITEsVD12b2lkIDAhPT1vP286ci5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHgpO2lmKGwmJih5PWwuYmVnaW4sYj1sLmVuZCxsLmJlZ2luPmwuZW5kJiYoeT1sLmVuZCxiPWwuYmVnaW4pKSwtMT09PVQmJnZvaWQgMD09PW8pYz0wLHU9KHA9YS5nZXRUZXN0LmNhbGwoeCxjKSkuYWx0ZXJuYXRpb247ZWxzZSBmb3IoO1Q+PTA7VC0tKWlmKChkPVMudmFsaWRQb3NpdGlvbnNbVF0pJiZ2b2lkIDAhPT1kLmFsdGVybmF0aW9uKXtpZihwJiZwLmxvY2F0b3JbZC5hbHRlcm5hdGlvbl0hPT1kLmxvY2F0b3JbZC5hbHRlcm5hdGlvbl0pYnJlYWs7Yz1ULHU9Uy52YWxpZFBvc2l0aW9uc1tjXS5hbHRlcm5hdGlvbixwPWR9aWYodm9pZCAwIT09dSl7bT1wYXJzZUludChjKSxTLmV4Y2x1ZGVzW21dPVMuZXhjbHVkZXNbbV18fFtdLCEwIT09ZSYmUy5leGNsdWRlc1ttXS5wdXNoKCgwLGEuZ2V0RGVjaXNpb25UYWtlcikocCkrXCI6XCIrcC5hbHRlcm5hdGlvbik7dmFyIGo9W10sRD0tMTtmb3IoaD1tO2g8ci5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHgsdm9pZCAwLCEwKSsxO2grKyktMT09PUQmJmU8PWgmJnZvaWQgMCE9PXQmJihqLnB1c2godCksRD1qLmxlbmd0aC0xKSwodj1TLnZhbGlkUG9zaXRpb25zW2hdKSYmITAhPT12LmdlbmVyYXRlZElucHV0JiYodm9pZCAwPT09bHx8aDx5fHxoPj1iKSYmai5wdXNoKHYuaW5wdXQpLGRlbGV0ZSBTLnZhbGlkUG9zaXRpb25zW2hdO2ZvcigtMT09PUQmJnZvaWQgMCE9PXQmJihqLnB1c2godCksRD1qLmxlbmd0aC0xKTt2b2lkIDAhPT1TLmV4Y2x1ZGVzW21dJiZTLmV4Y2x1ZGVzW21dLmxlbmd0aDwxMDspe2ZvcihTLnRlc3RzPXt9LHIucmVzZXRNYXNrU2V0LmNhbGwoeCwhMCksTz0hMCxoPTA7aDxqLmxlbmd0aCYmKGc9Ty5jYXJldHx8ci5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHgsdm9pZCAwLCEwKSsxLGs9altoXSxPPWYuY2FsbCh4LGcsaywhMSxuLCEwKSk7aCsrKWg9PT1EJiYoRT1PKSwxPT1lJiZPJiYoRT17Y2FyZXRQb3M6aH0pO2lmKE8pYnJlYWs7aWYoci5yZXNldE1hc2tTZXQuY2FsbCh4KSxwPWEuZ2V0VGVzdC5jYWxsKHgsbSksUy52YWxpZFBvc2l0aW9ucz1QLmV4dGVuZCghMCxbXSxfKSxTLnRlc3RzPVAuZXh0ZW5kKCEwLHt9LE0pLCFTLmV4Y2x1ZGVzW21dKXtFPXMuY2FsbCh4LGUsdCxpLG4sbS0xLGwpO2JyZWFrfXZhciBBPSgwLGEuZ2V0RGVjaXNpb25UYWtlcikocCk7aWYoLTEhPT1TLmV4Y2x1ZGVzW21dLmluZGV4T2YoQStcIjpcIitwLmFsdGVybmF0aW9uKSl7RT1zLmNhbGwoeCxlLHQsaSxuLG0tMSxsKTticmVha31mb3IoUy5leGNsdWRlc1ttXS5wdXNoKEErXCI6XCIrcC5hbHRlcm5hdGlvbiksaD1tO2g8ci5nZXRMYXN0VmFsaWRQb3NpdGlvbi5jYWxsKHgsdm9pZCAwLCEwKSsxO2grKylkZWxldGUgUy52YWxpZFBvc2l0aW9uc1toXX19cmV0dXJuIEUmJiExPT09dy5rZWVwU3RhdGljfHxkZWxldGUgUy5leGNsdWRlc1ttXSxFfWZ1bmN0aW9uIGwoZSx0LGkpe3ZhciBhPXRoaXMub3B0cyxyPXRoaXMubWFza3NldDtzd2l0Y2goYS5jYXNpbmd8fHQuY2FzaW5nKXtjYXNlXCJ1cHBlclwiOmU9ZS50b1VwcGVyQ2FzZSgpO2JyZWFrO2Nhc2VcImxvd2VyXCI6ZT1lLnRvTG93ZXJDYXNlKCk7YnJlYWs7Y2FzZVwidGl0bGVcIjp2YXIgbz1yLnZhbGlkUG9zaXRpb25zW2ktMV07ZT0wPT09aXx8byYmby5pbnB1dD09PVN0cmluZy5mcm9tQ2hhckNvZGUobi5rZXlDb2RlLlNwYWNlKT9lLnRvVXBwZXJDYXNlKCk6ZS50b0xvd2VyQ2FzZSgpO2JyZWFrO2RlZmF1bHQ6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jYXNpbmcpe3ZhciBzPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cy5wdXNoKHIudmFsaWRQb3NpdGlvbnMpLGU9YS5jYXNpbmcuYXBwbHkodGhpcyxzKX19cmV0dXJuIGV9ZnVuY3Rpb24gYyhlKXt2YXIgdD10aGlzLGk9dGhpcy5vcHRzLG49dGhpcy5tYXNrc2V0O2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGkuaXNDb21wbGV0ZSlyZXR1cm4gaS5pc0NvbXBsZXRlKGUsaSk7aWYoXCIqXCIhPT1pLnJlcGVhdCl7dmFyIG89ITEscz1yLmRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uLmNhbGwodCwhMCksbD1yLnNlZWtQcmV2aW91cy5jYWxsKHQscy5sKTtpZih2b2lkIDA9PT1zLmRlZnx8cy5kZWYubmV3QmxvY2tNYXJrZXJ8fHMuZGVmLm9wdGlvbmFsaXR5fHxzLmRlZi5vcHRpb25hbFF1YW50aWZpZXIpe289ITA7Zm9yKHZhciBjPTA7Yzw9bDtjKyspe3ZhciB1PWEuZ2V0VGVzdFRlbXBsYXRlLmNhbGwodCxjKS5tYXRjaDtpZighMCE9PXUuc3RhdGljJiZ2b2lkIDA9PT1uLnZhbGlkUG9zaXRpb25zW2NdJiYhMCE9PXUub3B0aW9uYWxpdHkmJiEwIT09dS5vcHRpb25hbFF1YW50aWZpZXJ8fCEwPT09dS5zdGF0aWMmJmVbY10hPT1hLmdldFBsYWNlaG9sZGVyLmNhbGwodCxjLHUpKXtvPSExO2JyZWFrfX19cmV0dXJuIG99fWZ1bmN0aW9uIHUoZSl7dmFyIHQ9dGhpcy5vcHRzLmluc2VydE1vZGU/MDoxO3JldHVybiB0aGlzLmlzUlRMP2UuYmVnaW4tZS5lbmQ+dDplLmVuZC1lLmJlZ2luPnR9ZnVuY3Rpb24gZihlLHQsaSxuLG8sZCxtKXt2YXIgZz10aGlzLGs9dGhpcy5kZXBlbmRlbmN5TGliLHk9dGhpcy5vcHRzLGI9Zy5tYXNrc2V0O2k9ITA9PT1pO3ZhciB4PWU7ZnVuY3Rpb24gUChlKXtpZih2b2lkIDAhPT1lKXtpZih2b2lkIDAhPT1lLnJlbW92ZSYmKEFycmF5LmlzQXJyYXkoZS5yZW1vdmUpfHwoZS5yZW1vdmU9W2UucmVtb3ZlXSksZS5yZW1vdmUuc29ydCgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZy5pc1JUTD9lLnBvcy10LnBvczp0LnBvcy1lLnBvc30pKS5mb3JFYWNoKChmdW5jdGlvbihlKXt2LmNhbGwoZyx7YmVnaW46ZSxlbmQ6ZSsxfSl9KSksZS5yZW1vdmU9dm9pZCAwKSx2b2lkIDAhPT1lLmluc2VydCYmKEFycmF5LmlzQXJyYXkoZS5pbnNlcnQpfHwoZS5pbnNlcnQ9W2UuaW5zZXJ0XSksZS5pbnNlcnQuc29ydCgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZy5pc1JUTD90LnBvcy1lLnBvczplLnBvcy10LnBvc30pKS5mb3JFYWNoKChmdW5jdGlvbihlKXtcIlwiIT09ZS5jJiZmLmNhbGwoZyxlLnBvcyxlLmMsdm9pZCAwPT09ZS5zdHJpY3R8fGUuc3RyaWN0LHZvaWQgMCE9PWUuZnJvbUlzVmFsaWQ/ZS5mcm9tSXNWYWxpZDpuKX0pKSxlLmluc2VydD12b2lkIDApLGUucmVmcmVzaEZyb21CdWZmZXImJmUuYnVmZmVyKXt2YXIgdD1lLnJlZnJlc2hGcm9tQnVmZmVyO3AuY2FsbChnLCEwPT09dD90OnQuc3RhcnQsdC5lbmQsZS5idWZmZXIpLGUucmVmcmVzaEZyb21CdWZmZXI9dm9pZCAwfXZvaWQgMCE9PWUucmV3cml0ZVBvc2l0aW9uJiYoeD1lLnJld3JpdGVQb3NpdGlvbixlPSEwKX1yZXR1cm4gZX1mdW5jdGlvbiB3KHQsaSxvKXt2YXIgcz0hMTtyZXR1cm4gYS5nZXRUZXN0cy5jYWxsKGcsdCkuZXZlcnkoKGZ1bmN0aW9uKGMsZil7dmFyIGQ9Yy5tYXRjaDtpZihyLmdldEJ1ZmZlci5jYWxsKGcsITApLCExIT09KHM9KCFkLmppdHx8dm9pZCAwIT09Yi52YWxpZFBvc2l0aW9uc1tyLnNlZWtQcmV2aW91cy5jYWxsKGcsdCldKSYmKG51bGwhPWQuZm4/ZC5mbi50ZXN0KGksYix0LG8seSx1LmNhbGwoZyxlKSk6KGk9PT1kLmRlZnx8aT09PXkuc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlcikmJlwiXCIhPT1kLmRlZiYme2M6YS5nZXRQbGFjZWhvbGRlci5jYWxsKGcsdCxkLCEwKXx8ZC5kZWYscG9zOnR9KSkpe3ZhciBwPXZvaWQgMCE9PXMuYz9zLmM6aSxoPXQ7cmV0dXJuIHA9cD09PXkuc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlciYmITA9PT1kLnN0YXRpYz9hLmdldFBsYWNlaG9sZGVyLmNhbGwoZyx0LGQsITApfHxkLmRlZjpwLCEwIT09KHM9UChzKSkmJnZvaWQgMCE9PXMucG9zJiZzLnBvcyE9PXQmJihoPXMucG9zKSwhMCE9PXMmJnZvaWQgMD09PXMucG9zJiZ2b2lkIDA9PT1zLmM/ITE6KCExPT09di5jYWxsKGcsZSxrLmV4dGVuZCh7fSxjLHtpbnB1dDpsLmNhbGwoZyxwLGQsaCl9KSxuLGgpJiYocz0hMSksITEpfXJldHVybiEwfSkpLHN9dm9pZCAwIT09ZS5iZWdpbiYmKHg9Zy5pc1JUTD9lLmVuZDplLmJlZ2luKTt2YXIgUz0hMCxfPWsuZXh0ZW5kKCEwLHt9LGIudmFsaWRQb3NpdGlvbnMpO2lmKCExPT09eS5rZWVwU3RhdGljJiZ2b2lkIDAhPT1iLmV4Y2x1ZGVzW3hdJiYhMCE9PW8mJiEwIT09bilmb3IodmFyIE09eDtNPChnLmlzUlRMP2UuYmVnaW46ZS5lbmQpO00rKyl2b2lkIDAhPT1iLmV4Y2x1ZGVzW01dJiYoYi5leGNsdWRlc1tNXT12b2lkIDAsZGVsZXRlIGIudGVzdHNbTV0pO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHkucHJlVmFsaWRhdGlvbiYmITAhPT1uJiYhMCE9PWQmJihTPVAoUz15LnByZVZhbGlkYXRpb24uY2FsbChnLHIuZ2V0QnVmZmVyLmNhbGwoZykseCx0LHUuY2FsbChnLGUpLHksYixlLGl8fG8pKSksITA9PT1TKXtpZihTPXcoeCx0LGkpLCghaXx8ITA9PT1uKSYmITE9PT1TJiYhMCE9PWQpe3ZhciBPPWIudmFsaWRQb3NpdGlvbnNbeF07aWYoIU98fCEwIT09Ty5tYXRjaC5zdGF0aWN8fE8ubWF0Y2guZGVmIT09dCYmdCE9PXkuc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcil7aWYoeS5pbnNlcnRNb2RlfHx2b2lkIDA9PT1iLnZhbGlkUG9zaXRpb25zW3Iuc2Vla05leHQuY2FsbChnLHgpXXx8ZS5lbmQ+eCl7dmFyIEU9ITE7aWYoYi5qaXRPZmZzZXRbeF0mJnZvaWQgMD09PWIudmFsaWRQb3NpdGlvbnNbci5zZWVrTmV4dC5jYWxsKGcseCldJiYhMSE9PShTPWYuY2FsbChnLHgrYi5qaXRPZmZzZXRbeF0sdCwhMCwhMCkpJiYoITAhPT1vJiYoUy5jYXJldD14KSxFPSEwKSxlLmVuZD54JiYoYi52YWxpZFBvc2l0aW9uc1t4XT12b2lkIDApLCFFJiYhci5pc01hc2suY2FsbChnLHgseS5rZWVwU3RhdGljJiYwPT09eCkpZm9yKHZhciBUPXgrMSxqPXIuc2Vla05leHQuY2FsbChnLHgsITEsMCE9PXgpO1Q8PWo7VCsrKWlmKCExIT09KFM9dyhULHQsaSkpKXtTPWguY2FsbChnLHgsdm9pZCAwIT09Uy5wb3M/Uy5wb3M6VCl8fFMseD1UO2JyZWFrfX19ZWxzZSBTPXtjYXJldDpyLnNlZWtOZXh0LmNhbGwoZyx4KX19ITEhPT1TfHwheS5rZWVwU3RhdGljfHwhYy5jYWxsKGcsci5nZXRCdWZmZXIuY2FsbChnKSkmJjAhPT14fHxpfHwhMD09PW8/dS5jYWxsKGcsZSkmJmIudGVzdHNbeF0mJmIudGVzdHNbeF0ubGVuZ3RoPjEmJnkua2VlcFN0YXRpYyYmIWkmJiEwIT09byYmKFM9cy5jYWxsKGcsITApKTpTPXMuY2FsbChnLHgsdCxpLG4sdm9pZCAwLGUpLCEwPT09UyYmKFM9e3Bvczp4fSl9aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgeS5wb3N0VmFsaWRhdGlvbiYmITAhPT1uJiYhMCE9PWQpe3ZhciBEPXkucG9zdFZhbGlkYXRpb24uY2FsbChnLHIuZ2V0QnVmZmVyLmNhbGwoZywhMCksdm9pZCAwIT09ZS5iZWdpbj9nLmlzUlRMP2UuZW5kOmUuYmVnaW46ZSx0LFMseSxiLGksbSk7dm9pZCAwIT09RCYmKFM9ITA9PT1EP1M6RCl9UyYmdm9pZCAwPT09Uy5wb3MmJihTLnBvcz14KSwhMT09PVN8fCEwPT09ZD8oci5yZXNldE1hc2tTZXQuY2FsbChnLCEwKSxiLnZhbGlkUG9zaXRpb25zPWsuZXh0ZW5kKCEwLFtdLF8pKTpoLmNhbGwoZyx2b2lkIDAseCwhMCk7dmFyIEE9UChTKTt2b2lkIDAhPT1nLm1heExlbmd0aCYmKHIuZ2V0QnVmZmVyLmNhbGwoZykubGVuZ3RoPmcubWF4TGVuZ3RoJiYhbiYmKHIucmVzZXRNYXNrU2V0LmNhbGwoZywhMCksYi52YWxpZFBvc2l0aW9ucz1rLmV4dGVuZCghMCxbXSxfKSxBPSExKSk7cmV0dXJuIEF9ZnVuY3Rpb24gZChlLHQsaSl7Zm9yKHZhciBuPXRoaXMubWFza3NldCxyPSExLG89YS5nZXRUZXN0cy5jYWxsKHRoaXMsZSkscz0wO3M8by5sZW5ndGg7cysrKXtpZihvW3NdLm1hdGNoJiYob1tzXS5tYXRjaC5uYXRpdmVEZWY9PT10Lm1hdGNoW2kuc2hpZnRQb3NpdGlvbnM/XCJkZWZcIjpcIm5hdGl2ZURlZlwiXSYmKCFpLnNoaWZ0UG9zaXRpb25zfHwhdC5tYXRjaC5zdGF0aWMpfHxvW3NdLm1hdGNoLm5hdGl2ZURlZj09PXQubWF0Y2gubmF0aXZlRGVmfHxpLnJlZ2V4JiYhb1tzXS5tYXRjaC5zdGF0aWMmJm9bc10ubWF0Y2guZm4udGVzdCh0LmlucHV0LG4sZSwhMSxpKSkpe3I9ITA7YnJlYWt9aWYob1tzXS5tYXRjaCYmb1tzXS5tYXRjaC5kZWY9PT10Lm1hdGNoLm5hdGl2ZURlZil7cj12b2lkIDA7YnJlYWt9fXJldHVybiExPT09ciYmdm9pZCAwIT09bi5qaXRPZmZzZXRbZV0mJihyPWQuY2FsbCh0aGlzLGUrbi5qaXRPZmZzZXRbZV0sdCxpKSkscn1mdW5jdGlvbiBwKGUsdCxpKXt2YXIgYSxuLHM9dGhpcyxsPXRoaXMubWFza3NldCxjPXRoaXMub3B0cyx1PXRoaXMuZGVwZW5kZW5jeUxpYixmPWMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlcixkPXMuaXNSVEw/aS5zbGljZSgpLnJldmVyc2UoKTppO2lmKGMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcj1cIlwiLCEwPT09ZSlyLnJlc2V0TWFza1NldC5jYWxsKHMpLGwudGVzdHM9e30sZT0wLHQ9aS5sZW5ndGgsbj1yLmRldGVybWluZU5ld0NhcmV0UG9zaXRpb24uY2FsbChzLHtiZWdpbjowLGVuZDowfSwhMSkuYmVnaW47ZWxzZXtmb3IoYT1lO2E8dDthKyspZGVsZXRlIGwudmFsaWRQb3NpdGlvbnNbYV07bj1lfXZhciBwPW5ldyB1LkV2ZW50KFwia2V5cHJlc3NcIik7Zm9yKGE9ZTthPHQ7YSsrKXtwLmtleT1kW2FdLnRvU3RyaW5nKCkscy5pZ25vcmFibGU9ITE7dmFyIGg9by5FdmVudEhhbmRsZXJzLmtleXByZXNzRXZlbnQuY2FsbChzLHAsITAsITEsITEsbik7ITEhPT1oJiZ2b2lkIDAhPT1oJiYobj1oLmZvcndhcmRQb3NpdGlvbil9Yy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyPWZ9ZnVuY3Rpb24gaChlLHQsaSl7dmFyIG49dGhpcyxvPXRoaXMubWFza3NldCxzPXRoaXMuZGVwZW5kZW5jeUxpYjtpZih2b2lkIDA9PT1lKWZvcihlPXQtMTtlPjAmJiFvLnZhbGlkUG9zaXRpb25zW2VdO2UtLSk7Zm9yKHZhciBsPWU7bDx0O2wrKyl7aWYodm9pZCAwPT09by52YWxpZFBvc2l0aW9uc1tsXSYmIXIuaXNNYXNrLmNhbGwobixsLCExKSlpZigwPT1sP2EuZ2V0VGVzdC5jYWxsKG4sbCk6by52YWxpZFBvc2l0aW9uc1tsLTFdKXt2YXIgYz1hLmdldFRlc3RzLmNhbGwobixsKS5zbGljZSgpO1wiXCI9PT1jW2MubGVuZ3RoLTFdLm1hdGNoLmRlZiYmYy5wb3AoKTt2YXIgdSxkPWEuZGV0ZXJtaW5lVGVzdFRlbXBsYXRlLmNhbGwobixsLGMpO2lmKGQmJighMCE9PWQubWF0Y2guaml0fHxcIm1hc3RlclwiPT09ZC5tYXRjaC5uZXdCbG9ja01hcmtlciYmKHU9by52YWxpZFBvc2l0aW9uc1tsKzFdKSYmITA9PT11Lm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcikmJigoZD1zLmV4dGVuZCh7fSxkLHtpbnB1dDphLmdldFBsYWNlaG9sZGVyLmNhbGwobixsLGQubWF0Y2gsITApfHxkLm1hdGNoLmRlZn0pKS5nZW5lcmF0ZWRJbnB1dD0hMCx2LmNhbGwobixsLGQsITApLCEwIT09aSkpe3ZhciBwPW8udmFsaWRQb3NpdGlvbnNbdF0uaW5wdXQ7cmV0dXJuIG8udmFsaWRQb3NpdGlvbnNbdF09dm9pZCAwLGYuY2FsbChuLHQscCwhMCwhMCl9fX19ZnVuY3Rpb24gdihlLHQsaSxuKXt2YXIgbz10aGlzLHM9dGhpcy5tYXNrc2V0LGw9dGhpcy5vcHRzLGM9dGhpcy5kZXBlbmRlbmN5TGliO2Z1bmN0aW9uIHUoZSx0LGkpe3ZhciBhPXRbZV07aWYodm9pZCAwIT09YSYmITA9PT1hLm1hdGNoLnN0YXRpYyYmITAhPT1hLm1hdGNoLm9wdGlvbmFsaXR5JiYodm9pZCAwPT09dFswXXx8dm9pZCAwPT09dFswXS5hbHRlcm5hdGlvbikpe3ZhciBuPWkuYmVnaW48PWUtMT90W2UtMV0mJiEwPT09dFtlLTFdLm1hdGNoLnN0YXRpYyYmdFtlLTFdOnRbZS0xXSxyPWkuZW5kPmUrMT90W2UrMV0mJiEwPT09dFtlKzFdLm1hdGNoLnN0YXRpYyYmdFtlKzFdOnRbZSsxXTtyZXR1cm4gbiYmcn1yZXR1cm4hMX12YXIgcD0wLGg9dm9pZCAwIT09ZS5iZWdpbj9lLmJlZ2luOmUsdj12b2lkIDAhPT1lLmVuZD9lLmVuZDplLG09ITA7aWYoZS5iZWdpbj5lLmVuZCYmKGg9ZS5lbmQsdj1lLmJlZ2luKSxuPXZvaWQgMCE9PW4/bjpoLHZvaWQgMD09PWkmJihoIT09dnx8bC5pbnNlcnRNb2RlJiZ2b2lkIDAhPT1zLnZhbGlkUG9zaXRpb25zW25dfHx2b2lkIDA9PT10fHx0Lm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcnx8dC5tYXRjaC5vcHRpb25hbGl0eSkpe3ZhciBnLGs9Yy5leHRlbmQoITAse30scy52YWxpZFBvc2l0aW9ucykseT1yLmdldExhc3RWYWxpZFBvc2l0aW9uLmNhbGwobyx2b2lkIDAsITApO2ZvcihzLnA9aCxnPXk7Zz49aDtnLS0pZGVsZXRlIHMudmFsaWRQb3NpdGlvbnNbZ10sdm9pZCAwPT09dCYmZGVsZXRlIHMudGVzdHNbZysxXTt2YXIgYix4LFA9bix3PVA7Zm9yKHQmJihzLnZhbGlkUG9zaXRpb25zW25dPWMuZXh0ZW5kKCEwLHt9LHQpLHcrKyxQKyspLGc9dD92OnYtMTtnPD15O2crKyl7aWYodm9pZCAwIT09KGI9a1tnXSkmJiEwIT09Yi5nZW5lcmF0ZWRJbnB1dCYmKGc+PXZ8fGc+PWgmJnUoZyxrLHtiZWdpbjpoLGVuZDp2fSkpKXtmb3IoO1wiXCIhPT1hLmdldFRlc3QuY2FsbChvLHcpLm1hdGNoLmRlZjspe2lmKCExIT09KHg9ZC5jYWxsKG8sdyxiLGwpKXx8XCIrXCI9PT1iLm1hdGNoLmRlZil7XCIrXCI9PT1iLm1hdGNoLmRlZiYmci5nZXRCdWZmZXIuY2FsbChvLCEwKTt2YXIgUz1mLmNhbGwobyx3LGIuaW5wdXQsXCIrXCIhPT1iLm1hdGNoLmRlZiwhMCk7aWYobT0hMSE9PVMsUD0oUy5wb3N8fHcpKzEsIW0mJngpYnJlYWt9ZWxzZSBtPSExO2lmKG0pe3ZvaWQgMD09PXQmJmIubWF0Y2guc3RhdGljJiZnPT09ZS5iZWdpbiYmcCsrO2JyZWFrfWlmKCFtJiZyLmdldEJ1ZmZlci5jYWxsKG8pLHc+cy5tYXNrTGVuZ3RoKWJyZWFrO3crK31cIlwiPT1hLmdldFRlc3QuY2FsbChvLHcpLm1hdGNoLmRlZiYmKG09ITEpLHc9UH1pZighbSlicmVha31pZighbSlyZXR1cm4gcy52YWxpZFBvc2l0aW9ucz1jLmV4dGVuZCghMCxbXSxrKSxyLnJlc2V0TWFza1NldC5jYWxsKG8sITApLCExfWVsc2UgdCYmYS5nZXRUZXN0LmNhbGwobyxuKS5tYXRjaC5jZD09PXQubWF0Y2guY2QmJihzLnZhbGlkUG9zaXRpb25zW25dPWMuZXh0ZW5kKCEwLHt9LHQpKTtyZXR1cm4gci5yZXNldE1hc2tTZXQuY2FsbChvLCEwKSxwfX19LHQ9e307ZnVuY3Rpb24gaShhKXt2YXIgbj10W2FdO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG4uZXhwb3J0czt2YXIgcj10W2FdPXtleHBvcnRzOnt9fTtyZXR1cm4gZVthXShyLHIuZXhwb3J0cyxpKSxyLmV4cG9ydHN9dmFyIGE9e307cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGUsdD1hO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD12b2lkIDAsaSg3MTQ5KSxpKDMxOTQpLGkoOTMwMiksaSg0MDEzKSxpKDM4NTEpLGkoMjE5KSxpKDIwNyksaSg1Mjk2KTt2YXIgbj0oKGU9aSgyMzk0KSkmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9KS5kZWZhdWx0O3QuZGVmYXVsdD1ufSgpLGF9KCl9KSk7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbihmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHR5cGVzVG9QYXRjaCA9IFsnRG9jdW1lbnRUeXBlJywgJ0VsZW1lbnQnLCAnQ2hhcmFjdGVyRGF0YSddLFxuICAgICAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgIC8vIFRoZSBjaGVjayBoZXJlIHNlZW1zIHBvaW50bGVzcywgc2luY2Ugd2UncmUgbm90IGFkZGluZyB0aGlzXG4gICAgICAgIC8vIG1ldGhvZCB0byB0aGUgcHJvdG90eXBlcyBvZiBhbnkgYW55IGVsZW1lbnRzIHRoYXQgQ0FOIGJlIHRoZVxuICAgICAgICAvLyByb290IG9mIHRoZSBET00uIEhvd2V2ZXIsIGl0J3MgcmVxdWlyZWQgYnkgc3BlYyAoc2VlIHBvaW50IDEgb2ZcbiAgICAgICAgLy8gaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnLyNkb20tY2hpbGRub2RlLXJlbW92ZSkgYW5kIHdvdWxkXG4gICAgICAgIC8vIHRoZW9yZXRpY2FsbHkgbWFrZSBhIGRpZmZlcmVuY2UgaWYgc29tZWJvZHkgLmFwcGx5KCllZCB0aGlzXG4gICAgICAgIC8vIG1ldGhvZCB0byB0aGUgRE9NJ3Mgcm9vdCBub2RlLCBzbyBsZXQncyByb2xsIHdpdGggaXQuXG4gICAgICAgIGlmICh0aGlzLnBhcmVudE5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHlwZXNUb1BhdGNoLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB0eXBlID0gdHlwZXNUb1BhdGNoW2ldO1xuICAgICAgICBpZiAod2luZG93W3R5cGVdICYmICF3aW5kb3dbdHlwZV0ucHJvdG90eXBlLnJlbW92ZSkge1xuICAgICAgICAgICAgd2luZG93W3R5cGVdLnByb3RvdHlwZS5yZW1vdmUgPSByZW1vdmU7XG4gICAgICAgIH1cbiAgICB9XG59KSgpO1xuKGZ1bmN0aW9uIChyb290KSB7XG5cbiAgICAvLyBTdG9yZSBzZXRUaW1lb3V0IHJlZmVyZW5jZSBzbyBwcm9taXNlLXBvbHlmaWxsIHdpbGwgYmUgdW5hZmZlY3RlZCBieVxuICAgIC8vIG90aGVyIGNvZGUgbW9kaWZ5aW5nIHNldFRpbWVvdXQgKGxpa2Ugc2lub24udXNlRmFrZVRpbWVycygpKVxuICAgIHZhciBzZXRUaW1lb3V0RnVuYyA9IHNldFRpbWVvdXQ7XG5cbiAgICBmdW5jdGlvbiBub29wKCkge31cblxuICAgIC8vIFBvbHlmaWxsIGZvciBGdW5jdGlvbi5wcm90b3R5cGUuYmluZFxuICAgIGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGZuLmFwcGx5KHRoaXNBcmcsIGFyZ3VtZW50cyk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gUHJvbWlzZShmbikge1xuICAgICAgICBpZiAoX3R5cGVvZih0aGlzKSAhPT0gJ29iamVjdCcpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Byb21pc2VzIG11c3QgYmUgY29uc3RydWN0ZWQgdmlhIG5ldycpO1xuICAgICAgICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdub3QgYSBmdW5jdGlvbicpO1xuICAgICAgICB0aGlzLl9zdGF0ZSA9IDA7XG4gICAgICAgIHRoaXMuX2hhbmRsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuX2RlZmVycmVkcyA9IFtdO1xuXG4gICAgICAgIGRvUmVzb2x2ZShmbiwgdGhpcyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlKHNlbGYsIGRlZmVycmVkKSB7XG4gICAgICAgIHdoaWxlIChzZWxmLl9zdGF0ZSA9PT0gMykge1xuICAgICAgICAgICAgc2VsZiA9IHNlbGYuX3ZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLl9zdGF0ZSA9PT0gMCkge1xuICAgICAgICAgICAgc2VsZi5fZGVmZXJyZWRzLnB1c2goZGVmZXJyZWQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuX2hhbmRsZWQgPSB0cnVlO1xuICAgICAgICBQcm9taXNlLl9pbW1lZGlhdGVGbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgY2IgPSBzZWxmLl9zdGF0ZSA9PT0gMSA/IGRlZmVycmVkLm9uRnVsZmlsbGVkIDogZGVmZXJyZWQub25SZWplY3RlZDtcbiAgICAgICAgICAgIGlmIChjYiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIChzZWxmLl9zdGF0ZSA9PT0gMSA/IHJlc29sdmUgOiByZWplY3QpKGRlZmVycmVkLnByb21pc2UsIHNlbGYuX3ZhbHVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcmV0O1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXQgPSBjYihzZWxmLl92YWx1ZSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGRlZmVycmVkLnByb21pc2UsIGUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc29sdmUoZGVmZXJyZWQucHJvbWlzZSwgcmV0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVzb2x2ZShzZWxmLCBuZXdWYWx1ZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gUHJvbWlzZSBSZXNvbHV0aW9uIFByb2NlZHVyZTogaHR0cHM6Ly9naXRodWIuY29tL3Byb21pc2VzLWFwbHVzL3Byb21pc2VzLXNwZWMjdGhlLXByb21pc2UtcmVzb2x1dGlvbi1wcm9jZWR1cmVcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA9PT0gc2VsZikgdGhyb3cgbmV3IFR5cGVFcnJvcignQSBwcm9taXNlIGNhbm5vdCBiZSByZXNvbHZlZCB3aXRoIGl0c2VsZi4nKTtcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAmJiAoKHR5cGVvZiBuZXdWYWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YobmV3VmFsdWUpKSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIG5ld1ZhbHVlID09PSAnZnVuY3Rpb24nKSkge1xuICAgICAgICAgICAgICAgIHZhciB0aGVuID0gbmV3VmFsdWUudGhlbjtcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX3N0YXRlID0gMztcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgZmluYWxlKHNlbGYpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBkb1Jlc29sdmUoYmluZCh0aGVuLCBuZXdWYWx1ZSksIHNlbGYpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5fc3RhdGUgPSAxO1xuICAgICAgICAgICAgc2VsZi5fdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgICAgIGZpbmFsZShzZWxmKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmVqZWN0KHNlbGYsIGUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVqZWN0KHNlbGYsIG5ld1ZhbHVlKSB7XG4gICAgICAgIHNlbGYuX3N0YXRlID0gMjtcbiAgICAgICAgc2VsZi5fdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgZmluYWxlKHNlbGYpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZpbmFsZShzZWxmKSB7XG4gICAgICAgIGlmIChzZWxmLl9zdGF0ZSA9PT0gMiAmJiBzZWxmLl9kZWZlcnJlZHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBQcm9taXNlLl9pbW1lZGlhdGVGbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzZWxmLl9oYW5kbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIFByb21pc2UuX3VuaGFuZGxlZFJlamVjdGlvbkZuKHNlbGYuX3ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBzZWxmLl9kZWZlcnJlZHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGhhbmRsZShzZWxmLCBzZWxmLl9kZWZlcnJlZHNbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuX2RlZmVycmVkcyA9IG51bGw7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gSGFuZGxlcihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCwgcHJvbWlzZSkge1xuICAgICAgICB0aGlzLm9uRnVsZmlsbGVkID0gdHlwZW9mIG9uRnVsZmlsbGVkID09PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiBudWxsO1xuICAgICAgICB0aGlzLm9uUmVqZWN0ZWQgPSB0eXBlb2Ygb25SZWplY3RlZCA9PT0gJ2Z1bmN0aW9uJyA/IG9uUmVqZWN0ZWQgOiBudWxsO1xuICAgICAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRha2UgYSBwb3RlbnRpYWxseSBtaXNiZWhhdmluZyByZXNvbHZlciBmdW5jdGlvbiBhbmQgbWFrZSBzdXJlXG4gICAgICogb25GdWxmaWxsZWQgYW5kIG9uUmVqZWN0ZWQgYXJlIG9ubHkgY2FsbGVkIG9uY2UuXG4gICAgICpcbiAgICAgKiBNYWtlcyBubyBndWFyYW50ZWVzIGFib3V0IGFzeW5jaHJvbnkuXG4gICAgICovXG4gICAgZnVuY3Rpb24gZG9SZXNvbHZlKGZuLCBzZWxmKSB7XG4gICAgICAgIHZhciBkb25lID0gZmFsc2U7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoZG9uZSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoc2VsZiwgdmFsdWUpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgICAgICAgICAgIGlmIChkb25lKSByZXR1cm47XG4gICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmVqZWN0KHNlbGYsIHJlYXNvbik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICAgIGlmIChkb25lKSByZXR1cm47XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJlamVjdChzZWxmLCBleCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBQcm9taXNlLnByb3RvdHlwZVsnY2F0Y2gnXSA9IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRoZW4obnVsbCwgb25SZWplY3RlZCk7XG4gICAgfTtcblxuICAgIFByb21pc2UucHJvdG90eXBlLnRoZW4gPSBmdW5jdGlvbiAob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgICAgdmFyIHByb20gPSBuZXcgdGhpcy5jb25zdHJ1Y3Rvcihub29wKTtcblxuICAgICAgICBoYW5kbGUodGhpcywgbmV3IEhhbmRsZXIob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIHByb20pKTtcbiAgICAgICAgcmV0dXJuIHByb207XG4gICAgfTtcblxuICAgIFByb21pc2UuYWxsID0gZnVuY3Rpb24gKGFycikge1xuICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFycik7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIGlmIChhcmdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHJlc29sdmUoW10pO1xuICAgICAgICAgICAgdmFyIHJlbWFpbmluZyA9IGFyZ3MubGVuZ3RoO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiByZXMoaSwgdmFsKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbCAmJiAoKHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHZhbCkpID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRoZW4gPSB2YWwudGhlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4uY2FsbCh2YWwsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzKGksIHZhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYXJnc1tpXSA9IHZhbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKC0tcmVtYWluaW5nID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHJlcyhpLCBhcmdzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIFByb21pc2UucmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgJiYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodmFsdWUpKSA9PT0gJ29iamVjdCcgJiYgdmFsdWUuY29uc3RydWN0b3IgPT09IFByb21pc2UpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBQcm9taXNlLnJlamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgcmVqZWN0KHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIFByb21pc2UucmFjZSA9IGZ1bmN0aW9uICh2YWx1ZXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXNbaV0udGhlbihyZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gVXNlIHBvbHlmaWxsIGZvciBzZXRJbW1lZGlhdGUgZm9yIHBlcmZvcm1hbmNlIGdhaW5zXG4gICAgUHJvbWlzZS5faW1tZWRpYXRlRm4gPSB0eXBlb2Ygc2V0SW1tZWRpYXRlID09PSAnZnVuY3Rpb24nICYmIGZ1bmN0aW9uIChmbikge1xuICAgICAgICBzZXRJbW1lZGlhdGUoZm4pO1xuICAgIH0gfHwgZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHNldFRpbWVvdXRGdW5jKGZuLCAwKTtcbiAgICB9O1xuXG4gICAgUHJvbWlzZS5fdW5oYW5kbGVkUmVqZWN0aW9uRm4gPSBmdW5jdGlvbiBfdW5oYW5kbGVkUmVqZWN0aW9uRm4oZXJyKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdQb3NzaWJsZSBVbmhhbmRsZWQgUHJvbWlzZSBSZWplY3Rpb246JywgZXJyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBpbW1lZGlhdGUgZnVuY3Rpb24gdG8gZXhlY3V0ZSBjYWxsYmFja3NcbiAgICAgKiBAcGFyYW0gZm4ge2Z1bmN0aW9ufSBGdW5jdGlvbiB0byBleGVjdXRlXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBQcm9taXNlLl9zZXRJbW1lZGlhdGVGbiA9IGZ1bmN0aW9uIF9zZXRJbW1lZGlhdGVGbihmbikge1xuICAgICAgICBQcm9taXNlLl9pbW1lZGlhdGVGbiA9IGZuO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgdGhlIGZ1bmN0aW9uIHRvIGV4ZWN1dGUgb24gdW5oYW5kbGVkIHJlamVjdGlvblxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgb24gdW5oYW5kbGVkIHJlamVjdGlvblxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICovXG4gICAgUHJvbWlzZS5fc2V0VW5oYW5kbGVkUmVqZWN0aW9uRm4gPSBmdW5jdGlvbiBfc2V0VW5oYW5kbGVkUmVqZWN0aW9uRm4oZm4pIHtcbiAgICAgICAgUHJvbWlzZS5fdW5oYW5kbGVkUmVqZWN0aW9uRm4gPSBmbjtcbiAgICB9O1xuXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gUHJvbWlzZTtcbiAgICB9IGVsc2UgaWYgKCFyb290LlByb21pc2UpIHtcbiAgICAgICAgcm9vdC5Qcm9taXNlID0gUHJvbWlzZTtcbiAgICB9XG59KSh3aW5kb3cpO1xuXG4vKiBnbG9iYWwgUHJvbWlzZSAqL1xuKGZ1bmN0aW9uICh3aW5kb3cpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBpZiAoIXdpbmRvdy5Qcm9taXNlKSB7XG4gICAgICAgIHdpbmRvdy5Qcm9taXNlID0gUHJvbWlzZTtcbiAgICB9XG5cbiAgICB2YXIgUlVMRV9SRVFVSVJFRCA9ICdyZXF1aXJlZCcsXG4gICAgICAgIFJVTEVfRU1BSUwgPSAnZW1haWwnLFxuICAgICAgICBSVUxFX01JTkxFTkdUSCA9ICdtaW5MZW5ndGgnLFxuICAgICAgICBSVUxFX01BWExFTkdUSCA9ICdtYXhMZW5ndGgnLFxuICAgICAgICBSVUxFX1BBU1NXT1JEID0gJ3Bhc3N3b3JkJyxcbiAgICAgICAgUlVMRV9aSVAgPSAnemlwJyxcbiAgICAgICAgUlVMRV9QSE9ORSA9ICdwaG9uZScsXG4gICAgICAgIFJVTEVfUkVNT1RFID0gJ3JlbW90ZScsXG4gICAgICAgIFJVTEVfU1RSRU5HVEggPSAnc3RyZW5ndGgnLFxuICAgICAgICBSVUxFX0ZVTkNUSU9OID0gJ2Z1bmN0aW9uJztcblxuICAgIHZhciBmb3JtYXRQYXJhbXMgPSBmdW5jdGlvbiBmb3JtYXRQYXJhbXMocGFyYW1zLCBtZXRob2QpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXJhbXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGxldHRlciA9IG1ldGhvZC50b0xvd2VyQ2FzZSgpID09PSAncG9zdCcgPyAnJyA6ICc/JztcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW1zKSkge1xuICAgICAgICAgICAgcmV0dXJuIGxldHRlciArIHBhcmFtcy5tYXAoZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBvYmoubmFtZSArICc9JyArIG9iai52YWx1ZTtcbiAgICAgICAgICAgIH0pLmpvaW4oJyYnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGV0dGVyICsgT2JqZWN0LmtleXMocGFyYW1zKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGtleSArICc9JyArIHBhcmFtc1trZXldO1xuICAgICAgICB9KS5qb2luKCcmJyk7XG4gICAgfTtcblxuICAgIHZhciBhamF4ID0gZnVuY3Rpb24gYWpheChvcHRpb25zKSB7XG4gICAgICAgIHZhciB1cmwgPSBvcHRpb25zLnVybCxcbiAgICAgICAgICAgIG1ldGhvZCA9IG9wdGlvbnMubWV0aG9kLFxuICAgICAgICAgICAgZGF0YSA9IG9wdGlvbnMuZGF0YSxcbiAgICAgICAgICAgIGRlYnVnID0gb3B0aW9ucy5kZWJ1ZyxcbiAgICAgICAgICAgIGNhbGxiYWNrID0gb3B0aW9ucy5jYWxsYmFjayxcbiAgICAgICAgICAgIGVycm9yID0gb3B0aW9ucy5lcnJvcjtcblxuICAgICAgICBpZiAoZGVidWcpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCd0ZXN0Jyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYXN5bmMgPSBvcHRpb25zLmFzeW5jID09PSBmYWxzZSA/IGZhbHNlIDogdHJ1ZTtcbiAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICB2YXIgcGFyYW1zID0gZm9ybWF0UGFyYW1zKGRhdGEsICdnZXQnKTtcbiAgICAgICAgdmFyIGJvZHkgPSBudWxsO1xuXG4gICAgICAgIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gJ3Bvc3QnKSB7XG4gICAgICAgICAgICBib2R5ID0gZm9ybWF0UGFyYW1zKGRhdGEsICdwb3N0Jyk7XG4gICAgICAgICAgICBwYXJhbXMgPSAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIHhoci5vcGVuKG1ldGhvZCwgdXJsICsgcGFyYW1zLCBhc3luYyk7XG4gICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyk7XG4gICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSA0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sodGhpcy5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yICYmIGVycm9yKHRoaXMucmVzcG9uc2VUZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHhoci5zZW5kKGJvZHkpO1xuICAgIH07XG5cbiAgICB2YXIgSnVzdFZhbGlkYXRlID0gZnVuY3Rpb24gSnVzdFZhbGlkYXRlKHNlbGVjdG9yLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgICAgIHRoaXMucnVsZXMgPSB0aGlzLm9wdGlvbnMucnVsZXMgfHwge307XG4gICAgICAgIHRoaXMubWVzc2FnZXMgPSB0aGlzLm9wdGlvbnMubWVzc2FnZXMgfHwgdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmNvbG9yV3JvbmcgPSB0aGlzLm9wdGlvbnMuY29sb3JXcm9uZyB8fCAnI0I4MTExMSc7XG4gICAgICAgIHRoaXMucmVzdWx0ID0ge307XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy50b29sdGlwID0gdGhpcy5vcHRpb25zLnRvb2x0aXAgfHwge307XG4gICAgICAgIHRoaXMudG9vbHRpcEZhZGVPdXRUaW1lID0gdGhpcy50b29sdGlwLmZhZGVPdXRUaW1lIHx8IDUwMDA7XG4gICAgICAgIHRoaXMudG9vbHRpcEZhZGVPdXRDbGFzcyA9IHRoaXMudG9vbHRpcC5mYWRlT3V0Q2xhc3MgfHwgJ2p1c3QtdmFsaWRhdGUtdG9vbHRpcC1oaWRlJztcbiAgICAgICAgdGhpcy50b29sdGlwU2VsZWN0b3JXcmFwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLnRvb2x0aXAuc2VsZWN0b3JXcmFwKS5sZW5ndGggPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMudG9vbHRpcC5zZWxlY3RvcldyYXApIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmp1c3QtdmFsaWRhdGUtdG9vbHRpcC1jb250YWluZXInKTtcbiAgICAgICAgdGhpcy5iaW5kSGFuZGxlcktleXVwID0gdGhpcy5oYW5kbGVyS2V5dXAuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zdWJtaXRIYW5kbGVyID0gdGhpcy5vcHRpb25zLnN1Ym1pdEhhbmRsZXIgfHwgdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmludmFsaWRGb3JtQ2FsbGJhY2sgPSB0aGlzLm9wdGlvbnMuaW52YWxpZEZvcm1DYWxsYmFjayB8fCB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucHJvbWlzZXNSZW1vdGUgPSBbXTtcbiAgICAgICAgdGhpcy5pc1ZhbGlkYXRpb25TdWNjZXNzID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZm9jdXNXcm9uZ0ZpZWxkID0gdGhpcy5vcHRpb25zLmZvY3VzV3JvbmdGaWVsZCB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy5SRUdFWFAgPSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlblxuICAgICAgICAgICAgZW1haWw6IC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfV0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvLFxuICAgICAgICAgICAgemlwOiAvXlxcZHs1fSgtXFxkezR9KT8kLyxcbiAgICAgICAgICAgIHBob25lOiAvXihbMC05XSggfC0pPyk/KFxcKD9bMC05XXszfVxcKT98WzAtOV17M30pKCB8LSk/KFswLTldezN9KCB8LSk/WzAtOV17NH18W2EtekEtWjAtOV17N30pJC8sXG4gICAgICAgICAgICBwYXNzd29yZDogL1teXFx3XFxkXSooKFswLTldKy4qW0EtWmEtel0rLiopfFtBLVphLXpdKy4qKFswLTldKy4qKSkvLFxuICAgICAgICAgICAgc3RyZW5ndGhQYXNzOiAvXig/PS4qW2Etel0pKD89LipbQS1aXSkoPz0uKlxcZClbYS16QS1aXFxkXS9cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5ERUZBVUxUX1JFTU9URV9FUlJPUiA9ICdFcnJvcic7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB0b29sdGlwc1RpbWVyOiBudWxsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5zZXRGb3JtKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpKTtcbiAgICB9O1xuXG4gICAgSnVzdFZhbGlkYXRlLnByb3RvdHlwZSA9IHtcbiAgICAgICAgZGVmYXVsdFJ1bGVzOiB7XG4gICAgICAgICAgICBlbWFpbDoge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGVtYWlsOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIG1pbkxlbmd0aDogMyxcbiAgICAgICAgICAgICAgICBtYXhMZW5ndGg6IDE1XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIG1heExlbmd0aDogMzAwLFxuICAgICAgICAgICAgICAgIG1pbkxlbmd0aDogNVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiB7XG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgbWluTGVuZ3RoOiA0LFxuICAgICAgICAgICAgICAgIG1heExlbmd0aDogOFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHppcDoge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHppcDogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBob25lOiB7XG4gICAgICAgICAgICAgICAgcGhvbmU6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBkZWZhdWx0TWVzc2FnZXM6IHtcbiAgICAgICAgICAgIHJlcXVpcmVkOiAnVGhlIGZpZWxkIGlzIHJlcXVpcmVkJyxcbiAgICAgICAgICAgIGVtYWlsOiAnUGxlYXNlLCB0eXBlIGEgdmFsaWQgZW1haWwnLFxuICAgICAgICAgICAgbWF4TGVuZ3RoOiAnVGhlIGZpZWxkIG11c3QgY29udGFpbiBhIG1heGltdW0gb2YgOnZhbHVlIGNoYXJhY3RlcnMnLFxuICAgICAgICAgICAgbWluTGVuZ3RoOiAnVGhlIGZpZWxkIG11c3QgY29udGFpbiBhIG1pbmltdW0gb2YgOnZhbHVlIGNoYXJhY3RlcnMnLFxuICAgICAgICAgICAgcGFzc3dvcmQ6ICdQYXNzd29yZCBpcyBub3QgdmFsaWQnLFxuICAgICAgICAgICAgcmVtb3RlOiAnRW1haWwgYWxyZWFkeSBleGlzdHMnLFxuICAgICAgICAgICAgc3RyZW5ndGg6ICdQYXNzd29yZCBtdXN0IGNvbnRlbnRzIGF0IGxlYXN0IG9uZSB1cHBlcmNhc2UgbGV0dGVyLCBvbmUgbG93ZXJjYXNlIGxldHRlciBhbmQgb25lIG51bWJlcicsXG4gICAgICAgICAgICBmdW5jdGlvbjogJ0Z1bmN0aW9uIHJldHVybmVkIGZhbHNlJ1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBLZXl1cCBoYW5kbGVyXG4gICAgICAgICAqIEBwYXJhbSBldlxuICAgICAgICAgKi9cbiAgICAgICAgaGFuZGxlcktleXVwOiBmdW5jdGlvbiBoYW5kbGVyS2V5dXAoZXYpIHtcbiAgICAgICAgICAgIHZhciBlbGVtID0gZXYudGFyZ2V0LFxuICAgICAgICAgICAgICAgIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgbmFtZTogZWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsaWRhdGUtZmllbGQnKSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZWxlbS52YWx1ZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnJlc3VsdFtpdGVtLm5hbWVdO1xuICAgICAgICAgICAgdGhpcy52YWxpZGF0ZUl0ZW0oe1xuICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSxcbiAgICAgICAgICAgICAgICBncm91cDogW10sXG4gICAgICAgICAgICAgICAgaXNLZXl1cENoYW5nZTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnJlbmRlckVycm9ycygpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldHRlckV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIHNldHRlckV2ZW50TGlzdGVuZXIoaXRlbSwgZXZlbnQsIGhhbmRsZXIsIHR5cGUpIHtcbiAgICAgICAgICAgIGlmIChldmVudCA9PT0gJ2tleXVwJykge1xuICAgICAgICAgICAgICAgIGhhbmRsZXIgPSB0aGlzLmJpbmRIYW5kbGVyS2V5dXA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdhZGQnOlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdyZW1vdmUnOlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBnZXRFbGVtZW50c1JlYWxWYWx1ZTogZnVuY3Rpb24gZ2V0RWxlbWVudHNSZWFsVmFsdWUoKSB7XG4gICAgICAgICAgICB2YXIgJGVsZW1zID0gdGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcqJyksXG4gICAgICAgICAgICAgICAgbmFtZSA9IHZvaWQgMCxcbiAgICAgICAgICAgICAgICByZXN1bHQgPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSAkZWxlbXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICBuYW1lID0gJGVsZW1zW2ldLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuICAgICAgICAgICAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkZWxlbXNbaV0udHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W25hbWVdID0gJGVsZW1zW2ldLmNoZWNrZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXN1bHRbbmFtZV0gPSAkZWxlbXNbaV0udmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSxcblxuICAgICAgICB2YWxpZGF0aW9uRmFpbGVkOiBmdW5jdGlvbiB2YWxpZGF0aW9uRmFpbGVkKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaW52YWxpZEZvcm1DYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZEZvcm1DYWxsYmFjayh0aGlzLnJlc3VsdCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciAkZmlyc3RFcnJvckZpZWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLXZhbGlkYXRlLWVycm9yLWZpZWxkJyk7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmZvY3VzV3JvbmdGaWVsZCAmJiAkZmlyc3RFcnJvckZpZWxkICYmICRmaXJzdEVycm9yRmllbGQuZm9jdXMpIHtcbiAgICAgICAgICAgICAgICAkZmlyc3RFcnJvckZpZWxkLmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdmFsaWRhdGlvblN1Y2Nlc3M6IGZ1bmN0aW9uIHZhbGlkYXRpb25TdWNjZXNzKCkge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHRoaXMucmVzdWx0KS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzVmFsaWRhdGlvblN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdWJtaXRIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZWFsVmFsdWVzID0gdGhpcy5nZXRFbGVtZW50c1JlYWxWYWx1ZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pdEhhbmRsZXIodGhpcy4kZm9ybSwgcmVhbFZhbHVlcywgYWpheCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLiRmb3JtLnN1Ym1pdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHNldEZvcm06IGZ1bmN0aW9uIHNldEZvcm0oZm9ybSkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgICAgICAgdGhpcy4kZm9ybSA9IGZvcm07XG4gICAgICAgICAgICB0aGlzLiRmb3JtLnNldEF0dHJpYnV0ZSgnbm92YWxpZGF0ZScsICdub3ZhbGlkYXRlJyk7XG4gICAgICAgICAgICB0aGlzLiRmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgX3RoaXMucmVzdWx0ID0gW107XG4gICAgICAgICAgICAgICAgX3RoaXMuZ2V0RWxlbWVudHMoKTtcblxuICAgICAgICAgICAgICAgIGlmICghX3RoaXMucHJvbWlzZXNSZW1vdGUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5pc1ZhbGlkYXRpb25TdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy52YWxpZGF0aW9uU3VjY2VzcygpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMudmFsaWRhdGlvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBQcm9taXNlLmFsbChfdGhpcy5wcm9taXNlc1JlbW90ZSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnByb21pc2VzUmVtb3RlID0gW107XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmlzVmFsaWRhdGlvblN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnZhbGlkYXRpb25TdWNjZXNzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy52YWxpZGF0aW9uRmFpbGVkKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGlzRW1haWw6IGZ1bmN0aW9uIGlzRW1haWwoZW1haWwpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlJFR0VYUC5lbWFpbC50ZXN0KGVtYWlsKTtcbiAgICAgICAgfSxcblxuICAgICAgICBpc1ppcDogZnVuY3Rpb24gaXNaaXAoemlwKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5SRUdFWFAuemlwLnRlc3QoemlwKTtcbiAgICAgICAgfSxcblxuICAgICAgICBpc1Bob25lOiBmdW5jdGlvbiBpc1Bob25lKHBob25lKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5SRUdFWFAucGhvbmUudGVzdChwaG9uZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaXNQYXNzd29yZDogZnVuY3Rpb24gaXNQYXNzd29yZChwYXNzd29yZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUkVHRVhQLnBhc3N3b3JkLnRlc3QocGFzc3dvcmQpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGlzRW1wdHk6IGZ1bmN0aW9uIGlzRW1wdHkodmFsKSB7XG4gICAgICAgICAgICB2YXIgbmV3VmFsID0gdmFsO1xuICAgICAgICAgICAgaWYgKHZhbC50cmltKSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsID0gdmFsLnRyaW0oKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuICFuZXdWYWw7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2hlY2tMZW5ndGhNYXg6IGZ1bmN0aW9uIGNoZWNrTGVuZ3RoTWF4KHRleHQsIG1heCkge1xuICAgICAgICAgICAgcmV0dXJuIHRleHQubGVuZ3RoIDw9IG1heDtcbiAgICAgICAgfSxcblxuICAgICAgICBjaGVja0xlbmd0aE1pbjogZnVuY3Rpb24gY2hlY2tMZW5ndGhNaW4odGV4dCwgbWluKSB7XG4gICAgICAgICAgICByZXR1cm4gdGV4dC5sZW5ndGggPj0gbWluO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNoZWNrU3RyZW5ndGhQYXNzOiBmdW5jdGlvbiBjaGVja1N0cmVuZ3RoUGFzcyhwYXNzd29yZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUkVHRVhQLnN0cmVuZ3RoUGFzcy50ZXN0KHBhc3N3b3JkKTtcbiAgICAgICAgfSxcblxuICAgICAgICBnZXRFbGVtZW50czogZnVuY3Rpb24gZ2V0RWxlbWVudHMoKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgdmFyIGVsZW1zID0gdGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS12YWxpZGF0ZS1maWVsZF0nKTtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcblxuICAgICAgICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSwgbGVuKSB7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBlbGVtc1tpXSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZSA9IGl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXZhbGlkYXRlLWZpZWxkJyksXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gaXRlbS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgaXNFbGVtSW5Hcm91cCA9IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBncm91cCA9IFtdO1xuXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGl0ZW0uY2hlY2tlZCB8fCAnJztcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbGVtID0gZXYudGFyZ2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsaWRhdGUtZmllbGQnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZWxlbS5jaGVja2VkXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMyLnJlc3VsdFtpdGVtLm5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnZhbGlkYXRlSXRlbSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwOiBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpczIucmVuZGVyRXJyb3JzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChpdGVtLnR5cGUgPT09ICdyYWRpbycpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbmRFbGVtID0gX3RoaXMyLmVsZW1lbnRzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVswXTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZmluZEVsZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmRFbGVtLmdyb3VwLnB1c2goaXRlbS5jaGVja2VkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzRWxlbUluR3JvdXAgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXAucHVzaChpdGVtLmNoZWNrZWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbGVtID0gZXYudGFyZ2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsaWRhdGUtZmllbGQnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZWxlbS5jaGVja2VkXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMyLnJlc3VsdFtpdGVtLm5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnZhbGlkYXRlSXRlbSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwOiBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpczIucmVuZGVyRXJyb3JzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIF90aGlzMi5zZXR0ZXJFdmVudExpc3RlbmVyKGl0ZW0sICdrZXl1cCcsIF90aGlzMi5oYW5kbGVyS2V5dXAsICdhZGQnKTtcblxuICAgICAgICAgICAgICAgIGlmICghaXNFbGVtSW5Hcm91cCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczIuZWxlbWVudHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IGdyb3VwXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBlbGVtcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgICAgIF9sb29wKGksIGxlbik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVFbGVtZW50cygpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBWYWxpZGF0ZSBSZXF1aXJlZCBmaWVsZFxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVmFsdWUgZm9yIHZhbGlkYXRlXG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbGlkYXRlIGlzIE9LXG4gICAgICAgICAqL1xuICAgICAgICB2YWxpZGF0ZVJlcXVpcmVkOiBmdW5jdGlvbiB2YWxpZGF0ZVJlcXVpcmVkKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gIXRoaXMuaXNFbXB0eSh2YWx1ZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFZhbGlkYXRlIEVtYWlsIGZpZWxkXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBWYWx1ZSBmb3IgdmFsaWRhdGVcbiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsaWRhdGUgaXMgT0tcbiAgICAgICAgICovXG4gICAgICAgIHZhbGlkYXRlRW1haWw6IGZ1bmN0aW9uIHZhbGlkYXRlRW1haWwodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzRW1haWwodmFsdWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBWYWxpZGF0ZSBQaG9uZSBmaWVsZFxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVmFsdWUgZm9yIHZhbGlkYXRlXG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbGlkYXRlIGlzIE9LXG4gICAgICAgICAqL1xuICAgICAgICB2YWxpZGF0ZVBob25lOiBmdW5jdGlvbiB2YWxpZGF0ZVBob25lKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pc1Bob25lKHZhbHVlKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVmFsaWRhdGUgZmllbGQgZm9yIE1pbiBMZW5ndGhcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFZhbHVlIGZvciB2YWxpZGF0ZVxuICAgICAgICAgKiBAcGFyYW0ge2ludGVnZXJ9IG1pblxuICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWxpZGF0ZSBpcyBPS1xuICAgICAgICAgKi9cbiAgICAgICAgdmFsaWRhdGVNaW5MZW5ndGg6IGZ1bmN0aW9uIHZhbGlkYXRlTWluTGVuZ3RoKHZhbHVlLCBtaW4pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoZWNrTGVuZ3RoTWluKHZhbHVlLCBtaW4pO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBWYWxpZGF0ZSBmaWVsZCBmb3IgTWF4IExlbmd0aFxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVmFsdWUgZm9yIHZhbGlkYXRlXG4gICAgICAgICAqIEBwYXJhbSB7aW50ZWdlcn0gbWF4XG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbGlkYXRlIGlzIE9LXG4gICAgICAgICAqL1xuICAgICAgICB2YWxpZGF0ZU1heExlbmd0aDogZnVuY3Rpb24gdmFsaWRhdGVNYXhMZW5ndGgodmFsdWUsIG1heCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hlY2tMZW5ndGhNYXgodmFsdWUsIG1heCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFZhbGlkYXRlIGZpZWxkIGZvciBzdHJlbmd0aCBwYXNzd29yZFxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmQgVmFsdWUgZm9yIHZhbGlkYXRlXG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbGlkYXRlIGlzIE9LXG4gICAgICAgICAqL1xuICAgICAgICB2YWxpZGF0ZVN0cmVuZ3RoUGFzczogZnVuY3Rpb24gdmFsaWRhdGVTdHJlbmd0aFBhc3MocGFzc3dvcmQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoZWNrU3RyZW5ndGhQYXNzKHBhc3N3b3JkKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVmFsaWRhdGUgUGFzc3dvcmQgZmllbGRcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFZhbHVlIGZvciB2YWxpZGF0ZVxuICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWxpZGF0ZSBpcyBPS1xuICAgICAgICAgKi9cbiAgICAgICAgdmFsaWRhdGVQYXNzd29yZDogZnVuY3Rpb24gdmFsaWRhdGVQYXNzd29yZCh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaXNQYXNzd29yZCh2YWx1ZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFZhbGlkYXRlIFpJUCBmaWVsZFxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVmFsdWUgZm9yIHZhbGlkYXRlXG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbGlkYXRlIGlzIE9LXG4gICAgICAgICAqL1xuICAgICAgICB2YWxpZGF0ZVppcDogZnVuY3Rpb24gdmFsaWRhdGVaaXAodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzWmlwKHZhbHVlKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVmFsaWRhdGUgZm9yIHJlbW90ZSBjaGVja1xuICAgICAgICAgKiBAcGFyYW0gdmFsdWVcbiAgICAgICAgICogQHBhcmFtIG5hbWVcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3VjY2Vzc0Fuc3dlclxuICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWxpZGF0ZSBpcyBPS1xuICAgICAgICAgKi9cbiAgICAgICAgdmFsaWRhdGVSZW1vdGU6IGZ1bmN0aW9uIHZhbGlkYXRlUmVtb3RlKF9yZWYpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF9yZWYudmFsdWUsXG4gICAgICAgICAgICAgICAgbmFtZSA9IF9yZWYubmFtZSxcbiAgICAgICAgICAgICAgICB1cmwgPSBfcmVmLnVybCxcbiAgICAgICAgICAgICAgICBzdWNjZXNzQW5zd2VyID0gX3JlZi5zdWNjZXNzQW5zd2VyLFxuICAgICAgICAgICAgICAgIHNlbmRQYXJhbSA9IF9yZWYuc2VuZFBhcmFtLFxuICAgICAgICAgICAgICAgIG1ldGhvZCA9IF9yZWYubWV0aG9kO1xuXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgICAgICAgICBhamF4KHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBfZGVmaW5lUHJvcGVydHkoe30sIHNlbmRQYXJhbSwgdmFsdWUpLFxuICAgICAgICAgICAgICAgICAgICBhc3luYzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnRvTG93ZXJDYXNlKCkgPT09IHN1Y2Nlc3NBbnN3ZXIudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ29rJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5jb3JyZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2VuZXJhdGVNZXNzYWdlOiBmdW5jdGlvbiBnZW5lcmF0ZU1lc3NhZ2UocnVsZSwgbmFtZSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBtZXNzYWdlcyA9IHRoaXMubWVzc2FnZXMgfHwgdGhpcy5kZWZhdWx0TWVzc2FnZXM7XG4gICAgICAgICAgICB2YXIgY3VzdG9tTWVzc2FnZSA9IG1lc3NhZ2VzW25hbWVdICYmIG1lc3NhZ2VzW25hbWVdW3J1bGVdIHx8IHRoaXMubWVzc2FnZXMgJiYgdHlwZW9mIHRoaXMubWVzc2FnZXNbbmFtZV0gPT09ICdzdHJpbmcnICYmIG1lc3NhZ2VzW25hbWVdIHx8XG4gICAgICAgICAgICAvLyAobWVzc2FnZXNbbmFtZV1bcnVsZV0pIHx8XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRNZXNzYWdlc1tydWxlXSB8fCB0aGlzLkRFRkFVTFRfUkVNT1RFX0VSUk9SO1xuXG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjdXN0b21NZXNzYWdlID0gY3VzdG9tTWVzc2FnZS5yZXBsYWNlKCc6dmFsdWUnLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucmVzdWx0W25hbWVdID0ge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGN1c3RvbU1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG5cbiAgICAgICAgdmFsaWRhdGVFbGVtZW50czogZnVuY3Rpb24gdmFsaWRhdGVFbGVtZW50cygpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAgICAgICB0aGlzLmxvY2tGb3JtKCk7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICBfdGhpczMudmFsaWRhdGVJdGVtKHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IGl0ZW0uZ3JvdXBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoIXRoaXMucHJvbWlzZXNSZW1vdGUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJFcnJvcnMoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFByb21pc2UuYWxsKHRoaXMucHJvbWlzZXNSZW1vdGUpLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHtcbiAgICAgICAgICAgICAgICByZXNwLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0ID09PSAnb2snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpczMucmVuZGVyRXJyb3JzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC50eXBlID09PSAnZXJyb3InKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgnU2VydmVyIGVycm9yIG9jY3VyZWQuIFBsZWFzZSB0cnkgbGF0ZXIuJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmdlbmVyYXRlTWVzc2FnZShSVUxFX1JFTU9URSwgcmVzdWx0Lm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBfdGhpczMucmVuZGVyRXJyb3JzKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICB2YWxpZGF0ZUl0ZW06IGZ1bmN0aW9uIHZhbGlkYXRlSXRlbShfcmVmMikge1xuICAgICAgICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgICAgICAgIHZhciBuYW1lID0gX3JlZjIubmFtZSxcbiAgICAgICAgICAgICAgICBncm91cCA9IF9yZWYyLmdyb3VwLFxuICAgICAgICAgICAgICAgIHZhbHVlID0gX3JlZjIudmFsdWUsXG4gICAgICAgICAgICAgICAgaXNLZXl1cENoYW5nZSA9IF9yZWYyLmlzS2V5dXBDaGFuZ2U7XG5cbiAgICAgICAgICAgIHZhciBydWxlcyA9IHRoaXMucnVsZXNbbmFtZV0gfHwgdGhpcy5kZWZhdWx0UnVsZXNbbmFtZV0gfHwgZmFsc2U7XG5cbiAgICAgICAgICAgIGlmICghcnVsZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBydWxlIGluIHJ1bGVzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJ1bGVWYWx1ZSA9IHJ1bGVzW3J1bGVdO1xuXG4gICAgICAgICAgICAgICAgaWYgKHJ1bGUgIT09IFJVTEVfUkVRVUlSRUQgJiYgcnVsZSAhPT0gUlVMRV9GVU5DVElPTiAmJiB2YWx1ZSA9PSAnJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN3aXRjaCAocnVsZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFJVTEVfRlVOQ1RJT046XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBydWxlVmFsdWUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChydWxlVmFsdWUobmFtZSwgdmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWVzc2FnZShSVUxFX0ZVTkNUSU9OLCBuYW1lLCBydWxlVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2FzZSBSVUxFX1JFUVVJUkVEOlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcnVsZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChncm91cC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzU3VjY2Vzc1ZhbGlkYXRlR3JvdXAgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBdCBsZWFzdCBvbmUgaXRlbSBpbiBncm91cFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBncm91cC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXM0LnZhbGlkYXRlUmVxdWlyZWQoaXRlbSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1N1Y2Nlc3NWYWxpZGF0ZUdyb3VwID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3VjY2Vzc1ZhbGlkYXRlR3JvdXApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVSZXF1aXJlZCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UoUlVMRV9SRVFVSVJFRCwgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgUlVMRV9FTUFJTDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJ1bGVWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVFbWFpbCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVNZXNzYWdlKFJVTEVfRU1BSUwsIG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBjYXNlIFJVTEVfTUlOTEVOR1RIOlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcnVsZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZU1pbkxlbmd0aCh2YWx1ZSwgcnVsZVZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UoUlVMRV9NSU5MRU5HVEgsIG5hbWUsIHJ1bGVWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgUlVMRV9NQVhMRU5HVEg6XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFydWxlVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlTWF4TGVuZ3RoKHZhbHVlLCBydWxlVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWVzc2FnZShSVUxFX01BWExFTkdUSCwgbmFtZSwgcnVsZVZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSBSVUxFX1BIT05FOlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcnVsZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVBob25lKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UoUlVMRV9QSE9ORSwgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgUlVMRV9QQVNTV09SRDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJ1bGVWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVQYXNzd29yZCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVNZXNzYWdlKFJVTEVfUEFTU1dPUkQsIG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBjYXNlIFJVTEVfU1RSRU5HVEg6XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFydWxlVmFsdWUgfHwgKHR5cGVvZiBydWxlVmFsdWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHJ1bGVWYWx1ZSkpICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocnVsZVZhbHVlLmRlZmF1bHQgJiYgdGhpcy52YWxpZGF0ZVN0cmVuZ3RoUGFzcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJ1bGVWYWx1ZS5jdXN0b20pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlZ2V4cCA9IHZvaWQgMDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXhwID0gbmV3IFJlZ0V4cChydWxlVmFsdWUuY3VzdG9tKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXhwID0gdGhpcy5SRUdFWFAuc3RyZW5ndGhQYXNzO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignQ3VzdG9tIHJlZ2V4cCBmb3Igc3RyZW5ndGggcnVsZSBpcyBub3QgdmFsaWQuIERlZmF1bHQgcmVnZXhwIHdhcyB1c2VkLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlZ2V4cC50ZXN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UoUlVMRV9TVFJFTkdUSCwgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgUlVMRV9aSVA6XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFydWxlVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlWmlwKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UoUlVMRV9aSVAsIG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBjYXNlIFJVTEVfUkVNT1RFOlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc0tleXVwQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcnVsZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSBydWxlVmFsdWUudXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQW5zd2VyID0gcnVsZVZhbHVlLnN1Y2Nlc3NBbnN3ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCA9IHJ1bGVWYWx1ZS5tZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRQYXJhbSA9IHJ1bGVWYWx1ZS5zZW5kUGFyYW07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJGVsZW0gPSB0aGlzLiRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W2RhdGEtdmFsaWRhdGUtZmllbGQ9XCInICsgbmFtZSArICdcIl0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldHRlckV2ZW50TGlzdGVuZXIoJGVsZW0sICdrZXl1cCcsIHRoaXMuaGFuZGxlcktleXVwLCAncmVtb3ZlJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb21pc2VzUmVtb3RlLnB1c2godGhpcy52YWxpZGF0ZVJlbW90ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5kUGFyYW06IHNlbmRQYXJhbSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0Fuc3dlcjogc3VjY2Vzc0Fuc3dlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGNsZWFyRXJyb3JzOiBmdW5jdGlvbiBjbGVhckVycm9ycygpIHtcbiAgICAgICAgICAgIHZhciAkZWxlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuanMtdmFsaWRhdGUtZXJyb3ItbGFiZWwnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSAkZWxlbXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICAkZWxlbXNbaV0ucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICRlbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5qcy12YWxpZGF0ZS1lcnJvci1maWVsZCcpO1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfbGVuID0gJGVsZW1zLmxlbmd0aDsgX2kgPCBfbGVuOyArK19pKSB7XG4gICAgICAgICAgICAgICAgJGVsZW1zW19pXS5jbGFzc0xpc3QucmVtb3ZlKCdqcy12YWxpZGF0ZS1lcnJvci1maWVsZCcpO1xuICAgICAgICAgICAgICAgICRlbGVtc1tfaV0uc3R5bGUuYm9yZGVyID0gJyc7XG4gICAgICAgICAgICAgICAgJGVsZW1zW19pXS5zdHlsZS5jb2xvciA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHJlbmRlckVycm9yczogZnVuY3Rpb24gcmVuZGVyRXJyb3JzKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgICAgICAgIHRoaXMuY2xlYXJFcnJvcnMoKTtcbiAgICAgICAgICAgIHRoaXMudW5sb2NrRm9ybSgpO1xuXG4gICAgICAgICAgICB0aGlzLmlzVmFsaWRhdGlvblN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLnJlc3VsdCkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1ZhbGlkYXRpb25TdWNjZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAodmFyIF9pdGVtIGluIHRoaXMucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSB0aGlzLnJlc3VsdFtfaXRlbV0ubWVzc2FnZTtcbiAgICAgICAgICAgICAgICB2YXIgJGVsZW1zID0gdGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS12YWxpZGF0ZS1maWVsZD1cIicgKyBfaXRlbSArICdcIl0nKTtcblxuICAgICAgICAgICAgICAgIHZhciAkZWxlbSA9ICRlbGVtc1skZWxlbXMubGVuZ3RoIC0gMV07XG5cbiAgICAgICAgICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgICAgICAgICAgICBkaXYuaW5uZXJIVE1MID0gbWVzc2FnZTtcbiAgICAgICAgICAgICAgICBkaXYuY2xhc3NOYW1lID0gJ2pzLXZhbGlkYXRlLWVycm9yLWxhYmVsJztcbiAgICAgICAgICAgICAgICBkaXYuc2V0QXR0cmlidXRlKCdzdHlsZScsICdjb2xvcjogJyArIHRoaXMuY29sb3JXcm9uZyk7XG4gICAgICAgICAgICAgICAgJGVsZW0uc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCAnICsgdGhpcy5jb2xvcldyb25nO1xuICAgICAgICAgICAgICAgICRlbGVtLnN0eWxlLmNvbG9yID0gJycgKyB0aGlzLmNvbG9yV3Jvbmc7XG4gICAgICAgICAgICAgICAgJGVsZW0uY2xhc3NMaXN0LmFkZCgnanMtdmFsaWRhdGUtZXJyb3ItZmllbGQnKTtcblxuICAgICAgICAgICAgICAgIGlmICgkZWxlbS50eXBlID09PSAnY2hlY2tib3gnIHx8ICRlbGVtLnR5cGUgPT09ICdyYWRpbycpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRsYWJlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsW2Zvcj1cIicgKyAkZWxlbS5nZXRBdHRyaWJ1dGUoJ2lkJykgKyAnXCJdJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCRlbGVtLnBhcmVudE5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnbGFiZWwnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkZWxlbS5wYXJlbnROb2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGRpdiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJGxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkbGFiZWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZGl2LCAkbGFiZWwubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgJGVsZW0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZGl2LCAkZWxlbS5uZXh0U2libGluZyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkZWxlbS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShkaXYsICRlbGVtLm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghdGhpcy50b29sdGlwU2VsZWN0b3JXcmFwLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5zdGF0ZS50b29sdGlwc1RpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXM1LmhpZGVUb29sdGlwcygpO1xuICAgICAgICAgICAgfSwgdGhpcy50b29sdGlwRmFkZU91dFRpbWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGhpZGVUb29sdGlwczogZnVuY3Rpb24gaGlkZVRvb2x0aXBzKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgICAgICAgIHZhciAkZWxlbXNFcnJvckxhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpzLXZhbGlkYXRlLWVycm9yLWxhYmVsJyk7XG5cbiAgICAgICAgICAgICRlbGVtc0Vycm9yTGFiZWwuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZChfdGhpczYudG9vbHRpcEZhZGVPdXRDbGFzcyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGhpcy5zdGF0ZS50b29sdGlwc1RpbWVyID0gbnVsbDtcbiAgICAgICAgfSxcblxuICAgICAgICBsb2NrRm9ybTogZnVuY3Rpb24gbG9ja0Zvcm0oKSB7XG4gICAgICAgICAgICB2YXIgJGVsZW1zID0gdGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCwgdGV4dGFyZWEsIGJ1dHRvbiwgc2VsZWN0Jyk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gJGVsZW1zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICAgICAgJGVsZW1zW2ldLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcbiAgICAgICAgICAgICAgICAkZWxlbXNbaV0uc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcbiAgICAgICAgICAgICAgICAkZWxlbXNbaV0uc3R5bGUud2ViaXRGaWx0ZXIgPSAnZ3JheXNjYWxlKDEwMCUpJztcbiAgICAgICAgICAgICAgICAkZWxlbXNbaV0uc3R5bGUuZmlsdGVyID0gJ2dyYXlzY2FsZSgxMDAlKSc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdW5sb2NrRm9ybTogZnVuY3Rpb24gdW5sb2NrRm9ybSgpIHtcbiAgICAgICAgICAgIHZhciAkZWxlbXMgPSB0aGlzLiRmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0LCB0ZXh0YXJlYSwgYnV0dG9uLCBzZWxlY3QnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSAkZWxlbXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICAkZWxlbXNbaV0ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICRlbGVtc1tpXS5zdHlsZS5wb2ludGVyRXZlbnRzID0gJyc7XG4gICAgICAgICAgICAgICAgJGVsZW1zW2ldLnN0eWxlLndlYml0RmlsdGVyID0gJyc7XG4gICAgICAgICAgICAgICAgJGVsZW1zW2ldLnN0eWxlLmZpbHRlciA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHdpbmRvdy5KdXN0VmFsaWRhdGUgPSBKdXN0VmFsaWRhdGU7XG59KSh3aW5kb3cpOyIsIlwidXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShlLHQsaSl7cmV0dXJuIHQgaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTppLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1pLGV9dmFyIF90eXBlb2Y9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX07IWZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtcIkRvY3VtZW50VHlwZVwiLFwiRWxlbWVudFwiLFwiQ2hhcmFjdGVyRGF0YVwiXSx0PWZ1bmN0aW9uKCl7bnVsbCE9dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcyl9LGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIHI9ZVtpXTt3aW5kb3dbcl0mJiF3aW5kb3dbcl0ucHJvdG90eXBlLnJlbW92ZSYmKHdpbmRvd1tyXS5wcm90b3R5cGUucmVtb3ZlPXQpfX0oKSxmdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7fWZ1bmN0aW9uIGkoZSx0KXtyZXR1cm4gZnVuY3Rpb24oKXtlLmFwcGx5KHQsYXJndW1lbnRzKX19ZnVuY3Rpb24gcihlKXtpZihcIm9iamVjdFwiIT09X3R5cGVvZih0aGlzKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJvbWlzZXMgbXVzdCBiZSBjb25zdHJ1Y3RlZCB2aWEgbmV3XCIpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIm5vdCBhIGZ1bmN0aW9uXCIpO3RoaXMuX3N0YXRlPTAsdGhpcy5faGFuZGxlZD0hMSx0aGlzLl92YWx1ZT12b2lkIDAsdGhpcy5fZGVmZXJyZWRzPVtdLHUoZSx0aGlzKX1mdW5jdGlvbiBuKGUsdCl7Zm9yKDszPT09ZS5fc3RhdGU7KWU9ZS5fdmFsdWU7cmV0dXJuIDA9PT1lLl9zdGF0ZT92b2lkIGUuX2RlZmVycmVkcy5wdXNoKHQpOihlLl9oYW5kbGVkPSEwLHZvaWQgci5faW1tZWRpYXRlRm4oZnVuY3Rpb24oKXt2YXIgaT0xPT09ZS5fc3RhdGU/dC5vbkZ1bGZpbGxlZDp0Lm9uUmVqZWN0ZWQ7aWYobnVsbD09PWkpcmV0dXJuIHZvaWQoMT09PWUuX3N0YXRlP286cykodC5wcm9taXNlLGUuX3ZhbHVlKTt2YXIgcjt0cnl7cj1pKGUuX3ZhbHVlKX1jYXRjaChuKXtyZXR1cm4gdm9pZCBzKHQucHJvbWlzZSxuKX1vKHQucHJvbWlzZSxyKX0pKX1mdW5jdGlvbiBvKGUsdCl7dHJ5e2lmKHQ9PT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBIHByb21pc2UgY2Fubm90IGJlIHJlc29sdmVkIHdpdGggaXRzZWxmLlwiKTtpZih0JiYoXCJvYmplY3RcIj09PShcInVuZGVmaW5lZFwiPT10eXBlb2YgdD9cInVuZGVmaW5lZFwiOl90eXBlb2YodCkpfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0KSl7dmFyIG49dC50aGVuO2lmKHQgaW5zdGFuY2VvZiByKXJldHVybiBlLl9zdGF0ZT0zLGUuX3ZhbHVlPXQsdm9pZCBhKGUpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pcmV0dXJuIHZvaWQgdShpKG4sdCksZSl9ZS5fc3RhdGU9MSxlLl92YWx1ZT10LGEoZSl9Y2F0Y2gobyl7cyhlLG8pfX1mdW5jdGlvbiBzKGUsdCl7ZS5fc3RhdGU9MixlLl92YWx1ZT10LGEoZSl9ZnVuY3Rpb24gYShlKXsyPT09ZS5fc3RhdGUmJjA9PT1lLl9kZWZlcnJlZHMubGVuZ3RoJiZyLl9pbW1lZGlhdGVGbihmdW5jdGlvbigpe2UuX2hhbmRsZWR8fHIuX3VuaGFuZGxlZFJlamVjdGlvbkZuKGUuX3ZhbHVlKX0pO2Zvcih2YXIgdD0wLGk9ZS5fZGVmZXJyZWRzLmxlbmd0aDt0PGk7dCsrKW4oZSxlLl9kZWZlcnJlZHNbdF0pO2UuX2RlZmVycmVkcz1udWxsfWZ1bmN0aW9uIGwoZSx0LGkpe3RoaXMub25GdWxmaWxsZWQ9XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lOm51bGwsdGhpcy5vblJlamVjdGVkPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpudWxsLHRoaXMucHJvbWlzZT1pfWZ1bmN0aW9uIHUoZSx0KXt2YXIgaT0hMTt0cnl7ZShmdW5jdGlvbihlKXtpfHwoaT0hMCxvKHQsZSkpfSxmdW5jdGlvbihlKXtpfHwoaT0hMCxzKHQsZSkpfSl9Y2F0Y2gocil7aWYoaSlyZXR1cm47aT0hMCxzKHQscil9fXZhciBkPXNldFRpbWVvdXQ7ci5wcm90b3R5cGVbXCJjYXRjaFwiXT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKG51bGwsZSl9LHIucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oZSxpKXt2YXIgcj1uZXcgdGhpcy5jb25zdHJ1Y3Rvcih0KTtyZXR1cm4gbih0aGlzLG5ldyBsKGUsaSxyKSkscn0sci5hbGw9ZnVuY3Rpb24oZSl7dmFyIHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSk7cmV0dXJuIG5ldyByKGZ1bmN0aW9uKGUsaSl7ZnVuY3Rpb24gcihvLHMpe3RyeXtpZihzJiYoXCJvYmplY3RcIj09PShcInVuZGVmaW5lZFwiPT10eXBlb2Ygcz9cInVuZGVmaW5lZFwiOl90eXBlb2YocykpfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBzKSl7dmFyIGE9cy50aGVuO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpcmV0dXJuIHZvaWQgYS5jYWxsKHMsZnVuY3Rpb24oZSl7cihvLGUpfSxpKX10W29dPXMsMD09PS0tbiYmZSh0KX1jYXRjaChsKXtpKGwpfX1pZigwPT09dC5sZW5ndGgpcmV0dXJuIGUoW10pO2Zvcih2YXIgbj10Lmxlbmd0aCxvPTA7bzx0Lmxlbmd0aDtvKyspcihvLHRbb10pfSl9LHIucmVzb2x2ZT1mdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJvYmplY3RcIj09PShcInVuZGVmaW5lZFwiPT10eXBlb2YgZT9cInVuZGVmaW5lZFwiOl90eXBlb2YoZSkpJiZlLmNvbnN0cnVjdG9yPT09cj9lOm5ldyByKGZ1bmN0aW9uKHQpe3QoZSl9KX0sci5yZWplY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyByKGZ1bmN0aW9uKHQsaSl7aShlKX0pfSxyLnJhY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyByKGZ1bmN0aW9uKHQsaSl7Zm9yKHZhciByPTAsbj1lLmxlbmd0aDtyPG47cisrKWVbcl0udGhlbih0LGkpfSl9LHIuX2ltbWVkaWF0ZUZuPVwiZnVuY3Rpb25cIj09dHlwZW9mIHNldEltbWVkaWF0ZSYmZnVuY3Rpb24oZSl7c2V0SW1tZWRpYXRlKGUpfXx8ZnVuY3Rpb24oZSl7ZChlLDApfSxyLl91bmhhbmRsZWRSZWplY3Rpb25Gbj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmY29uc29sZSYmY29uc29sZS53YXJuKFwiUG9zc2libGUgVW5oYW5kbGVkIFByb21pc2UgUmVqZWN0aW9uOlwiLGUpfSxyLl9zZXRJbW1lZGlhdGVGbj1mdW5jdGlvbihlKXtyLl9pbW1lZGlhdGVGbj1lfSxyLl9zZXRVbmhhbmRsZWRSZWplY3Rpb25Gbj1mdW5jdGlvbihlKXtyLl91bmhhbmRsZWRSZWplY3Rpb25Gbj1lfSxcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1yOmUuUHJvbWlzZXx8KGUuUHJvbWlzZT1yKX0od2luZG93KSxmdW5jdGlvbihlKXtlLlByb21pc2V8fChlLlByb21pc2U9UHJvbWlzZSk7dmFyIHQ9XCJyZXF1aXJlZFwiLGk9XCJlbWFpbFwiLHI9XCJtaW5MZW5ndGhcIixuPVwibWF4TGVuZ3RoXCIsbz1cInBhc3N3b3JkXCIscz1cInppcFwiLGE9XCJwaG9uZVwiLGw9XCJyZW1vdGVcIix1PVwic3RyZW5ndGhcIixkPVwiZnVuY3Rpb25cIixjPWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGU7dmFyIGk9XCJwb3N0XCI9PT10LnRvTG93ZXJDYXNlKCk/XCJcIjpcIj9cIjtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9pK2UubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLm5hbWUrXCI9XCIrZS52YWx1ZX0pLmpvaW4oXCImXCIpOmkrT2JqZWN0LmtleXMoZSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0K1wiPVwiK2VbdF19KS5qb2luKFwiJlwiKX0saD1mdW5jdGlvbihlKXt2YXIgdD1lLnVybCxpPWUubWV0aG9kLHI9ZS5kYXRhLG49ZS5kZWJ1ZyxvPWUuY2FsbGJhY2sscz1lLmVycm9yO2lmKG4pcmV0dXJuIHZvaWQgbyhcInRlc3RcIik7dmFyIGE9ZS5hc3luYyE9PSExLGw9bmV3IFhNTEh0dHBSZXF1ZXN0LHU9YyhyLFwiZ2V0XCIpLGQ9bnVsbDtcInBvc3RcIj09PWkudG9Mb3dlckNhc2UoKSYmKGQ9YyhyLFwicG9zdFwiKSx1PVwiXCIpLGwub3BlbihpLHQrdSxhKSxsLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIixcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSxsLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpezQ9PT10aGlzLnJlYWR5U3RhdGUmJigyMDA9PT10aGlzLnN0YXR1cz9vKHRoaXMucmVzcG9uc2VUZXh0KTpzJiZzKHRoaXMucmVzcG9uc2VUZXh0KSl9LGwuc2VuZChkKX0sZj1mdW5jdGlvbihlLHQpe3RoaXMub3B0aW9ucz10fHx7fSx0aGlzLnJ1bGVzPXRoaXMub3B0aW9ucy5ydWxlc3x8e30sdGhpcy5tZXNzYWdlcz10aGlzLm9wdGlvbnMubWVzc2FnZXN8fHZvaWQgMCx0aGlzLmNvbG9yV3Jvbmc9dGhpcy5vcHRpb25zLmNvbG9yV3Jvbmd8fFwiI0I4MTExMVwiLHRoaXMucmVzdWx0PXt9LHRoaXMuZWxlbWVudHM9W10sdGhpcy50b29sdGlwPXRoaXMub3B0aW9ucy50b29sdGlwfHx7fSx0aGlzLnRvb2x0aXBGYWRlT3V0VGltZT10aGlzLnRvb2x0aXAuZmFkZU91dFRpbWV8fDVlMyx0aGlzLnRvb2x0aXBGYWRlT3V0Q2xhc3M9dGhpcy50b29sdGlwLmZhZGVPdXRDbGFzc3x8XCJqdXN0LXZhbGlkYXRlLXRvb2x0aXAtaGlkZVwiLHRoaXMudG9vbHRpcFNlbGVjdG9yV3JhcD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMudG9vbHRpcC5zZWxlY3RvcldyYXApLmxlbmd0aD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMudG9vbHRpcC5zZWxlY3RvcldyYXApOmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuanVzdC12YWxpZGF0ZS10b29sdGlwLWNvbnRhaW5lclwiKSx0aGlzLmJpbmRIYW5kbGVyS2V5dXA9dGhpcy5oYW5kbGVyS2V5dXAuYmluZCh0aGlzKSx0aGlzLnN1Ym1pdEhhbmRsZXI9dGhpcy5vcHRpb25zLnN1Ym1pdEhhbmRsZXJ8fHZvaWQgMCx0aGlzLmludmFsaWRGb3JtQ2FsbGJhY2s9dGhpcy5vcHRpb25zLmludmFsaWRGb3JtQ2FsbGJhY2t8fHZvaWQgMCx0aGlzLnByb21pc2VzUmVtb3RlPVtdLHRoaXMuaXNWYWxpZGF0aW9uU3VjY2Vzcz0hMSx0aGlzLmZvY3VzV3JvbmdGaWVsZD10aGlzLm9wdGlvbnMuZm9jdXNXcm9uZ0ZpZWxkfHwhMSx0aGlzLlJFR0VYUD17ZW1haWw6L14oKFtePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC8semlwOi9eXFxkezV9KC1cXGR7NH0pPyQvLHBob25lOi9eKFswLTldKCB8LSk/KT8oXFwoP1swLTldezN9XFwpP3xbMC05XXszfSkoIHwtKT8oWzAtOV17M30oIHwtKT9bMC05XXs0fXxbYS16QS1aMC05XXs3fSkkLyxwYXNzd29yZDovW15cXHdcXGRdKigoWzAtOV0rLipbQS1aYS16XSsuKil8W0EtWmEtel0rLiooWzAtOV0rLiopKS8sc3RyZW5ndGhQYXNzOi9eKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qXFxkKVthLXpBLVpcXGRdL30sdGhpcy5ERUZBVUxUX1JFTU9URV9FUlJPUj1cIkVycm9yXCIsdGhpcy5zdGF0ZT17dG9vbHRpcHNUaW1lcjpudWxsfSx0aGlzLnNldEZvcm0oZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKSl9O2YucHJvdG90eXBlPXtkZWZhdWx0UnVsZXM6e2VtYWlsOntyZXF1aXJlZDohMCxlbWFpbDohMH0sbmFtZTp7cmVxdWlyZWQ6ITAsbWluTGVuZ3RoOjMsbWF4TGVuZ3RoOjE1fSx0ZXh0OntyZXF1aXJlZDohMCxtYXhMZW5ndGg6MzAwLG1pbkxlbmd0aDo1fSxwYXNzd29yZDp7cmVxdWlyZWQ6ITAscGFzc3dvcmQ6ITAsbWluTGVuZ3RoOjQsbWF4TGVuZ3RoOjh9LHppcDp7cmVxdWlyZWQ6ITAsemlwOiEwfSxwaG9uZTp7cGhvbmU6ITB9fSxkZWZhdWx0TWVzc2FnZXM6e3JlcXVpcmVkOlwiVGhlIGZpZWxkIGlzIHJlcXVpcmVkXCIsZW1haWw6XCJQbGVhc2UsIHR5cGUgYSB2YWxpZCBlbWFpbFwiLG1heExlbmd0aDpcIlRoZSBmaWVsZCBtdXN0IGNvbnRhaW4gYSBtYXhpbXVtIG9mIDp2YWx1ZSBjaGFyYWN0ZXJzXCIsbWluTGVuZ3RoOlwiVGhlIGZpZWxkIG11c3QgY29udGFpbiBhIG1pbmltdW0gb2YgOnZhbHVlIGNoYXJhY3RlcnNcIixwYXNzd29yZDpcIlBhc3N3b3JkIGlzIG5vdCB2YWxpZFwiLHJlbW90ZTpcIkVtYWlsIGFscmVhZHkgZXhpc3RzXCIsc3RyZW5ndGg6XCJQYXNzd29yZCBtdXN0IGNvbnRlbnRzIGF0IGxlYXN0IG9uZSB1cHBlcmNhc2UgbGV0dGVyLCBvbmUgbG93ZXJjYXNlIGxldHRlciBhbmQgb25lIG51bWJlclwiLFwiZnVuY3Rpb25cIjpcIkZ1bmN0aW9uIHJldHVybmVkIGZhbHNlXCJ9LGhhbmRsZXJLZXl1cDpmdW5jdGlvbihlKXt2YXIgdD1lLnRhcmdldCxpPXtuYW1lOnQuZ2V0QXR0cmlidXRlKFwiZGF0YS12YWxpZGF0ZS1maWVsZFwiKSx2YWx1ZTp0LnZhbHVlfTtkZWxldGUgdGhpcy5yZXN1bHRbaS5uYW1lXSx0aGlzLnZhbGlkYXRlSXRlbSh7bmFtZTppLm5hbWUsdmFsdWU6aS52YWx1ZSxncm91cDpbXSxpc0tleXVwQ2hhbmdlOiEwfSksdGhpcy5yZW5kZXJFcnJvcnMoKX0sc2V0dGVyRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbihlLHQsaSxyKXtzd2l0Y2goXCJrZXl1cFwiPT09dCYmKGk9dGhpcy5iaW5kSGFuZGxlcktleXVwKSxyKXtjYXNlXCJhZGRcIjplLmFkZEV2ZW50TGlzdGVuZXIodCxpKTticmVhaztjYXNlXCJyZW1vdmVcIjplLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxpKX19LGdldEVsZW1lbnRzUmVhbFZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuJGZvcm0ucXVlcnlTZWxlY3RvckFsbChcIipcIiksdD12b2lkIDAsaT17fSxyPTAsbj1lLmxlbmd0aDtyPG47KytyKWlmKHQ9ZVtyXS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpKXtpZihcImNoZWNrYm94XCI9PT1lW3JdLnR5cGUpe2lbdF09ZVtyXS5jaGVja2VkO2NvbnRpbnVlfWlbdF09ZVtyXS52YWx1ZX1yZXR1cm4gaX0sdmFsaWRhdGlvbkZhaWxlZDpmdW5jdGlvbigpe3RoaXMuaW52YWxpZEZvcm1DYWxsYmFjayYmdGhpcy5pbnZhbGlkRm9ybUNhbGxiYWNrKHRoaXMucmVzdWx0KTt2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmpzLXZhbGlkYXRlLWVycm9yLWZpZWxkXCIpO3RoaXMuZm9jdXNXcm9uZ0ZpZWxkJiZlJiZlLmZvY3VzJiZlLmZvY3VzKCl9LHZhbGlkYXRpb25TdWNjZXNzOmZ1bmN0aW9uKCl7aWYoMD09PU9iamVjdC5rZXlzKHRoaXMucmVzdWx0KS5sZW5ndGgpe2lmKHRoaXMuaXNWYWxpZGF0aW9uU3VjY2Vzcz0hMSx0aGlzLnN1Ym1pdEhhbmRsZXIpe3ZhciBlPXRoaXMuZ2V0RWxlbWVudHNSZWFsVmFsdWUoKTtyZXR1cm4gdm9pZCB0aGlzLnN1Ym1pdEhhbmRsZXIodGhpcy4kZm9ybSxlLGgpfXRoaXMuJGZvcm0uc3VibWl0KCl9fSxzZXRGb3JtOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dGhpcy4kZm9ybT1lLHRoaXMuJGZvcm0uc2V0QXR0cmlidXRlKFwibm92YWxpZGF0ZVwiLFwibm92YWxpZGF0ZVwiKSx0aGlzLiRmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIixmdW5jdGlvbihlKXtyZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpLHQucmVzdWx0PVtdLHQuZ2V0RWxlbWVudHMoKSx0LnByb21pc2VzUmVtb3RlLmxlbmd0aD92b2lkIFByb21pc2UuYWxsKHQucHJvbWlzZXNSZW1vdGUpLnRoZW4oZnVuY3Rpb24oKXt0LnByb21pc2VzUmVtb3RlPVtdLHQuaXNWYWxpZGF0aW9uU3VjY2Vzcz90LnZhbGlkYXRpb25TdWNjZXNzKCk6dC52YWxpZGF0aW9uRmFpbGVkKCl9KTp2b2lkKHQuaXNWYWxpZGF0aW9uU3VjY2Vzcz90LnZhbGlkYXRpb25TdWNjZXNzKCk6dC52YWxpZGF0aW9uRmFpbGVkKCkpfSl9LGlzRW1haWw6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuUkVHRVhQLmVtYWlsLnRlc3QoZSl9LGlzWmlwOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLlJFR0VYUC56aXAudGVzdChlKX0saXNQaG9uZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5SRUdFWFAucGhvbmUudGVzdChlKX0saXNQYXNzd29yZDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5SRUdFWFAucGFzc3dvcmQudGVzdChlKX0saXNFbXB0eTpmdW5jdGlvbihlKXt2YXIgdD1lO3JldHVybiBlLnRyaW0mJih0PWUudHJpbSgpKSwhdH0sY2hlY2tMZW5ndGhNYXg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5sZW5ndGg8PXR9LGNoZWNrTGVuZ3RoTWluOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUubGVuZ3RoPj10fSxjaGVja1N0cmVuZ3RoUGFzczpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5SRUdFWFAuc3RyZW5ndGhQYXNzLnRlc3QoZSl9LGdldEVsZW1lbnRzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMuJGZvcm0ucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLXZhbGlkYXRlLWZpZWxkXVwiKTt0aGlzLmVsZW1lbnRzPVtdO2Zvcih2YXIgaT1mdW5jdGlvbihpLHIpe3ZhciBuPXRbaV0sbz1uLmdldEF0dHJpYnV0ZShcImRhdGEtdmFsaWRhdGUtZmllbGRcIikscz1uLnZhbHVlLGE9ITEsbD1bXTtpZihcImNoZWNrYm94XCI9PT1uLnR5cGUmJihzPW4uY2hlY2tlZHx8XCJcIixuLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixmdW5jdGlvbih0KXt2YXIgaT10LnRhcmdldCxyPXtuYW1lOmkuZ2V0QXR0cmlidXRlKFwiZGF0YS12YWxpZGF0ZS1maWVsZFwiKSx2YWx1ZTppLmNoZWNrZWR9O2RlbGV0ZSBlLnJlc3VsdFtyLm5hbWVdLGUudmFsaWRhdGVJdGVtKHtuYW1lOnIubmFtZSx2YWx1ZTpyLnZhbHVlLGdyb3VwOltdfSksZS5yZW5kZXJFcnJvcnMoKX0pKSxcInJhZGlvXCI9PT1uLnR5cGUpe3ZhciB1PWUuZWxlbWVudHMuZmlsdGVyKGZ1bmN0aW9uKGUpe2lmKGUubmFtZT09PW8pcmV0dXJuIGV9KVswXTt1Pyh1Lmdyb3VwLnB1c2gobi5jaGVja2VkKSxhPSEwKTpsLnB1c2gobi5jaGVja2VkKSxuLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixmdW5jdGlvbih0KXt2YXIgaT10LnRhcmdldCxyPXtuYW1lOmkuZ2V0QXR0cmlidXRlKFwiZGF0YS12YWxpZGF0ZS1maWVsZFwiKSx2YWx1ZTppLmNoZWNrZWR9O2RlbGV0ZSBlLnJlc3VsdFtyLm5hbWVdLGUudmFsaWRhdGVJdGVtKHtuYW1lOnIubmFtZSx2YWx1ZTpyLnZhbHVlLGdyb3VwOltdfSksZS5yZW5kZXJFcnJvcnMoKX0pfWUuc2V0dGVyRXZlbnRMaXN0ZW5lcihuLFwia2V5dXBcIixlLmhhbmRsZXJLZXl1cCxcImFkZFwiKSxhfHxlLmVsZW1lbnRzLnB1c2goe25hbWU6byx2YWx1ZTpzLGdyb3VwOmx9KX0scj0wLG49dC5sZW5ndGg7cjxuOysrcilpKHIsbik7dGhpcy52YWxpZGF0ZUVsZW1lbnRzKCl9LHZhbGlkYXRlUmVxdWlyZWQ6ZnVuY3Rpb24oZSl7cmV0dXJuIXRoaXMuaXNFbXB0eShlKX0sdmFsaWRhdGVFbWFpbDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pc0VtYWlsKGUpfSx2YWxpZGF0ZVBob25lOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmlzUGhvbmUoZSl9LHZhbGlkYXRlTWluTGVuZ3RoOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuY2hlY2tMZW5ndGhNaW4oZSx0KX0sdmFsaWRhdGVNYXhMZW5ndGg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5jaGVja0xlbmd0aE1heChlLHQpfSx2YWxpZGF0ZVN0cmVuZ3RoUGFzczpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5jaGVja1N0cmVuZ3RoUGFzcyhlKX0sdmFsaWRhdGVQYXNzd29yZDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pc1Bhc3N3b3JkKGUpfSx2YWxpZGF0ZVppcDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pc1ppcChlKX0sdmFsaWRhdGVSZW1vdGU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS52YWx1ZSxpPWUubmFtZSxyPWUudXJsLG49ZS5zdWNjZXNzQW5zd2VyLG89ZS5zZW5kUGFyYW0scz1lLm1ldGhvZDtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oZSl7aCh7dXJsOnIsbWV0aG9kOnMsZGF0YTpfZGVmaW5lUHJvcGVydHkoe30sbyx0KSxhc3luYzohMCxjYWxsYmFjazpmdW5jdGlvbih0KXt0LnRvTG93ZXJDYXNlKCk9PT1uLnRvTG93ZXJDYXNlKCkmJmUoXCJva1wiKSxlKHt0eXBlOlwiaW5jb3JyZWN0XCIsbmFtZTppfSl9LGVycm9yOmZ1bmN0aW9uKCl7ZSh7dHlwZTpcImVycm9yXCIsbmFtZTppfSl9fSl9KX0sZ2VuZXJhdGVNZXNzYWdlOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcj10aGlzLm1lc3NhZ2VzfHx0aGlzLmRlZmF1bHRNZXNzYWdlcyxuPXJbdF0mJnJbdF1bZV18fHRoaXMubWVzc2FnZXMmJlwic3RyaW5nXCI9PXR5cGVvZiB0aGlzLm1lc3NhZ2VzW3RdJiZyW3RdfHx0aGlzLmRlZmF1bHRNZXNzYWdlc1tlXXx8dGhpcy5ERUZBVUxUX1JFTU9URV9FUlJPUjtpJiYobj1uLnJlcGxhY2UoXCI6dmFsdWVcIixpLnRvU3RyaW5nKCkpKSx0aGlzLnJlc3VsdFt0XT17bWVzc2FnZTpufX0sdmFsaWRhdGVFbGVtZW50czpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIHRoaXMubG9ja0Zvcm0oKSx0aGlzLmVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24odCl7ZS52YWxpZGF0ZUl0ZW0oe25hbWU6dC5uYW1lLHZhbHVlOnQudmFsdWUsZ3JvdXA6dC5ncm91cH0pfSksdGhpcy5wcm9taXNlc1JlbW90ZS5sZW5ndGg/dm9pZCBQcm9taXNlLmFsbCh0aGlzLnByb21pc2VzUmVtb3RlKS50aGVuKGZ1bmN0aW9uKHQpe3QuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm5cIm9rXCI9PT10P3ZvaWQgZS5yZW5kZXJFcnJvcnMoKTooXCJlcnJvclwiPT09dC50eXBlJiZhbGVydChcIlNlcnZlciBlcnJvciBvY2N1cmVkLiBQbGVhc2UgdHJ5IGxhdGVyLlwiKSxlLmdlbmVyYXRlTWVzc2FnZShsLHQubmFtZSksdm9pZCBlLnJlbmRlckVycm9ycygpKX0pfSk6dm9pZCB0aGlzLnJlbmRlckVycm9ycygpfSx2YWxpZGF0ZUl0ZW06ZnVuY3Rpb24oZSl7dmFyIGM9dGhpcyxoPWUubmFtZSxmPWUuZ3JvdXAsbT1lLnZhbHVlLHY9ZS5pc0tleXVwQ2hhbmdlLHA9dGhpcy5ydWxlc1toXXx8dGhpcy5kZWZhdWx0UnVsZXNbaF18fCExO2lmKHApZm9yKHZhciBnIGluIHApe3ZhciB5PXBbZ107aWYoZyE9PXQmJmchPT1kJiZcIlwiPT1tKXJldHVybjtzd2l0Y2goZyl7Y2FzZSBkOmlmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHkpYnJlYWs7aWYoeShoLG0pKWJyZWFrO3JldHVybiB2b2lkIHRoaXMuZ2VuZXJhdGVNZXNzYWdlKGQsaCx5KTtjYXNlIHQ6aWYoIXkpYnJlYWs7aWYoZi5sZW5ndGgpe3ZhciBiPSExO2lmKGYuZm9yRWFjaChmdW5jdGlvbihlKXtjLnZhbGlkYXRlUmVxdWlyZWQoZSkmJihiPSEwKX0pLGIpYnJlYWt9ZWxzZSBpZih0aGlzLnZhbGlkYXRlUmVxdWlyZWQobSkpYnJlYWs7cmV0dXJuIHZvaWQgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UodCxoKTtjYXNlIGk6aWYoIXkpYnJlYWs7aWYodGhpcy52YWxpZGF0ZUVtYWlsKG0pKWJyZWFrO3JldHVybiB2b2lkIHRoaXMuZ2VuZXJhdGVNZXNzYWdlKGksaCk7Y2FzZSByOmlmKCF5KWJyZWFrO2lmKHRoaXMudmFsaWRhdGVNaW5MZW5ndGgobSx5KSlicmVhaztyZXR1cm4gdm9pZCB0aGlzLmdlbmVyYXRlTWVzc2FnZShyLGgseSk7Y2FzZSBuOmlmKCF5KWJyZWFrO2lmKHRoaXMudmFsaWRhdGVNYXhMZW5ndGgobSx5KSlicmVhaztyZXR1cm4gdm9pZCB0aGlzLmdlbmVyYXRlTWVzc2FnZShuLGgseSk7Y2FzZSBhOmlmKCF5KWJyZWFrO2lmKHRoaXMudmFsaWRhdGVQaG9uZShtKSlicmVhaztyZXR1cm4gdm9pZCB0aGlzLmdlbmVyYXRlTWVzc2FnZShhLGgpO2Nhc2UgbzppZigheSlicmVhaztpZih0aGlzLnZhbGlkYXRlUGFzc3dvcmQobSkpYnJlYWs7cmV0dXJuIHZvaWQgdGhpcy5nZW5lcmF0ZU1lc3NhZ2UobyxoKTtjYXNlIHU6aWYoIXl8fFwib2JqZWN0XCIhPT0oXCJ1bmRlZmluZWRcIj09dHlwZW9mIHk/XCJ1bmRlZmluZWRcIjpfdHlwZW9mKHkpKSlicmVhaztpZih5W1wiZGVmYXVsdFwiXSYmdGhpcy52YWxpZGF0ZVN0cmVuZ3RoUGFzcyhtKSlicmVhaztpZih5LmN1c3RvbSl7dmFyIEU9dm9pZCAwO3RyeXtFPW5ldyBSZWdFeHAoeS5jdXN0b20pfWNhdGNoKHcpe0U9dGhpcy5SRUdFWFAuc3RyZW5ndGhQYXNzLGNvbnNvbGUuZXJyb3IoXCJDdXN0b20gcmVnZXhwIGZvciBzdHJlbmd0aCBydWxlIGlzIG5vdCB2YWxpZC4gRGVmYXVsdCByZWdleHAgd2FzIHVzZWQuXCIpfWlmKEUudGVzdChtKSlicmVha31yZXR1cm4gdm9pZCB0aGlzLmdlbmVyYXRlTWVzc2FnZSh1LGgpO2Nhc2UgczppZigheSlicmVhaztpZih0aGlzLnZhbGlkYXRlWmlwKG0pKWJyZWFrO3JldHVybiB2b2lkIHRoaXMuZ2VuZXJhdGVNZXNzYWdlKHMsaCk7Y2FzZSBsOmlmKHYpYnJlYWs7aWYoIXkpYnJlYWs7dmFyIGs9eS51cmwsXz15LnN1Y2Nlc3NBbnN3ZXIsUD15Lm1ldGhvZCxSPXkuc2VuZFBhcmFtLFM9dGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtkYXRhLXZhbGlkYXRlLWZpZWxkPVwiJytoKydcIl0nKTtyZXR1cm4gdGhpcy5zZXR0ZXJFdmVudExpc3RlbmVyKFMsXCJrZXl1cFwiLHRoaXMuaGFuZGxlcktleXVwLFwicmVtb3ZlXCIpLHZvaWQgdGhpcy5wcm9taXNlc1JlbW90ZS5wdXNoKHRoaXMudmFsaWRhdGVSZW1vdGUoe25hbWU6aCx2YWx1ZTptLHVybDprLG1ldGhvZDpQLHNlbmRQYXJhbTpSLHN1Y2Nlc3NBbnN3ZXI6X30pKX19fSxjbGVhckVycm9yczpmdW5jdGlvbigpe2Zvcih2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmpzLXZhbGlkYXRlLWVycm9yLWxhYmVsXCIpLHQ9MCxpPWUubGVuZ3RoO3Q8aTsrK3QpZVt0XS5yZW1vdmUoKTtlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuanMtdmFsaWRhdGUtZXJyb3ItZmllbGRcIik7Zm9yKHZhciByPTAsbj1lLmxlbmd0aDtyPG47KytyKWVbcl0uY2xhc3NMaXN0LnJlbW92ZShcImpzLXZhbGlkYXRlLWVycm9yLWZpZWxkXCIpLGVbcl0uc3R5bGUuYm9yZGVyPVwiXCIsZVtyXS5zdHlsZS5jb2xvcj1cIlwifSxyZW5kZXJFcnJvcnM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKHRoaXMuY2xlYXJFcnJvcnMoKSx0aGlzLnVubG9ja0Zvcm0oKSx0aGlzLmlzVmFsaWRhdGlvblN1Y2Nlc3M9ITEsMD09PU9iamVjdC5rZXlzKHRoaXMucmVzdWx0KS5sZW5ndGgpcmV0dXJuIHZvaWQodGhpcy5pc1ZhbGlkYXRpb25TdWNjZXNzPSEwKTtmb3IodmFyIHQgaW4gdGhpcy5yZXN1bHQpe3ZhciBpPXRoaXMucmVzdWx0W3RdLm1lc3NhZ2Uscj10aGlzLiRmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXZhbGlkYXRlLWZpZWxkPVwiJyt0KydcIl0nKSxuPXJbci5sZW5ndGgtMV0sbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2lmKG8uaW5uZXJIVE1MPWksby5jbGFzc05hbWU9XCJqcy12YWxpZGF0ZS1lcnJvci1sYWJlbFwiLG8uc2V0QXR0cmlidXRlKFwic3R5bGVcIixcImNvbG9yOiBcIit0aGlzLmNvbG9yV3JvbmcpLG4uc3R5bGUuYm9yZGVyPVwiMXB4IHNvbGlkIFwiK3RoaXMuY29sb3JXcm9uZyxuLnN0eWxlLmNvbG9yPVwiXCIrdGhpcy5jb2xvcldyb25nLG4uY2xhc3NMaXN0LmFkZChcImpzLXZhbGlkYXRlLWVycm9yLWZpZWxkXCIpLFwiY2hlY2tib3hcIj09PW4udHlwZXx8XCJyYWRpb1wiPT09bi50eXBlKXt2YXIgcz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdsYWJlbFtmb3I9XCInK24uZ2V0QXR0cmlidXRlKFwiaWRcIikrJ1wiXScpO1wibGFiZWxcIj09PW4ucGFyZW50Tm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCk/bi5wYXJlbnROb2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG8sbnVsbCk6cz9zLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG8scy5uZXh0U2libGluZyk6bi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShvLG4ubmV4dFNpYmxpbmcpfWVsc2Ugbi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShvLG4ubmV4dFNpYmxpbmcpfXRoaXMudG9vbHRpcFNlbGVjdG9yV3JhcC5sZW5ndGgmJih0aGlzLnN0YXRlLnRvb2x0aXBzVGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe2UuaGlkZVRvb2x0aXBzKCl9LHRoaXMudG9vbHRpcEZhZGVPdXRUaW1lKSl9LGhpZGVUb29sdGlwczpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmpzLXZhbGlkYXRlLWVycm9yLWxhYmVsXCIpO3QuZm9yRWFjaChmdW5jdGlvbih0KXt0LmNsYXNzTGlzdC5hZGQoZS50b29sdGlwRmFkZU91dENsYXNzKX0pLHRoaXMuc3RhdGUudG9vbHRpcHNUaW1lcj1udWxsfSxsb2NrRm9ybTpmdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLiRmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dCwgdGV4dGFyZWEsIGJ1dHRvbiwgc2VsZWN0XCIpLHQ9MCxpPWUubGVuZ3RoO3Q8aTsrK3QpZVt0XS5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLFwiZGlzYWJsZWRcIiksZVt0XS5zdHlsZS5wb2ludGVyRXZlbnRzPVwibm9uZVwiLGVbdF0uc3R5bGUud2ViaXRGaWx0ZXI9XCJncmF5c2NhbGUoMTAwJSlcIixlW3RdLnN0eWxlLmZpbHRlcj1cImdyYXlzY2FsZSgxMDAlKVwifSx1bmxvY2tGb3JtOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuJGZvcm0ucXVlcnlTZWxlY3RvckFsbChcImlucHV0LCB0ZXh0YXJlYSwgYnV0dG9uLCBzZWxlY3RcIiksdD0wLGk9ZS5sZW5ndGg7dDxpOysrdCllW3RdLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpLGVbdF0uc3R5bGUucG9pbnRlckV2ZW50cz1cIlwiLGVbdF0uc3R5bGUud2ViaXRGaWx0ZXI9XCJcIixlW3RdLnN0eWxlLmZpbHRlcj1cIlwifX0sZS5KdXN0VmFsaWRhdGU9Zn0od2luZG93KTsiLCJjb25zdCBzZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFt0eXBlPSd0ZWwnXVwiKTtcclxuaWYgKHNlbGVjdG9yKSB7XHJcbiAgY29uc3QgaW0gPSBuZXcgSW5wdXRtYXNrKFwiKzcgKDk5OSktOTk5LTk5LTk5XCIpO1xyXG4gIGltLm1hc2soc2VsZWN0b3IpO1xyXG4gIG5ldyBKdXN0VmFsaWRhdGUoXCIuZm9ybVwiLCB7XHJcbiAgICBydWxlczoge1xyXG4gICAgICBuYW1lOiB7XHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgbWluTGVuZ3RoOiAyLFxyXG4gICAgICAgIG1heExlbmd0aDogMTAsXHJcbiAgICAgIH0sXHJcbiAgICAgIHRlbDoge1xyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgIGZ1bmN0aW9uOiAobmFtZSwgdmFsdWUpID0+IHtcclxuICAgICAgICAgIGNvbnN0IHBob25lID0gc2VsZWN0b3IuaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKTtcclxuICAgICAgICAgIHJldHVybiBOdW1iZXIocGhvbmUpICYmIHBob25lLmxlbmd0aCA9PT0gMTA7XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBtZXNzYWdlczoge1xyXG4gICAgICBuYW1lOiB7XHJcbiAgICAgICAgcmVxdWlyZWQ6IFwi0JLRiyDQvdC1INCy0LLQtdC70Lgg0LjQvNGPXCIsXHJcbiAgICAgICAgbWluTGVuZ3RoOiBcItCc0LjQvdC40LzRg9C8IDIg0YHQuNC80LLQvtC70LBcIixcclxuICAgICAgICBtYXhMZW5ndGg6IFwi0JzQsNC60YHQuNC80LDQu9GM0L3QviAxMCDRgdC40LzQstC+0LvQvtCyXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIHRlbDoge1xyXG4gICAgICAgIHJlcXVpcmVkOiBcItCS0Ysg0L3QtSDQstCy0LXQu9C4INGC0LXQu9C10YTQvtC9XCIsXHJcbiAgICAgICAgZnVuY3Rpb246IFwi0J3QtdCy0LXRgNC90YvQuSDQvdC+0LzQtdGAXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH0pO1xyXG59XHJcblxyXG5sZXQgY2hlY2tDbGFzc1N3aXBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2lwZXInKTtcclxuaWYgKGNoZWNrQ2xhc3NTd2lwZXIpIHtcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3Qgc3dpcGVyID0gbmV3IFN3aXBlcignLnN3aXBlcicsIHtcclxuXHJcbiAgICAgIG9ic2VydmVyOiB0cnVlLFxyXG4gICAgICBvYnNlcnZlUGFyZW50czogdHJ1ZSxcclxuXHJcbiAgICAgIGxhenk6IHtcclxuICAgICAgICBsb2FkT25UcmFuc2l0aW9uU3RhcnQ6IGZhbHNlLFxyXG4gICAgICAgIGxvYWRQcmV2TmV4dDogZmFsc2UsXHJcbiAgICAgIH0sXHJcblxyXG4gICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiB0cnVlLFxyXG4gICAgICB3YXRjaFNsaWRlc1Zpc2liaWxpdHk6IHRydWUsXHJcbiAgICAgIFxyXG4gICAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgICAgbmV4dEVsOiAnLmJ1dHRvbl9fbmV4dCcsXHJcbiAgICAgICAgcHJldkVsOiAnLmJ1dHRvbl9fcHJldicsXHJcbiAgICAgIH0sXHJcbiAgICAgIFxyXG4gICAgICBncmFiQ3Vyc29yOiB0cnVlLFxyXG4gICAgICBcclxuICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgIG9ubHlWaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICBwYWdlVXBEb3duOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBcclxuICAgICAgbW91c2V3aGVlbDoge1xyXG4gICAgICAgIHNlbnNpdGl2aXR5OiAxLFxyXG4gICAgICAgIGV2ZW50c1RhcmdldDogXCIuc3dpcGVyLXNsaWRlXCJcclxuICAgICAgfSxcclxuICAgICAgXHJcbiAgICAgIHdhdGNoT3ZlcmZsb3c6IGZhbHNlLFxyXG4gICAgICBcclxuICAgICAgcHJlbG9hZEltYWdlczogZmFsc2UsXHJcbiAgXHJcbiAgICAgIGxhenk6IHtcclxuICAgICAgICBsb2FkT25UcmFuc2l0aW9uU3RhcnQ6IGZhbHNlLFxyXG4gICAgICAgIGxvYWRQcmV2TmV4dDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICAgIFxyXG4gICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiB0cnVlLFxyXG4gICAgICB3YXRjaFNsaWRlc1Zpc2liaWxpdHk6IHRydWUsXHJcbiAgXHJcbiAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgIFxyXG4gICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgIDMyMDoge1xyXG4gICAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgICAgIHNsaWRlc1Blckdyb3VwOiAxLFxyXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxNSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIDU0MDoge1xyXG4gICAgICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuICAgICAgICAgIHNsaWRlc1Blckdyb3VwOiAyLFxyXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxNSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIDg2MDoge1xyXG4gICAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcclxuICAgICAgICAgIHNsaWRlc1Blckdyb3VwOiAzLFxyXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxNSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIDEyODA6IHtcclxuICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDQsXHJcbiAgICAgICAgICBzbGlkZXNQZXJHcm91cDogNCxcclxuICAgICAgICAgIHNwYWNlQmV0d2VlbjogMTUsXHJcbiAgICAgICAgfSxcclxuICAgICAgICAxNDUwOiB7XHJcbiAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA1LFxyXG4gICAgICAgICAgc2xpZGVzUGVyR3JvdXA6IDUsXHJcbiAgICAgICAgICBzcGFjZUJldHdlZW46IDE1LFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcblxyXG4gICAgICBhdXRvcGxheToge1xyXG4gICAgICAgIGRlbGF5OiAxMDAwLFxyXG4gICAgICAgIGRpc2FibGVPbkludGVyYWN0aW9uOiB0cnVlLFxyXG4gICAgICB9LFxyXG5cclxuICAgICAgc3BlZWQ6IDgwMCxcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuXHJcbmNvbnN0IGFuc3dlcnNfbGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaXRlbV9fYmxvY2tcIik7XHJcbmNvbnN0IGJhY2tncm91bmRfYWN0aXZlID0gXCJsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjOTY5QUY3IDAlLCAjNjg2RUVDIDEwMCUpXCI7XHJcbmNvbnN0IGJhY2tncm91bmQgPSBcImxpbmVhci1ncmFkaWVudChyZ2IoMjU1LCAyNTUsIDI1NSkgNTAuNTclLCByZ2IoMTg5LCAxOTIsIDI1NSkgMTAwJSlcIjtcclxubGV0IGZsYWcgPSB0cnVlO1xyXG5hbnN3ZXJzX2xpc3QuZm9yRWFjaChlbCA9PiB7XHJcbiAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBpY29uX2Nsb3NlID0gZWwuY2hpbGROb2Rlc1szXS5jaGlsZE5vZGVzWzFdLmNoaWxkTm9kZXNbM10uY2hpbGROb2Rlc1szXVxyXG4gICAgaWNvbl9vcGVuID0gZWwuY2hpbGROb2Rlc1szXS5jaGlsZE5vZGVzWzFdLmNoaWxkTm9kZXNbM10uY2hpbGROb2Rlc1sxXVxyXG4gICAgc3ZnX2NpcmNsZSA9IGVsLmNoaWxkTm9kZXNbM10uY2hpbGROb2Rlc1sxXS5jaGlsZE5vZGVzWzFdO1xyXG4gICAgaXRlbV9kZXNjciA9IGVsLm5leHRFbGVtZW50U2libGluZztcclxuXHJcbiAgICBpZiAoZmxhZykge1xyXG4gICAgICBlbC5zdHlsZS5iYWNrZ3JvdW5kID0gYmFja2dyb3VuZF9hY3RpdmU7XHJcbiAgICAgIGljb25fY2xvc2Uuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgaWNvbl9vcGVuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgc3ZnX2NpcmNsZS5zdHlsZS5maWxsID0gXCJ3aGl0ZVwiO1xyXG4gICAgICBpdGVtX2Rlc2NyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCJcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGVsLnN0eWxlLmJhY2tncm91bmQgPSBiYWNrZ3JvdW5kO1xyXG4gICAgICBpY29uX2Nsb3NlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgaWNvbl9vcGVuLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgIHN2Z19jaXJjbGUuc3R5bGUuZmlsbCA9IFwiIzc1N0FFRlwiO1xyXG4gICAgICBpdGVtX2Rlc2NyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxyXG4gICAgfVxyXG4gICAgZmxhZyA9ICFmbGFnO1xyXG4gIH0pXHJcbn0pXHJcblxyXG5cclxuY29uc3QgaGVhZGVyX3RvcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGVyX190b3BcIik7XHJcbmlmIChoZWFkZXJfdG9wKSB7XHJcbiAgbGV0IGRlYm91bmNlVGltZXI7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgIGlmIChkZWJvdW5jZVRpbWVyKSB7XHJcbiAgICAgIGNsZWFyVGltZW91dChkZWJvdW5jZVRpbWVyKTtcclxuICAgIH1cclxuICAgIGRlYm91bmNlVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgY29uc3Qgc2Nyb2xsUG9zaXRpb24gPSB3aW5kb3cuc2Nyb2xsWTtcclxuICAgICAgaWYgKHNjcm9sbFBvc2l0aW9uID4gMCkge1xyXG4gICAgICAgIGhlYWRlcl90b3AuY2xhc3NMaXN0LmFkZChcImhlYWRlcl9fdG9wLXNjcm9sbFwiKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBoZWFkZXJfdG9wLmNsYXNzTGlzdC5yZW1vdmUoXCJoZWFkZXJfX3RvcC1zY3JvbGxcIik7XHJcbiAgICAgIH1cclxuICAgIH0sIDMwKTtcclxuICB9KTtcclxufTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdfQ==
